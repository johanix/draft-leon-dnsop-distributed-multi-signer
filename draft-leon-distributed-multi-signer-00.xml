<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-leon-distributed-multi-signer-00" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Distributed Multi-Signer Bootstrap">Distributed DNSSEC Multi-Signer Bootstrap</title>

    <author initials="L." surname="Fernandez" fullname="Leon Fernandez">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>leon.fernandez@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="E." surname="Bergström" fullname="Erik Bergström">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>erik.bergstrom@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="J." surname="Stenstam" fullname="Johan Stenstam">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>johan.stenstam@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="S." surname="Crocker" fullname="Steve Crocker">
      <organization>Edgemoor Research Institute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>steve@shinkuro.com</email>
      </address>
    </author>

    <date />

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<section anchor="abstract"><name>Abstract</name>

<t>This document presents an architecture for a distributed DNSSEC
multi-signer model that most closely resembles "model 2" in
<xref target="RFC8901"/>.</t>

<t>It defines two multi-signer specific entities: the "multi-signer
agent" (MSA) that is responsible for the multi-signer process and the
"combiner", which is responsible for "combining" unsigned zone data
from the zone owner with zone data under control of the MSA. It
introduces a new DNS RRtype, HSYNC, that is used by the zone owner to
designate the chosen DNS Providers (signing and/or serving the
zone). Furthermore it describes a mechanism for the MSAs to establish
secure communication with each other, either via “pure DNS”
communication secured by DNS SIG(0) signatures on each message or via
a RESTful API secured by TLS. Finally, the document describes two
models for multi-signer process synchronization: “leader/follower
mode” and “peer mode” and the mechanism by which a set of MSAs decide
which model to use for a given zone.</t>

<t>The scope of the document is only the distributed aspect of DNSSEC
multi-signer up to the point where secure communication and
synchronization method between MSAs has been established. The
“multi-signer algorithms” that deal with the actual synchronization
required for multi-signer operation are described in
<xref target="I-D.draft-ietf-dnsop-dnssec-automation"/>.</t>

<t>TO BE REMOVED: This document is being collaborated on in Github at:
<eref target="https://github.com/johanix/draft-leon-dnsop-distributed-multi-signer">https://github.com/johanix/draft-leon-dnsop-distributed-multi-signer</eref>.
The most recent working version of the document, open issues, etc, should all be
available there.  The authors (gratefully) accept pull requests.</t>

</section>


    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>The issue of how to eliminate so-called "single points of failure"
from systems to make them more robust is a recurring theme in systems
design and so also for DNS. In the DNS case redundancy is addressed by
having multiple name servers for the same zone. However, when the zone
is DNSSEC-signed there is traditionally an additional single point of
failure: the so-called "signer" of the zone.</t>

<t>In multi-signer (<xref target="RFC8901"/>) model 2, a process is described by
which it is possible to use more than one signer (each with its own
set of keys), by having the signers (or their agents) communicate and
exchange data that should be signed by the other signer. The most
obvious example is that each signer's Key-Signing Key must sign a
DNSKEY RRset that contains the Zone-Signing Keys for all signers.</t>

<t>To synchronize data between signers two models are possible: either a
"centralized" model where a single "controller" decides what changes
are needed, or a "distributed" model where the signers themselves (or
an agent of each signer) decide what changes are needed.</t>

<t>The first model has been implemented previously, and while it works
from a technical point of view, it is not a good solution from a risk
management point of view. The primary problem is that the signers have
difficulty accepting that an external third party (the controller) has
the ability to modify data (in a customer zone).</t>

<t>This document is an attempt to address the synchronization problem by
proposing a distributed model without a central controller.</t>

<t>The communication between signers has two parts: first it is necessary
to find out what data each signer has for a zone. Once all data has
been collected it is possible to compute what changes are needed to
the zone data at each signer. That triggers the second phase where the
zone data for the individual signers is changed to get them in sync
with each other. All of this is done automatically.</t>

<t>However, from a slightly different perspective, the multi-signer
alternative is the more general case of DNSSEC signing, with the (very
common) case of a single signer being a special case.</t>

<t>From that point of view, this document proposes an architecture for a
completely automated, distributed multi-signer model together with a
seamless transition path from the current single-signer model to the
multi-signer model. From the zone owners point of view, the transition
is done through the addition of a new RRtype, HSYNC, that is used to
designate the chosen DNS Providers, their responsibilities and
information to enable the DNS Providers to locate each other.</t>

<t>Knowledge of DNS NOTIFY <xref target="RFC1996"/> and DNS Dynamic Updates
<xref target="RFC2136"/> and <xref target="RFC3007"/> is assumed. DNS SIG(0) transaction
signatures are documented in <xref target="RFC2931"/>.</t>

<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "<strong>MUST</strong>", "<strong>MUST NOT</strong>", "<strong>REQUIRED</strong>", "<strong>SHALL</strong>",
"<strong>SHALL NOT</strong>", "<strong>SHOULD</strong>", "<strong>SHOULD NOT</strong>", "<strong>RECOMMENDED</strong>",
"<strong>NOT RECOMMENDED</strong>", "<strong>MAY</strong>", and "<strong>OPTIONAL</strong>" in this document
are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<t>...</t>

</section>
<section anchor="requirements"><name>Requirements</name>

<t>The requirements for an architecture for distributed multi-signer are
defined as follows:</t>

<t><list style="symbols">
  <t>Assuming all zone transfers are correctly set up, a zone owner MUST
be able to signal to the individual multi-signer providers
information sufficient for the providers to identify each other and
establish secure communication.</t>
  <t>The zone owner MUST be able to signal the intent to onboard an
additional multi-signer provider. This MUST automatically initiate
the multi-signer “add signer” process, as described in <xref target="RFC8901"/>.</t>
  <t>The zone owner MUST be able to signal the intent to offboard an
existing multi-signer provider. This MUST automatically initiate
the multi-signer “remove signer” process, as described in <xref target="RFC8901"/>.</t>
  <t>All signalling from zone owner to multi-signer providers SHOULD be
carried out via data in the served zone, to ensure that all
providers get the same configuration information at (almost) the
same time.</t>
  <t>By engaging a set of multi-signer providers (one or more), the zone
owner MUST give up control over the following records:
  <list style="symbols">
      <t>All DNSSEC related records in the zone</t>
      <t>Any CDS and/or CSYNC RRsets</t>
    </list></t>
  <t>It SHOULD be possible but NOT MANDATORY for the zone owner to also
delegate the management of the NS RRset to the set of DNS
Providers.</t>
</list></t>

</section>
<section anchor="multi-signer-use-cases"><name>Multi-Signer Use Cases</name>

<section anchor="primary-use-case"><name>Primary Use Case</name>

<t>The primary use case for the proposed multi-signer architecture is the
following scenario: A zone owner needs to remove the single point of
failure that the DNSSEC signer constitutes. For this reason it
contracts with two or more “multi-signer capable” DNS providers.
Each such DNS provider provides the following service:</t>

<t><list style="symbols">
  <t>Receive the unsigned zone via zone transfer.</t>
  <t>Locate all active DNS Providers via the HSYNC RRset as published by
the zone owner. Establish secure communication with all remote DNS
Providers (via their agents).</t>
  <t>Update the DNSKEY, CDS and CSYNC RRsets as needed, based on
synchronization with the remote signers (or their agents).</t>
  <t>Update the NS RRset if allowed by the zone owner, based on
synchronization with the remote DNS Providers (or their agents).</t>
  <t>Sign the zone, using own DNSKEYs, but with a published DNSKEY RRset
that includes the DNSKEYs of other signers.</t>
  <t>Possibly distribute the signed zone to a set of downstream
authoritative nameservers under own control.</t>
  <t>Possbly distribute the signed zone to non-signing downstream DNS
Providers.</t>
</list></t>

</section>
<section anchor="secondary-use-case"><name>Secondary Use Case</name>

<t>A slightly different use case is where a zone owner has a desire to
replace one DNSSEC-signing DNS provider with another. In the first
step it onboards the new DNS provider by adding a HSYNC RR with HSYNC
State=“ON” thereby identifying the new DNS provider and signalling its
role. This informs both the present DNS providers and the incoming DNS
provider about the addition of the new DNS provider and the onboarding
process is automatically initiated.</t>

<t>Once the onboarding operation is completed the zone owner may trigger
the pending removal of another DNS provider by changing the HSYNC
State flag for the outgoing DNS Provider to “OFF”. This informs all
the present DNS providers about the pending removal and the
offboarding process is automatically initiated.</t>

</section>
<section anchor="tertiary-use-case"><name>Tertiary Use Case</name>

<t>A third use case is where a zone owner wants to migrate from a
single-signer model to a multi-signer model, but as a first step only
wants to transition the existing signer to be designated via a single
HSYNC record. Once that is done the zone owner can continue the
transition to a full multi-signer model at a later time by adding more
HSYNC records.</t>

</section>
</section>
<section anchor="the-distributed-multi-signer-model"><name>The Distributed Multi-Signer Model</name>

<t>The primary difference between monolithic and distributed multi-signer
is that the former has a central “controller” while the latter
doesn’t. But there is still an absolute need for synchronization
between the different participants in the distributed multi-signer
setup.</t>

<t>There are three immediate aspects for the design of a distributed
multi-signer architecture:</t>

<t><list style="symbols">
  <t>The first is “transport”: how to communicate between the
individual instances in a multi-signer system.</t>
  <t>The second is “synchronization”: who decides what changes are
needed where.</t>
  <t>The third is source of truth for different types of zone data. The
zone owner is the source of truth for all unsigned zone data,
except DNSSEC data. The signer is the source of truth for all
DNSSEC data in the zone. Traditionally, the source of truth for the
NS RRset is the zone owner, but with multiple DNS Providers having
the option of moving that responsibility to the DNS Providers would
be an important improvement.</t>
</list></t>

<section anchor="multi-signer-agent-integrated-signer-vs-separate-agent"><name>Multi-Signer Agent: Integrated Signer vs Separate Agent</name>

<t>In a distributed setup there must be a service located with each
multi-signer DNS Provider that manages communication with other DNS
Providers. This is referred to as the multi-signer agent, or MSA. As
not every DNS Provider needs to be signing the zone, the term is not
entirely perfect, but sufficient.</t>

<t>It is possible to implement support for the synchronization and
communication needs directly into each “signer” (i.e. typically an
authoritative nameserver with the ability to do online DNSSEC
signing). In this case the signer implements the MSA functionality.</t>

<t>However, it is also possible to separate the multi-signer
functionality into a separate agent. This agent sits next to the
signer, and is under the same administrative control (the "DNS
Provider"), but is a separate piece of software. When using this
design each signer has an MSA attached next to it. Each MSA is
configured as a “secondary nameserver” to a signer and receives the
(signed) zone from this signer.</t>

<t>The “separate MSA” design has the major advantage of leaving the
signer almost entirely out of the multi-signer complexity. The
requirements are only that the “signer” treats the MSA as a normal
secondary (sends NOTIFY messages and responds to zone transfer
requests) and that the MSA has a mechanism that allows it to make
changes to zones upstream of the “signer” to satisfy the multi-signer
requirements for synchronization of certain RRsets in the apex of the
zone.</t>

<t>In this document the design using a separate MSA is used, while
pointing out that it is possible to integrate this into a future
“signer” that implements both DNSSEC signing and the MSA
functionality.</t>

</section>
<section anchor="source-of-truth"><name>Source of Truth</name>

<t>A common design for DNSSEC signing (regardless of multi-signer) is to
use a separate, bump-on-the-wire signer. This is a signer that
receives the unsigned zone via an incoming zone transfer, signs the
zone, and publishes the signed zone via an outbound zone transfer. In
such a design the source of truth has been split up between the “zone
owner” (source of truth for all non-DNSSEC zone data), and the signer
(source of truth for all DNSSEC data in the zone).</t>

<t>In a distributed multi-signer architecture the source of truth is
further split up into three participants:</t>

<t><list style="symbols">
  <t>The zone owner is the source of truth for all unsigned zone data,
except DNSSEC data and possibly the NS RRset.</t>
  <t>The signer is the source of truth for all data generated via DNSSEC
signing: own DNSKEYs, NSEC/NSEC3 RRs, RRSIGs, etc.</t>
  <t>The MSA is the source of truth for the RRsets that must be kept in
sync across all the signers for the zone. This includes the DNSKEYs
from other signers, CDS and CSYNC RRsets. Possibly also the NS RRset.</t>
</list></t>

<t>The NS RRset is an interesting special case. Traditionally the NS
RRset is maintained by the zone owner, but based on data from the DNS
providers (as authoritative nameservers is a primary service for the
DNS provider). However, in a distributed multi-signer architecture the
NS RRset should preferably be maintained by the MSA. For this reason
the proposed design makes control of the NS RRset explicit and the
responsibility of the zone owner to choose whether to retain control
or delegate to the MSAs. Hence:</t>

<t><list style="symbols">
  <t>The MSA is the source of truth for the NS RRset, subject to the
policy of the zone owner, as described in the HSYNC RRset.</t>
</list></t>

<t>Making the control of the NS RRset explicit is useful regardless of
whether a zone uses multiple signers or single signer.</t>

<t>To be able to keep the signer as simple as possible, the changes to the
NS, DNSKEY, CDS and CSYNC RRsets must be introduced into the unsigned
zone before the zone reaches the signer. Likewise, to keep the zone
owner as simple as possible (i.e. not involved in the details of the
multi-signer automation) these changes must be introduced into the
unsigned zone after the zone leaves the zone owner.</t>

<section anchor="the-combiner"><name>The COMBINER</name>

<t>The consequence of these requirements is that the DNSKEY, CDS and
CSYNC RRsets (and possibly the NS RRset) are maintained via a separate
piece of software inserted between the zone owner and the signer. This
is referred to as the multi-signer COMBINER.</t>

<t>The COMBINER has the following features:</t>

<t><list style="symbols">
  <t>It supports inbound zone transfer of the unsigned zone from the
zone owner.</t>
  <t>It receives updates for the NS, DNSKEY, CDS and CSYNC
RRsets from the MSA. Typically the mechanism used is DNS UPDATE
with a TSIG signature, as this is easy to configure in a local
context. However, other mechanisms, including APIs, are possible.</t>
  <t>It stores all data received from the MSA separate from
the zone data received from the zone owner.</t>
  <t>Whenever it receives a new unsigned zone from the zone owner it
COMBINES zone data from the zone owner (the majority of the zone)
with specific zone data under control of the MSA: three specific
RRsets, all in the apex of the zone: the DNSKEY,CDS and CSYNC
RRsets.</t>
  <t>It is policy free. I.e. the COMBINER is not making any judgement
about what data to include in the zone from the four defined
RRsets.  That judgement is the role of the MSA.</t>
  <t>It does not sign the zone.</t>
  <t>It provides outbound zone transfer of the combined zone to the
signer.</t>
</list></t>

<t>Example setup with two signers showing the logical flow of zone data
between the zone owner, the COMBINER, the signer and the MSA:</t>

<figure><artwork><![CDATA[
                            +--------------+
                            |     owner    |
               xfr          +-+---------+--+    xfr
            /----------------/           \--------------------\
           /                                                   \
    +-----+----+    DNS  +-----+  DNS/API  +-----+  DNS    +----+-----+
    | combiner +<--------+ msa +-----------+ msa +-------->+ combiner |
    +-----+----+  UPDATE +--+--+           +--+--+ UPDATE  +----+-----+
          |                 ^                 ^                 |
          v xfr             |                 |                 v xfr
    +-----+----+     xfr    |                 |   xfr      +----+-----+
    |  signer  +------------+                 +------------+  signer  |
    +-----+----+                                           +----+-----+
          |                                                     |
          v                                                     v
       +--+--+                                               +--+--+
       | NS  |--+                                            | NS  |+
       +-----+  |--+                                         +-----+|-+
          +-----+  |                                            +---+ |
             +-----+                                              +---+
]]></artwork></figure>

</section>
</section>
<section anchor="the-dns-provider"><name>The DNS Provider</name>

<t>A "DNS Provider" is a term that is most commonly used to refer to an
entity that provides authoritative DNS service to one or more zone
owners. In the context of this document it is used to refer to an
entity that provides some subset of the following services:</t>

<t><list style="symbols">
  <t>Signing a zone received from the zone owner.</t>
  <t>Serving the zone via a set of authoritative nameservers.</t>
  <t>Distributing the signed zone to other downstream DNS Providers.</t>
</list></t>

<t>In addition to the above services a DNS Provider MUST also provide:</t>

<t><list style="symbols">
  <t>An MSA for synchronization with other DNS Providers</t>
  <t>A COMBINER for the management of changes to the zone via<br />
the synchronization among MSAs (if it provides a signer)</t>
</list></t>

<t>I.e. in the setup above there are two DNS Providers, both of which are
"complete" in the sense that they provide all three of the above
services.</t>

</section>
</section>
<section anchor="identifying-the-designated-signers"><name>Identifying the Designated Signers</name>

<t>It is the responsibility of the zone owner to choose a set of "DNS
Providers", either internal or external to the zone owners
organization. These DNS Providers MUST be clearly and uniquely
designated via publication in the HSYNC RRset, located at the apex of
the zone and consisting of one HSYNC record for each signer.</t>

<t>The HSYNC RRset MUST be added, by the zone owner, to the, typically
unsigned, zone that the zone owner maintains so that this RRset is
visible to the downstream DNS Providers and their multi-signer agents.</t>

</section>
<section anchor="the-hsync-rrset"><name>The HSYNC RRset</name>

<t>The HSYNC RR has the zone name that publishes the HSYNC RRset as the
owner name (i.e. the HSYNC RRset must be located at the apex of the
zone). The RDATA consists of four fields "State","NSMgmt", "Sign" and
"Identity":</t>

<t>zone.example.    IN HSYNC  State  NSMgmt  Sign  Identity.</t>

<t>State:
    Unsigned 8-bit. Defined values are 1=ON and 2=OFF. The value 0
    is an error.  Values 3-127 are presently undefined. Values 128-255
    are reserved for private use. The presentation format allows
    either as integers (1 or 2) or as tokens (“ON” or “OFF”).</t>

<t>NSMgmt:
    Unsigned 8-bit. Defined values are 1=Zone owner and 2=MSA. The
    value 0 is an error. Values 3-255 are presently undefined (and not
    expected to be defined). The presentation format allows either as
    integers (1 or 2) or as tokens (“OWNER” or “AGENT”).</t>

<t>Sign:
    Unsigned 8-bit. Defined values are 1=YES and 2=NO. The value 0 is an
    error. If Sign=YES for a particular HSYNC record, then the signer
    associated with that Identity is a designated signer for the zone.</t>

<t>Identity:
    Domain name. Used to uniquely identify the Multi-Signer
    Agent for the DNS Provider that the MSA represents.</t>

<t>Example:</t>

<t>zone.example.   IN HSYNC  ON  AGENT  YES  msa.provider.example.</t>

<section anchor="semantics-of-the-hsync-state-field"><name>Semantics of the HSYNC State Field</name>

<t>The HSYNC State field is used to signal to all MSAs what the status of
each MSA is from the point-of-view of the zone owner. The two possible
values are "ON" and "OFF" where "ON" means that the MSA is a currently
designated signer for the zone and "OFF" means that the MSA is
previously designated signer for the zone that is in the process of
being offboarded.</t>

<t>The reason for the "OFF" state is that the offboarding process
involves the remaining signers (hence the signalling) and it is
important to know which signer is being offboarded so that the correct
data may be removed in the correct order during the multi-signer
"remove signer" process (see <xref target="RFC8901"/>).</t>

<t>Once the offboarding process is complete the HSYNC RR for the
offboarded MSA may be removed from the zone at the zone owners
discretion.</t>

</section>
<section anchor="semantics-of-the-hsync-nsmgmt-field"><name>Semantics of the HSYNC NSMgmt Field</name>

<t>The NSMgmt field is used to signal to the MSAs who is responsible for
the contents of the NS RRset for the zone. The two possible values are
"OWNER" and "AGENT".</t>

<t>The value "OWNER" signals that the zone owner is responsible for the NS
RRset and is responsible for updating the NS RRset (either with or
without the unified data from all MSAs). In this case the MSAs MUST NOT
instruct the COMBINER to update the NS RRset.</t>

<t>The value "AGENT" means that the MSAs representing DNS Providers that
sign the zone are responsible for the contents of the NS RRset. In
this case the these MSAs MUST instruct the COMBINER to update the NS
RRset with the unified NS RRset data from all MSAs.</t>

<section anchor="limitation-of-scope-for-ns-management"><name>Limitation of Scope for NS Management</name>

<t>For the purpose of this document the NSMgmt Field only covers the NS
RRset. I.e. it does not include the address records of in-bailiwick
authoritative nameservers. The reasons are:</t>

<t><list style="symbols">
  <t>Limiting the possibility of DNS Providers "polluting" the name space
of the zone.</t>
  <t>Keeping the specification simpler, as the concept of "delegated" NS
management is new.</t>
</list></t>

<t>It is possible to make an argument for delegating management of
address records for in-bailiwick authoritative nameservers, but this
document does not.</t>

</section>
</section>
<section anchor="semantics-of-the-hsync-sign-field"><name>Semantics of the HSYNC Sign Field</name>

<t>The Sign field is used to signal to all MSAs whether the zone owner
requests that the DNS Provider that the MSA represents should sign the
zone or not. The two possible values are "YES" and "NO" where "YES"
means that the MSA represents a currently designated signer for the
zone and "NO" means that the MSA does not.</t>

<t>When Sign=NO the MSA MUST still participate in the communication
between MSAs for the zone, but MUST NOT instruct the COMBINER to
update the NS RRset.</t>

</section>
</section>
<section anchor="communication-between-msas"><name>Communication Between MSAs</name>

<t>For the communication between MSAs there are two choices that need to
be made among the designated MSAs for a zone. The first is what
"transport" to use for the communication. The second is what
"synchronization" model to use when executing future multi-signer
processes.</t>

<t>The two defined transport alternatives are:</t>

<t><list style="symbols">
  <t>DNS-based communication (mandatory to support)</t>
  <t>REST API-based communication</t>
</list></t>

<t>Each has pros and cons and at this point in time it is not clear that
one always is better than the other. To simplify the choice of
transport DNS-based communication is mandatory to support and the REST
API-based communication may only be used if all MSAs support
it. Supported transports are signaled in the Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>The two defined synchronization alternatives are:</t>

<t><list style="symbols">
  <t>Leader/Follower synchronization (mandatory to support)</t>
  <t>Peer-to-Peer synchronization</t>
</list></t>

<t>Just as for transport, supported synchronization models are signaled
in the Multi-Signer EDNS(0) Option (see section NNN below).</t>

<t>Regardless of the synchronization model and communication method used,
the MSAs SHOULD exchange all needed information about the zone and the
DNS Provider they represent to enable the multi-signer processes to
execute correctly. This includes notifications about changes to
DNSKEYs, changes to the NS RRset, etc. Depending on synchronization
model it may also include instructions for changes to the zone.</t>

<section anchor="msa-communication-via-dns"><name>MSA Communication via DNS</name>

<t>This transport alternative is based on the observation that all the
communication needs between MSAs can be expressed via DNS
messages. Notifications are sent as DNS NOTIFY messages. Requests for
changes to a zone are sent as DNS UPDATE messages, etc. The sole
remaining communication requirement is for how to communicate
information about the current state between MSAs in an ongoing
multi-signer process. For this reason a dedicated EDNS(0) opcode
specifically for multi-signer synchronization is proposed.</t>

<t>This model is based on <xref target="I-D.draft-berra-dnsop-keystate"/> that solves
a similar problem for delegation synchronization between child and
parent, which has already been implemented and shown to work.</t>

</section>
<section anchor="msa-communication-via-rest-api"><name>MSA Communication via REST API</name>

<t>REST APIs are well-known and a natural fit for many distributed
systems. The challenge is mostly in the initial setup of secure
communication. The certificates need to be validated, preferably
without a requirement on trusting a third party CA. The API endpoints
for each MSA need to be located. Once secure communication has been
established, using a REST API for MSA communication is
straight-forward.</t>

</section>
<section anchor="locating-remote-multi-signer-agents"><name>Locating Remote Multi-Signer Agents</name>

<t>When an MSA receives a zone via zone transfer from the signer it will
analyze the zone to see whether it contains an HSYNC RRset. If there
is no HSYNC RRset the zone MUST be ignored by the MSA from the
point-of-view of multi-signer synchronization.</t>

<t>If, however, the zone does contain an HSYNC RRset then the MSA must
analyze this RRset to identify the other MSAs for the zone via their
target names in each HSYNC record. If any of the other MSAs listed in
the HSYNC RRset is previously unknown to this MSA then secure
communication with this other MSA MUST be established.</t>

<t>Secure communication can be achieved via various transports and it is
up to the MSAs in the zone's HSYNC records to determine amongst
themselves. This document proposes two transports: "DNS" and
"API". "DNS" is designated as as a baseline that MSAs MUST support to
be compliant.</t>

<t>The following two subsections describe the mechanism by which an MSA
SHOULD locate a remote MSA and establish secure DNS-based and
API-based communications, respectively.</t>

<section anchor="locating-a-remote-dns-method-multi-signer-agent"><name>Locating a Remote DNS-Method Multi-Signer Agent</name>

<t>Locating a remote MSA using the DNS mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate a URI record for the DNS protocol for
the HSYNC identity. This provides the domain name and port to
which DNS messages should be sent.</t>
  <t>Lookup and DNSSEC-validate the SVCB record of the URI record target
to get the IP addresses to use for communication with the remote
MSA. If the returned SVCB record includes a "port=NNN" hint then
this MUST be ignored. I.e. the port to use is defined by the URI
record.</t>
  <t>Lookup and DNSSEC-validate the KEY record of the URI record target
name.  This enables verification of the SIG(0) public key of the
remote MSA once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote MSA:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>The local MSA will look up the URI record for msa.provider.com:</t>

<t>_dns._tcp.msa.provider.com.  IN  URI  10 10 “dns://ns.msa.provider.com:5399/”
_dns._tcp.msa.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for ns.msa.provider.com. SVCB to get the IPv4
and IPv6 addresses as ipv4hints and ipv6hints in the response to the
SVCB query:</t>

<t>ns.msa.provider.com.   IN  SVCB  1 ipv4hint=5.6.7.8 ipv6hint=2001::53
ns.msa.provider.com.   IN  RRSIG SVCB …</t>

<t>and also a look up for the KEY record for ns.msa.provider.com, which
may look like this:</t>

<t>ns.msa.provider.com.  IN  KEY …
ns.msa.provider.com.  IN  RRSIG KEY …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local MSA is able to initiate communication with
the remote MSA and verify the identity of the responding party via the
validated KEY record for the remote MSAs SIG(0) public key.</t>

</section>
<section anchor="locating-a-remote-api-method-multi-signer-agent"><name>Locating a Remote API-Method Multi-Signer Agent</name>

<t>Locating a remote MSA using the API mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate the URI record for for the HTTPS protocol
for the HSYNC identity. This provides the base URL that will be used
to construct the individual API endpoints for the REST API. It also
provides the port to use.</t>
  <t>Lookup and DNSSEC-validate the SVCB record for the URI record
target.  This provides the IP-addresses to use for communication
with the MSA. If the returned SVCB record includes a "port=NNN" hint
then this MUST be ignored. I.e. the port to use is defined by the
URI record.</t>
  <t>Lookup and DNSSEC-validate the TLSA record for the port and protocol
specified in the URI record. This will enable verification of the
certificate of the remote MSA once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote MSA:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>the local MSA will look up the URI record for msa.provider.com:</t>

<t>_https._tcp.msa.provider.com.  IN  URI  10 10 “https://api.msa.provider.com:443/api/v2/”
_https._tcp.msa.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for api.msa.provider.com IPv4 and IPv6
addresses as hints in an SVCB RR:</t>

<t>api.msa.provider.com.   IN  SVCB 1 ipv4hint=1.2.3.4 ipv6hint=2001::bad:cafe:443
api.msa.provider.com.   IN  RRSIG SVCB …</t>

<t>Now we know the IP-address and the port as well as the base URL to
use. Finally the TLSA record for _443._tcp.api.msa.provider.com is
looked up, with a response that may look like this:</t>

<t>_443._tcp.api.msa.provider.com.  IN  TLSA 3 1 1 ….
  _443._tcp.api.msa.provider.com.  IN  RRSIG TLSA …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local MSA is able to initiate communication with
the remote MSA and verify the identity of the responding party via the
TLSA record for the remote MSAs certificate.</t>

<section anchor="fallback-to-dns-based-communication"><name>Fallback to DNS-based Communication</name>

<t>If the API-based communication fails, either because needed DNS
records are missing, the TLSA record fails to validate the remote MSAs
certificate or the remote MSA simply doesn't respond, the local MSA
MUST fall back to DNS-based communication.</t>

</section>
</section>
</section>
<section anchor="the-initial-hello-phase"><name>The Initial HELLO Phase</name>

<t>When two MSAs need to communicate with each other for the first time
(because they are both deisgnated signers for the same zone), they
need to establish secure communication. This is done in a "HELLO"
phase where the MSAs exchange information about their capabilities.</t>

<t>If all the information needed for API-based transport for the remote
party was available, the MSA SHOULD attempt an API-based HELLO. If,
however, this fails for some reason, it should fall back to DNS-based
HELLO.</t>

<section anchor="dns-based-hello-phase"><name>DNS-based HELLO Phase</name>

<t>When using DNS-based communication the HELLO phase is done by sending
a NOTIFY(SOA) for the zone that triggered the need for
communication. The NOTIFY message MUST contain a Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>In the Multi-Signer EDNS(0) Option the OPERATION field MUST have the
value "HELLO" (1). Furthermore, the MSA signals its transport and
synchronization capabilities in the TRANSPORT and SYNCHRONIZATION
fields. This message is signed with the SIG(0) key for the local MSA
for which the public key is published as a KEY record for the MSA.</t>

<t>In the response to the NOTIFY, the remote MSA does the same and the
two MSAs can now verify each other's identity and are also aware of
the other MSAs transport and synchronization capabilities.</t>

</section>
<section anchor="api-based-hello-phase"><name>API-based HELLO Phase</name>

<t>When using API-based communication the HELLO phase is done by sending
a REST API POST request to the remote MSA at the "/hello"
endpoint. The request MUST contain a JSON encoded object with the
following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the local MSA.</t>
  <t>"synchronization": The synchronization capabilities of the local MSA.</t>
</list></t>

<t>The response MUST contain a JSON object with the following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the remote MSA.</t>
  <t>"synchronization": The synchronization capabilities of the remote MSA.</t>
</list></t>

</section>
<section anchor="interpretation-of-the-hello-responses"><name>Interpretation of the HELLO Responses</name>

<t>Once an MSA has received HELLO responses from all other MSAs that are
designated signers for the zone, it knows the capabilities of the MSAs
as a group. It can then use this information to determine which
transport to use:</t>

<t><list style="symbols">
  <t>If all MSAs support API-based communication, the MSAs will use
API-based communication for this zone.</t>
  <t>If one or more MSAs only support DNS-based communication, the MSAs
will use DNS-based communication for this zone.</t>
</list></t>

<t>Likewise, each MSA now knows the synchronization capabilities of the
other MSAs and can determine which synchronization model to use:</t>

<t><list style="symbols">
  <t>If all MSAs support the Peer-to-Peer synchronization model, the MSAs
will use the Peer-to-Peer synchronization model for this zone.</t>
  <t>If one or more MSAs only support the Leader/Follower synchronization
model, the MSAs will use the Leader/Follower synchronization model
for this zone.</t>
</list></t>

</section>
</section>
<section anchor="multi-signer-edns0-option-format"><name>Multi-Signer EDNS(0) Option Format</name>

<t>This document uses an Extended Mechanism for DNS (EDNS0) <xref target="RFC6891"/>
option to include Multi-Signer synchronization information in DNS
messages.</t>

<t>This option is structured the same way as the KeyState option
described in <xref target="I-D.draft-berra-dnsop-keystate"/>, which has been
implemented and shown to work for a similar use case. The requirements
for multi-signer synchronization are sufficiently different that it is
not possible to re-use the KeyState OPT also for this purpose and
therefore a new EDNS(0) option is defined here.</t>

<t>The Multi-Signer EDNS(0) option is structured as follows:</t>

<figure><artwork><![CDATA[
                                               1   1   1   1   1   1 
       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5 
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 0:  |                            OPTION-CODE                        |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 2:  |                           OPTION-LENGTH                       |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 4:  |           OPERATION           |           TRANSPORT           |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 8:  |        SYNCHRONIZATION        |                               /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 
 10: / OPERATION-BODY                                                /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>Field definition details:</t>

<t>OPTION-CODE:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains the value TBD
    for Multi-Signer.</t>

<t>OPTION-LENGTH:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains
    the length of the payload (everything after OPTION-LENGTH) in
    octets and should be 4 plus the length of the OPERATION-BODY field
    (which may be zero octets long).</t>

<t>OPERATION:
    8 bits. Signals the type of operation the message
    performs. This document defines the two operations HELLO and
    HEARTBEAT. For a complete distributed multi-signer specification a
    number of additional operations will need to be allocated to be
    able to describe the states in the different multi-signer
    processes. This allocation must be done either in a revision to
    this document or in a subsequent document.</t>

<t>TRANSPORT:
    8 bits. Encodes the transport capabilities of the MSA. With
    8 bits it is possible to define up to 8 different transports of
    which this document defines two: DNS and API.</t>

<t>SYNCHRONIZATION:
    8 bits. Encodes the synchronization capabilities of
    the MSA. With 8 bits it is possible to define up to 8 different
    synchronization models of which this document defines two:
    Leader/Follower and Peer-to-Peer.</t>

<t>OPERATION-BODY:
    Variable-length. Used to carry operation-specific parameters.</t>

<section anchor="encoding-transport-capabilities-in-the-multi-signer-edns0-option"><name>Encoding Transport Capabilities in the Multi-Signer EDNS(0) Option</name>

<t>An MSA signals the union of its transport capabilities by setting the
corresponding bits to 1.</t>

<t>0: DNS transport supported (baseline, MUST be supported by all MSAs)</t>

<t>1: API transport supported</t>

<t>2: unused</t>

<t>3: unused</t>

<t>4: unused</t>

<t>5: unused</t>

<t>6: unused</t>

<t>7: unused</t>

</section>
<section anchor="encoding-synchronization-capabilities-in-the-multi-signer-edns0-option"><name>Encoding Synchronization Capabilities in the Multi-Signer EDNS(0) Option</name>

<t>An MSA signals its synchronization capabilities by setting the corresponding
bits to 1.</t>

<t>0: Leader/Follower synchronization supported (baseline, MUST be
   supported by all MSAs)</t>

<t>1: Peer-to-Peer synchronization supported</t>

<t>2: unused</t>

<t>3: unused</t>

<t>4: unused</t>

<t>5: unused</t>

<t>6: unused</t>

<t>7: unused</t>

</section>
</section>
</section>
<section anchor="sequence-diagram-example-of-establishing-secure-comms-the-hello-phase"><name>Sequence Diagram Example of Establishing Secure Comms - "The Hello Phase"</name>

<t>The procedure of locating another MSA and establishing a secure
communication, referred to as "The Hello Phase" is examplified in the
sequence diagram below.</t>

<t>The procedure is as follows:</t>

<t><list style="numbers">
  <t>The multisigner agents receive a zone via zone transfer. By
analyzing the HSYNC RRset each MSA become aware of the identities
of the other MSAs for the zone. I.e. each MSA knows which other
MSAs it needs to communicate with.  Communication with each of
these, previously unknown, remote MSAs is referred to as "NEEDED".</t>
  <t>Each MSA starts aquiring the information needed to establish secure
communications with any previously unknown MSAs. Here we only
illustrate the baseline case where DNS-based communications is to
be used in the following phase. Once all needed information has
been collected the communication with this remote MSA is considered
to be "KNOWN".</t>
  <t>Once an MSA has received the required information (URI, SVCB and
KEY records in the baseline case) it sends a NOTIFY message with a
dedicated Multi-Signer OPT code with OPERATION="HELLO". The sender
uses this OPT field to signal its transport and synchronization
capabilities. Similarly, the responder signals its capabilities
using the same field.</t>
  <t>When an MSA either gets a NOERROR response to its NOTIFY OPT(hello)
message or responds with a NOERROR, it transitions out of "The
Hello Phase" with the exchanging party and they transition to the
next phaste where they start sending NOTIFY OPT(heartbeat) signals
instead. The communication with the remote MSA is now considered to
be in the "OPERATIONAL" state.</t>
</list></t>

<t>In the case where one MSA is aware of the need to communicate with
another MSA, but the other is not (eg. the zone transfer was dealyed
for one of them), the slower one SHOULD respond with a RCODE=REFUSED
to any NOTIFY OPT(hello) it receives. Once it is ready, it will send
its own NOTIFY OPT(hello) which should be responded to with a
RCODE=NOERROR.</t>

<figure><artwork><![CDATA[
+----------+                 +----------+                        +----------+
|  Owner   |                 |  MSA A   |                        |  MSA B   |
+----------+                 +----------+                        +----------+
     |                            |                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |--------------------------->|                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |---------------------------------------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  QUERY _dns._tcp.msa-b.se. URI?    |
     |                            |----------------------------------->|
     |                            |  QUERY ns.msa-b.se. SVCB?          |
     |                            |----------------------------------->|
     |                            |  QUERY ns.msa-b.se. KEY?           |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(hello)     |
     |                            |----------------------------------->|
     |                            |  NOERROR sign-me.se. OPT(hello)    |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |                                    |

]]></artwork></figure>

</section>
<section anchor="synchronization-of-changes-between-msas"><name>Synchronization of Changes Between MSAs</name>

<t>There are two defined models for synchronization. The first
(Leader/Follower) has the advantage of more clearly mapping to the
original multi-signer model 2, with a single controller. The second
model has the advantage of less total communication between MSAs
(including no elections) but the potential disadvantage of more fine
grained communication during the execution of a multi-signer process.</t>

<t>At this stage it is not clear that one model is superior to the other.</t>

<section anchor="leaderfollower-mode"><name>Leader/Follower Mode</name>

<t>In a leader/follower deployment, a designated multi-signer agent
assumes the role of a leader, directing other agents, or followers,
through the multi-signer process state transitions. In this mode it is
necessary to conduct “elections” where one of the MSAs is chosen as
the Leader before initiating a new multi-signer process. Once the
Leader has been chosen, this model is mostly equivalent to the
original multi-signer “model 2”, with a single controller. The other
MSAs (the followers) essentially become proxies between the controller
(the Leader) and the DNS Provider each MSA represents.</t>

</section>
<section anchor="peer-mode"><name>Peer Mode</name>

<t>In peer mode, the MSAs still need to locate each other, but instead of
relying on trust in each other, each multi-signer agent operates
independently as a peer. I.e. each MSA executes each step in the
multi-signer process on its own. The communication is essentially
reduced to a notification mechanism (“I am now in state N”), although
authenticated to avoid having the contents of this communication
become an attack vector for an adversary.</t>

</section>
<section anchor="multi-signer-state-transitions"><name>Multi-Signer State Transitions</name>

<t>For the multi-signer process semantics to be fulfilled, a new state
transition in a multi-signer process is only possible when all signing
DNS Providers (or their MSAs) have reached the same state.</t>

<t>I.e. regardless of whether each MSA traverse the finite state machine
separately, or only the Leader does, and the Followers report back
when they have suceeded in executing the associated Actions (as
described in <xref target="I-D.draft-ietf-dnsop-dnssec-automation"/>, they must
not be further apart than one transition.</t>

</section>
</section>
<section anchor="responsibilities-of-an-msa"><name>Responsibilities of an MSA</name>

<t>Each MSA has certain responsibilites, depending on supported
transports and synchronization methods.</t>

<section anchor="enabling-remote-msas-to-locate-this-msa"><name>Enabling Remote MSAs to Locate This MSA</name>

<t>For a group of MSAs to be able to communicate securely and synchronize
data for a zone, each MSA must ensure that:</t>

<t><list style="symbols">
  <t>The DNS records needed for secure communication with other
MSAs are published:
  <list style="symbols">
      <t>URI, SVCB and KEY records required for DNS-based communication
secured by SIG(0).</t>
      <t>URI, SVCB and TLSA records required for API-based communication
secured by TLS (if supported).</t>
      <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the identity of the MSA.</t>
    </list></t>
</list></t>

</section>
<section anchor="enabling-remote-msas-to-lookup-zone-data-added-by-this-dns-provider"><name>Enabling Remote MSAs to Lookup Zone Data Added By This DNS Provider</name>

<t>When using DNS transport between MSAs four types of information is
needed to be conveyed from one party to another: notifications (sent
as DNS NOTIFY), retrieval of existing data (looked up via DNS QUERY),
changes to existing data (sent as DNS UPDATE) and, finally,
multi-signer "state" information (sent via the Multi-Signer EDNS(0)
OPT). For the case of looking up data for a zone that is particular to
a specific DNS Provider (eg. the DNSKEY RRs added by that signer or
the NS RRs representing the authoritative nameservers for that DNS
Provider) this is looked up under domain names constructed from the
name of the served zone and the identity of the DNS Provider.</t>

<t><list style="symbols">
  <t>For each zone that is managed, the data needed for
synchronization with other MSAs is published:
  <list style="symbols">
      <t>The DNSKEY RRset for the zone consisting of the DNSKEYS that the
local signer for this DNS Provider uses to sign the zone.</t>
      <t>The CDS RRset for the zone, representing the KSK that the local
signer uses to sign the zone (when needed).</t>
      <t>The NS RRs for the zone, consisting of the NS records of the
authoritative nameservers that this DNS Provider is responsible
for.</t>
      <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the concatenation of the zone name and the
identity of the MSA. Example for the zone "zone.example" and the
MSA "msa.provider":</t>
    </list></t>
</list></t>

<t>zone.example.msa.provider. IN DNSKEY ...<br />
zone.example.msa.provider. IN RRSIG DNSKEY ...<br />
zone.example.msa.provider. IN NS ... 
zone.example.msa.provider. IN RRSIG NS ...</t>

</section>
</section>
<section anchor="migration-from-single-signer-to-multi-signer"><name>Migration from Single-Signer to Multi-Signer</name>

<t>The migration from a single-signer to a multi-signer architecture is
done by adding the HSYNC RRset to the zone. However, this may be done
in several steps.</t>

<section anchor="adding-a-single-hsync-record-to-an-already-signed-zone"><name>Adding a single HSYNC record to an already signed zone</name>

<t>Adding a single HSYNC record to a zone that is already signed by the
DNS provider "provider.com" with NSMGMT=OWNER is a no-op that does not
change anything:</t>

<t>zone.example. IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>The zone was already signed by the DNS provider "provider.com" and the
provider added any needed DNSSEC records, including DNSKEYs. The zone
NS RRset was managed by the zone owner. All of this is unchanged by
the addition of the HSYNC RRset.</t>

</section>
<section anchor="changing-the-hsync-nsmgmt-field-from-agent-to-owner"><name>Changing the HSYNC NSMGMT Field from AGENT To OWNER</name>

<t>In a multi-signer architecture each MSA publishes the data it
contributes to the zone under the domain name
{zone}.{identity}. I.e. the zone DNSKEYs that the MSA
msa.provider. uses are published as</t>

<t>zone.example.msa.provider. DNSKEY ...
zone.example.msa.provider. DNSKEY ...</t>

<t>Likewise, the NS records for the zone are published as</t>

<t>zone.example.ns.msa.provider. NS ...
zone.example.ns.msa.provider. NS ...</t>

<t>To migrate from "owner maintained" NS RRset to "MSA maintained", the
zone owner must verify that the NS RRset as published by the MSA is
correct and in sync with the NS RRset as published by the zone owner
itself.  After this verification the zone owner changes the HSYNC
NSMGMT field in the existing HSYNC record from NSMGMT=OWNER to
NSMGMT=AGENT.</t>

</section>
<section anchor="migrating-from-a-multi-signer-architecture-back-to-single-signer"><name>Migrating from a Multi-Signer Architecture Back to Single-Signer.</name>

<t>If, for some reason, a zone owner wants to migrate back to a
single-signer architecture, the process is essentially the reverse of
the migration from single-signer to multi-signer:</t>

<t><list style="numbers">
  <t>The zone owner offboards all MSAs but one (the one that will be the
single-signer)</t>
  <t>The zone owner must verify that the NS RRset it publishes (in the
unsigned zone) is correct and in sync with the NS RRset as
published by the remaining MSA.</t>
  <t>The zone owner changes the HSYNC NSMGMT field in the HSYNC record
from NSMGMT=MSA to NSMGMT=OWNER.</t>
</list></t>

<t>The zone is now essentially back to a single-signer architecture.
The remaining HSYNC record may be removed from the zone.</t>

<t>TO BE REMOVED BEFORE PUBLICATION:
# Rationale</t>

</section>
<section anchor="choice-of-the-hsync-mnemonic"><name>Choice of the HSYNC Mnemonic</name>

<t>Initially the mnemonic MSIGNER was used for the HSYNC RRset. However,
as work progressed it became clear that we want also non-signing DNS
Providers to be able to participate. So the RRset is a signalling
mehanism from zone owner to DNS Providers, some of which may or may
not be instructed to sign the zone. Therefore we suggest the mnemonic
HSYNC to indicate that this is a mechanism for "horizontal
synchronization" inside a zone.</t>

<t>But the mnemonic chosen is a very minor point and should a better
suggestion come up it would be great.</t>

</section>
<section anchor="separation-of-msa-and-combiner"><name>Separation of MSA and COMBINER</name>

<t>It is possible to integrate all three multi-signer components (SIGNER,
MSA and COMBINER) into a single piece of software (or two pieces,
depending on the preferred way of slicing the functionality). However,
such a composite module would be a fairly complex piece of software.
This document aims to describe the functional separation of the
different components rather than make a judgement on software design
alternatives.  Hence possible implementation choices are left to the
implementer.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>Multi-signer is a complex system with a number of components and a
significant amount of automation. The authors believe that the only
way to make a multi-signer architecture useful in practice is via
automation. However, automation is a double-edged sword. It can both
make the system more robust and more vulnerable.</t>

<t>While all communication between MSAs is authenticated (either via
SIG(0) signatures ore TLS), the signalling from the zone owner to the
MSAs is via the HSYNC RRset in an unsigned zone. This is a potential
attack vector. However, securing zone transfers from zone owner to DNS
providers is a well-known issue with lots of existing solutions (TSIG,
zone transfer via a secure channel, zone transfer-over-TLS,
etc). Employing some of these solutions is strongly recommended.</t>

<t>From a vulnerability point-of-view this architecture introduces
several new components into the zone signing and publication
process. In particular the COMBINER and the MSAs are new components
that need to be secure. The COMBINER has the advantage of not having
to announce its location to the outside world, as it only needs to
communicate with internal components (the zone owner, the signer and
the MSA).</t>

<t>The MSAs are more vulnerable. They need to be discoverable by other
MSAs and hence they are also discoverable by an adversary. On the
other hand, the MSAs are not needed for a new zone to signed and
published, they are only needed when there are changes that require
the MSAs to synchronize, which is an infrequent event. Furthermore,
should an MSA be unable to fulfill its role during the execution of a
multi-signer process, the multi-signer process will simply stop where
it is. Regardless of where the stop (or rather pause) occurs, the zone
will be fully functional and once the MSA is able to resume its role,
the multi-signer process will continue from where it left off.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations.</name>

<t><strong>Note to the RFC Editor</strong>: In this section, please replace
occurrences of "(this document)" with a proper reference.</t>

<section anchor="hsync-rr-type"><name>HSYNC RR Type</name>

<t>IANA is requested to update the "Resource Record (RR) TYPEs" registry
under the "Domain Name System (DNS) Parameters" registry group as
follows:</t>

<dl>
  <dt>Type</dt>
  <dd>
    <t>HSYNC</t>
  </dd>
  <dt>Value</dt>
  <dd>
    <t>TBD</t>
  </dd>
  <dt>Meaning</dt>
  <dd>
    <t>Zone owner designation of DNS providers enabling mutual discovery</t>
  </dd>
  <dt>Reference</dt>
  <dd>
    <t>(this document)</t>
  </dd>
</dl>

</section>
<section anchor="new-multi-signer-edns-option"><name>New Multi-Signer EDNS Option</name>

<t>This document defines a new EDNS(0) option, entitled "Multi-Signer",
assigned a value of TBD "DNS EDNS0 Option Codes (OPT)" registry</t>

<t>TO BE REMOVED UPON PUBLICATION: 
<eref target="foo">https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11</eref></t>

<figure><artwork><![CDATA[
   +-------+--------------------+----------+----------------------+
   | Value | Name               | Status   | Reference            |
   +-------+--------------------+----------+----------------------+
   | TBD   | Multi-Signer       | Standard | ( This document )    |
   +-------+--------------------+----------+----------------------+
]]></artwork></figure>

</section>
<section anchor="a-new-registry-for-edns-option-multi-signer-operation-codes"><name>A New Registry for EDNS Option Multi-Signer Operation Codes</name>

<t>The Multi-Signer option also defines an 8-bit operation field, for
which IANA is requested to create and mainain a new registry entitled
"Multi-Signer Operations", used by the Multi-Signer option. Initial
values for the "Multi-Signer Operations" registry are given below;
future assignments in in the 3-127 range are to be made through
Specification Required review <xref target="BCP26"/>.</t>

<figure><artwork><![CDATA[
+-----------+---------------------------------------------+-------------------+
| OPERATION | Mnemonic                                    | Reference         |
+-----------+---------------------------------------------+-------------------+
| 0         | forbidden                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 1         | HELLO                                       | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 2         | HEARTBEAT                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 3-127     | Unassigned                                  | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 128-255   | Private Use                                 | ( This document ) |
+-----------+---------------------------------------------+-------------------+
]]></artwork></figure>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8901' target='https://www.rfc-editor.org/info/rfc8901'>
  <front>
    <title>Multi-Signer DNSSEC Models</title>
    <author fullname='S. Huque' initials='S.' surname='Huque'/>
    <author fullname='P. Aras' initials='P.' surname='Aras'/>
    <author fullname='J. Dickinson' initials='J.' surname='Dickinson'/>
    <author fullname='J. Vcelak' initials='J.' surname='Vcelak'/>
    <author fullname='D. Blacka' initials='D.' surname='Blacka'/>
    <date month='September' year='2020'/>
    <abstract>
      <t>Many enterprises today employ the service of multiple DNS providers to distribute their authoritative DNS service. Deploying DNSSEC in such an environment may present some challenges, depending on the configuration and feature set in use. In particular, when each DNS provider independently signs zone data with their own keys, additional key-management mechanisms are necessary. This document presents deployment models that accommodate this scenario and describes these key-management requirements. These models do not require any changes to the behavior of validating resolvers, nor do they impose the new key-management requirements on authoritative servers not involved in multi-signer configurations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8901'/>
  <seriesInfo name='DOI' value='10.17487/RFC8901'/>
</reference>

<reference anchor='RFC1996' target='https://www.rfc-editor.org/info/rfc1996'>
  <front>
    <title>A Mechanism for Prompt Notification of Zone Changes (DNS NOTIFY)</title>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='August' year='1996'/>
    <abstract>
      <t>This memo describes the NOTIFY opcode for DNS, by which a master server advises a set of slave servers that the master's data has been changed and that a query should be initiated to discover the new data. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1996'/>
  <seriesInfo name='DOI' value='10.17487/RFC1996'/>
</reference>

<reference anchor='RFC2136' target='https://www.rfc-editor.org/info/rfc2136'>
  <front>
    <title>Dynamic Updates in the Domain Name System (DNS UPDATE)</title>
    <author fullname='P. Vixie' initials='P.' role='editor' surname='Vixie'/>
    <author fullname='S. Thomson' initials='S.' surname='Thomson'/>
    <author fullname='Y. Rekhter' initials='Y.' surname='Rekhter'/>
    <author fullname='J. Bound' initials='J.' surname='Bound'/>
    <date month='April' year='1997'/>
    <abstract>
      <t>Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone. Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2136'/>
  <seriesInfo name='DOI' value='10.17487/RFC2136'/>
</reference>

<reference anchor='RFC3007' target='https://www.rfc-editor.org/info/rfc3007'>
  <front>
    <title>Secure Domain Name System (DNS) Dynamic Update</title>
    <author fullname='B. Wellington' initials='B.' surname='Wellington'/>
    <date month='November' year='2000'/>
    <abstract>
      <t>This document proposes a method for performing secure Domain Name System (DNS) dynamic updates. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='3007'/>
  <seriesInfo name='DOI' value='10.17487/RFC3007'/>
</reference>

<reference anchor='RFC2931' target='https://www.rfc-editor.org/info/rfc2931'>
  <front>
    <title>DNS Request and Transaction Signatures ( SIG(0)s )</title>
    <author fullname='D. Eastlake 3rd' initials='D.' surname='Eastlake 3rd'/>
    <date month='September' year='2000'/>
    <abstract>
      <t>This document describes the minor but non-interoperable changes in Request and Transaction signature resource records ( SIG(0)s ) that implementation experience has deemed necessary. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2931'/>
  <seriesInfo name='DOI' value='10.17487/RFC2931'/>
</reference>

<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC6891' target='https://www.rfc-editor.org/info/rfc6891'>
  <front>
    <title>Extension Mechanisms for DNS (EDNS(0))</title>
    <author fullname='J. Damas' initials='J.' surname='Damas'/>
    <author fullname='M. Graff' initials='M.' surname='Graff'/>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='April' year='2013'/>
    <abstract>
      <t>The Domain Name System's wire protocol includes a number of fixed fields whose range has been or soon will be exhausted and does not allow requestors to advertise their capabilities to responders. This document describes backward-compatible mechanisms for allowing the protocol to grow.</t>
      <t>This document updates the Extension Mechanisms for DNS (EDNS(0)) specification (and obsoletes RFC 2671) based on feedback from deployment experience in several implementations. It also obsoletes RFC 2673 ("Binary Labels in the Domain Name System") and adds considerations on the use of extended labels in the DNS.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='75'/>
  <seriesInfo name='RFC' value='6891'/>
  <seriesInfo name='DOI' value='10.17487/RFC6891'/>
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.draft-ietf-dnsop-dnssec-automation' target='https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-dnssec-automation-03'>
   <front>
      <title>DNSSEC automation</title>
      <author fullname='Ulrich Wisser' initials='U.' surname='Wisser'>
         </author>
      <author fullname='Shumon Huque' initials='S.' surname='Huque'>
         <organization>Salesforce</organization>
      </author>
      <author fullname='Johan Stenstam' initials='J.' surname='Stenstam'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <date day='19' month='October' year='2024'/>
      <abstract>
	 <t>   This document describes an algorithm and protocol to automate the
   setup, operations, and decomissioning of Multi-Signer DNSSEC
   [RFC8901] configurations.  It employs Model 2 of the multi-signer
   specification, where each operator has their own distinct KSK and ZSK
   sets (or CSK sets), Managing DS Records from the Parent via CDS/
   CDNSKEY [RFC8078], and Child-to-Parent Synchronization in DNS
   [RFC7477] to accomplish this.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-dnsop-dnssec-automation-03'/>
   
</reference>


<reference anchor='I-D.draft-berra-dnsop-keystate' target='https://datatracker.ietf.org/doc/html/draft-berra-dnsop-keystate-01'>
   <front>
      <title>Signalling Key State Via DNS EDNS(0) OPT</title>
      <author fullname='Erik Bergström' initials='E.' surname='Bergström'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <author fullname='Leon Fernandez' initials='L.' surname='Fernandez'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <author fullname='Johan Stenstam' initials='J.' surname='Stenstam'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <date day='7' month='February' year='2025'/>
      <abstract>
	 <t>   This document introduces the KeyState EDNS(0) option code, to enable
   the exchange of SIG(0) key state information between DNS entities via
   the DNS protocol.  The KeyState option allows DNS clients and servers
   to include key state data in both queries and responses, facilitating
   mutual awareness of SIG(0) key status between child and parent zones.
   This mechanism addresses the challenges of maintaining
   synchronization of SIG(0) keys used for securing DNS UPDATE messages,
   thereby enhancing the efficiency and reliability of DNS operations
   that require coordinated key management.

   This document proposes such a mechanism.

   TO BE REMOVED: This document is being collaborated on in Github at:
   https://github.com/johanix/draft-berra-dnsop-opt-transaction-state
   (https://github.com/johanix/draft-berra-dnsop-transaction-state-00).
   The most recent working version of the document, open issues, etc,
   should all be available there.  The authors (gratefully) accept pull
   requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-berra-dnsop-keystate-01'/>
   
</reference>

<referencegroup anchor='BCP26' target='https://www.rfc-editor.org/info/bcp26'>
  <reference anchor='RFC8126' target='https://www.rfc-editor.org/info/rfc8126'>
    <front>
      <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
      <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
      <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
      <author fullname='T. Narten' initials='T.' surname='Narten'/>
      <date month='June' year='2017'/>
      <abstract>
        <t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters. To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper. For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
        <t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed. This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
        <t>This is the third edition of this document; it obsoletes RFC 5226.</t>
      </abstract>
    </front>
    <seriesInfo name='BCP' value='26'/>
    <seriesInfo name='RFC' value='8126'/>
    <seriesInfo name='DOI' value='10.17487/RFC8126'/>
  </reference>
</referencegroup>




    </references>


<section anchor="change-history-to-be-removed-before-publication"><name>Change History (to be removed before publication)</name>

<t><list style="symbols">
  <t>draft-leon-distributed-multi-signer-00</t>
</list></t>

<ul empty="true"><li>
  <t>Initial public draft.</t>
</li></ul>

</section>


  </back>

<!-- ##markdown-source:
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
uRhHf8Zs9CZp2Hl5yS0hyKTLNosqm9kd6jwPPBHDUdQ8MJl4KN1UdWbh95LP
8KldLdauZ/TWeZJWTsPssCyRer+/5HWlIy8q7OqO+5ZXec9f0j4nVH7BdXA5
3eJA/RP8BTgN5cGQgKS3sAk+3jXTTudhaMkoeG2ZjuBEy5bLHeGvg9Pzx4cH
55zxmYVyxq39TdOKo4yGKdfLC+4xFt3kGE1KmkyU64dF4ZxLSn9z8bQItiTp
h2RzdJeICsak+IEg4QsgpC09z0CakbREIJPUt9Yg1zX2eyB1RbAnhmElT1FC
EnaLbPx3KBuVeaXHd0gmqAD+VjuMwmm/R0dxeL+nsTefpOXMry9j1SAkiIHt
j2OoH6MXEW6qfdLaELExAGlMiydu38cd2rwnPL+j998NjbGlQMD3dtm+M3q9
rSDjTmNlPqY5Ild+7XdZXSDqjZmyQ5U93nK5CUg89j0MsS/jEk0VdZwQsJCx
nPsTf9LjzrpFDTdGGvW4iPzBAGMzOvWeJeAnD0ujJYaGCgV8IIEOAXayC+t8
yMcfhgmFGTuatjfysdnwJV59pDWwxuzukwenZxRjQBlZlxQZN4/Cr5+GXz8L
v34efv0i/JrA8qyFDT8XogiLWzE5BaVNQGlaoLzLGLsNuNRtcTt8b7U/Pyy4
7Zl2wX1aZJeA1FabPwLS+Vsf6TA4/oAhJGfHdoCWwbfonmMn4UBvtwIePFvX
fD+FT/4oQ3Jsko6pNx90E2tH7Z62nQmpXystNo7dG9/WdyYbIrf3pL28wqXW
yi6bbSRUklY+6pzamuk9sY/pzkxOcE7ukNNW0+oiucinGK9Qd20cBQT0o/tn
O2nLaZ09JUr48djdwqyRXpEsR+K7/lKddvRqYls1ClFIay6ZoejZ6eZEj5Kw
Y7fv8OD48PDp4VMs79+LLlPhVAeboUWs8OkJJ/WEu7jnbpySq7cvbvpStrUN
OdVW8K1zMAAoHmu6Zyb34XDKUJ6GANkWt5eTaymsDWV+7QwNcndLxcKW8rAr
bnlD0eQp3sk21csLt+WSR75w6i9ROox4c+dYVp8G3x2f/P4YIf1IJ+/xpzbB
E5EuaefV6dGIUwtEDwyxDc9bE0gNKbxGl7pk7agUnwmOEiqEEsaMXgnUJvhJ
L4O/lvCRVsRiP2AchVxPBAh8kaNPoYK7E0nq8aOlwQ1QqclHo1eKCVeXiw5U
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
e7LSAAA=

-->

</rfc>

