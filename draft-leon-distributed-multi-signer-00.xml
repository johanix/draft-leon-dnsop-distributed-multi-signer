<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-leon-distributed-multi-signer-00" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Distributed Multi-Signer Bootstrap">Distributed DNSSEC Multi-Signer Bootstrap</title>

    <author initials="L." surname="Fernandez" fullname="Leon Fernandez">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>leon.fernandez@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="E." surname="Bergström" fullname="Erik Bergström">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>erik.bergstrom@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="J." surname="Stenstam" fullname="Johan Stenstam">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>johan.stenstam@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="S." surname="Crocker" fullname="Steve Crocker">
      <organization>Edgemoor Research Institute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>steve@shinkuro.com</email>
      </address>
    </author>

    <date />

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<section anchor="abstract"><name>Abstract</name>

<t>This document presents an architecture for a distributed DNSSEC
multi-signer model that most closely resembles "model 2" in
<xref target="RFC8901"/>.</t>

<t>It defines two multi-signer specific entities: the "multi-signer
agent" (MSA) that is responsible for the multi-signer process and the
"combiner", which is responsible for "combining" unsigned zone data
from the zone owner with zone data under control of the MSA. It
introduces a new DNS RRtype, HSYNC, that is used by the zone owner to
designate the chosen DNS Providers (signing and/or serving the
zone). Furthermore it describes a mechanism for the MSAs to establish
secure communication with each other, either via “pure DNS”
communication secured by DNS SIG(0) signatures on each message or via
a RESTful API secured by TLS. Finally, the document describes two
models for multi-signer process synchronization: “leader/follower
mode” and “peer mode” and the mechanism by which a set of MSAs decide
which model to use for a given zone.</t>

<t>The scope of the document is only the distributed aspect of DNSSEC
multi-signer up to the point where secure communication and
synchronization method between MSAs has been established. The
“multi-signer algorithms” that deal with the actual synchronization
required for multi-signer operation are described in
<xref target="I-D.draft-ietf-dnsop-dnssec-automation"/>.</t>

<t>TO BE REMOVED: This document is being collaborated on in Github at:
<eref target="https://github.com/johanix/draft-leon-dnsop-distributed-multi-signer">https://github.com/johanix/draft-leon-dnsop-distributed-multi-signer</eref>.
The most recent working version of the document, open issues, etc, should all be
available there.  The authors (gratefully) accept pull requests.</t>

</section>


    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>The issue of how to eliminate so-called "single points of failure"
from systems to make them more robust is a recurring theme in systems
design and so also for DNS. In the DNS case redundancy is addressed by
having multiple name servers for the same zone. However, when the zone
is DNSSEC-signed there is traditionally an additional single point of
failure: the so-called "signer" of the zone.</t>

<t>In multi-signer (<xref target="RFC8901"/>) model 2, a process is described by
which it is possible to use more than one signer (each with its own
set of keys), by having the signers (or their agents) communicate and
exchange data that should be signed by the other signer. The most
obvious example is that each signer's Key-Signing Key must sign a
DNSKEY RRset that contains the Zone-Signing Keys for all signers.</t>

<t>To synchronize data between signers two models are possible: either a
"centralized" model where a single "controller" decides what changes
are needed, or a "distributed" model where the signers themselves (or
an agent of each signer) decide what changes are needed.</t>

<t>The first model has been implemented previously, and while it works
from a technical point of view, it is not a good solution from a risk
management point of view. The primary problem is that the signers have
difficulty accepting that an external third party (the controller) has
the ability to modify data (in a customer zone).</t>

<t>This document is an attempt to address the synchronization problem by
proposing a distributed model without a central controller.</t>

<t>The communication between signers has two parts: first it is necessary
to find out what data each signer has for a zone. Once all data has
been collected it is possible to compute what changes are needed to
the zone data at each signer. That triggers the second phase where the
zone data for the individual signers is changed to get them in sync
with each other. All of this is done automatically.</t>

<t>However, from a slightly different perspective, the multi-signer
alternative is the more general case of DNSSEC signing, with the (very
common) case of a single signer being a special case.</t>

<t>From that point of view, this document proposes an architecture for a
completely automated, distributed multi-signer model together with a
seamless transition path from the current single-signer model to the
multi-signer model. From the zone owners point of view, the transition
is done through the addition of a new RRtype, HSYNC, that is used to
designate the chosen DNS Providers, their responsibilities and
information to enable the DNS Providers to locate each other.</t>

<t>Knowledge of DNS NOTIFY <xref target="RFC1996"/> and DNS Dynamic Updates
<xref target="RFC2136"/> and <xref target="RFC3007"/> is assumed. DNS SIG(0) transaction
signatures are documented in <xref target="RFC2931"/>.</t>

<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "<strong>MUST</strong>", "<strong>MUST NOT</strong>", "<strong>REQUIRED</strong>", "<strong>SHALL</strong>",
"<strong>SHALL NOT</strong>", "<strong>SHOULD</strong>", "<strong>SHOULD NOT</strong>", "<strong>RECOMMENDED</strong>",
"<strong>NOT RECOMMENDED</strong>", "<strong>MAY</strong>", and "<strong>OPTIONAL</strong>" in this document
are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<t>...</t>

</section>
<section anchor="requirements"><name>Requirements</name>

<t>The requirements for an architecture for distributed multi-signer are
defined as follows:</t>

<t><list style="symbols">
  <t>Assuming all zone transfers are correctly set up, a zone owner MUST
be able to signal to the individual multi-signer providers
information sufficient for the providers to identify each other and
establish secure communication.</t>
  <t>The zone owner MUST be able to signal the intent to onboard an
additional multi-signer provider. This MUST automatically initiate
the multi-signer “add signer” process, as described in <xref target="RFC8901"/>.</t>
  <t>The zone owner MUST be able to signal the intent to offboard an
existing multi-signer provider. This MUST automatically initiate
the multi-signer “remove signer” process, as described in <xref target="RFC8901"/>.</t>
  <t>All signalling from zone owner to multi-signer providers SHOULD be
carried out via data in the served zone, to ensure that all
providers get the same configuration information at (almost) the
same time.</t>
  <t>By engaging a set of multi-signer providers (one or more), the zone
owner MUST give up control over the following records:
  <list style="symbols">
      <t>All DNSSEC related records in the zone</t>
      <t>Any CDS and/or CSYNC RRsets</t>
    </list></t>
  <t>It SHOULD be possible but NOT MANDATORY for the zone owner to also
delegate the management of the NS RRset to the set of DNS
Providers.</t>
</list></t>

</section>
<section anchor="multi-signer-use-cases"><name>Multi-Signer Use Cases</name>

<section anchor="primary-use-case"><name>Primary Use Case</name>

<t>The primary use case for the proposed multi-signer architecture is the
following scenario: A zone owner needs to remove the single point of
failure that the DNSSEC signer constitutes. For this reason it
contracts with two or more “multi-signer capable” DNS providers.
Each such DNS provider provides the following service:</t>

<t><list style="symbols">
  <t>Receive the unsigned zone via zone transfer.</t>
  <t>Locate all active DNS Providers via the HSYNC RRset as published by
the zone owner. Establish secure communication with all remote DNS
Providers (via their agents).</t>
  <t>Update the DNSKEY, CDS and CSYNC RRsets as needed, based on
synchronization with the remote signers (or their agents).</t>
  <t>Update the NS RRset if allowed by the zone owner, based on
synchronization with the remote DNS Providers (or their agents).</t>
  <t>Sign the zone, using own DNSKEYs, but with a published DNSKEY RRset
that includes the DNSKEYs of other signers.</t>
  <t>Possibly distribute the signed zone to a set of downstream
authoritative nameservers under own control.</t>
  <t>Possbly distribute the signed zone to non-signing downstream DNS
Providers.</t>
</list></t>

</section>
<section anchor="secondary-use-case"><name>Secondary Use Case</name>

<t>A slightly different use case is where a zone owner has a desire to
replace one DNSSEC-signing DNS provider with another. In the first
step it onboards the new DNS provider by adding a HSYNC RR with HSYNC
State=“ON” thereby identifying the new DNS provider and signalling its
role. This informs both the present DNS providers and the incoming DNS
provider about the addition of the new DNS provider and the onboarding
process is automatically initiated.</t>

<t>Once the onboarding operation is completed the zone owner may trigger
the pending removal of another DNS provider by changing the HSYNC
State flag for the outgoing DNS Provider to “OFF”. This informs all
the present DNS providers about the pending removal and the
offboarding process is automatically initiated.</t>

</section>
<section anchor="tertiary-use-case"><name>Tertiary Use Case</name>

<t>A third use case is where a zone owner wants to migrate from a
single-signer model to a multi-signer model, but as a first step only
wants to transition the existing signer to be designated via a single
HSYNC record. Once that is done the zone owner can continue the
transition to a full multi-signer model at a later time by adding more
HSYNC records.</t>

</section>
</section>
<section anchor="the-distributed-multi-signer-model"><name>The Distributed Multi-Signer Model</name>

<t>The primary difference between monolithic and distributed multi-signer
is that the former has a central “controller” while the latter
doesn’t. But there is still an absolute need for synchronization
between the different participants in the distributed multi-signer
setup.</t>

<t>There are three immediate aspects for the design of a distributed
multi-signer architecture:</t>

<t><list style="symbols">
  <t>The first is “transport”: how to communicate between the
individual instances in a multi-signer system.</t>
  <t>The second is “synchronization”: who decides what changes are
needed where.</t>
  <t>The third is source of truth for different types of zone data. The
zone owner is the source of truth for all unsigned zone data,
except DNSSEC data. The signer is the source of truth for all
DNSSEC data in the zone. Traditionally, the source of truth for the
NS RRset is the zone owner, but with multiple DNS Providers having
the option of moving that responsibility to the DNS Providers would
be an important improvement.</t>
</list></t>

<section anchor="multi-signer-agent-integrated-signer-vs-separate-agent"><name>Multi-Signer Agent: Integrated Signer vs Separate Agent</name>

<t>In a distributed setup there must be a service located with each
multi-signer DNS Provider that manages communication with other DNS
Providers. This is referred to as the multi-signer agent, or MSA. As
not every DNS Provider needs to be signing the zone, the term is not
entirely perfect, but sufficient.</t>

<t>It is possible to implement support for the synchronization and
communication needs directly into each “signer” (i.e. typically an
authoritative nameserver with the ability to do online DNSSEC
signing). In this case the signer implements the MSA functionality.</t>

<t>However, it is also possible to separate the multi-signer
functionality into a separate agent. This agent sits next to the
signer, and is under the same administrative control (the "DNS
Provider"), but is a separate piece of software. When using this
design each signer has an MSA attached next to it. Each MSA is
configured as a “secondary nameserver” to a signer and receives the
(signed) zone from this signer.</t>

<t>The “separate MSA” design has the major advantage of leaving the
signer almost entirely out of the multi-signer complexity. The
requirements are only that the “signer” treats the MSA as a normal
secondary (sends NOTIFY messages and responds to zone transfer
requests) and that the MSA has a mechanism that allows it to make
changes to zones upstream of the “signer” to satisfy the multi-signer
requirements for synchronization of certain RRsets in the apex of the
zone.</t>

<t>In this document the design using a separate MSA is used, while
pointing out that it is possible to integrate this into a future
“signer” that implements both DNSSEC signing and the MSA
functionality.</t>

</section>
<section anchor="source-of-truth"><name>Source of Truth</name>

<t>A common design for DNSSEC signing (regardless of multi-signer) is to
use a separate, bump-on-the-wire signer. This is a signer that
receives the unsigned zone via an incoming zone transfer, signs the
zone, and publishes the signed zone via an outbound zone transfer. In
such a design the source of truth has been split up between the “zone
owner” (source of truth for all non-DNSSEC zone data), and the signer
(source of truth for all DNSSEC data in the zone).</t>

<t>In a distributed multi-signer architecture the source of truth is
further split up into three participants:</t>

<t><list style="symbols">
  <t>The zone owner is the source of truth for all unsigned zone data,
except DNSSEC data and possibly the NS RRset.</t>
  <t>The signer is the source of truth for all data generated via DNSSEC
signing: own DNSKEYs, NSEC/NSEC3 RRs, RRSIGs, etc.</t>
  <t>The MSA is the source of truth for the RRsets that must be kept in
sync across all the signers for the zone. This includes the DNSKEYs
from other signers, CDS and CSYNC RRsets. Possibly also the NS RRset.</t>
</list></t>

<t>The NS RRset is an interesting special case. Traditionally the NS
RRset is maintained by the zone owner, but based on data from the DNS
providers (as authoritative nameservers is a primary service for the
DNS provider). However, in a distributed multi-signer architecture the
NS RRset should preferably be maintained by the MSA. For this reason
the proposed design makes control of the NS RRset explicit and the
responsibility of the zone owner to choose whether to retain control
or delegate to the MSAs. Hence:</t>

<t><list style="symbols">
  <t>The MSA is the source of truth for the NS RRset, subject to the
policy of the zone owner, as described in the HSYNC RRset.</t>
</list></t>

<t>Making the control of the NS RRset explicit is useful regardless of
whether a zone uses multiple signers or single signer.</t>

<t>To be able to keep the signer as simple as possible, the changes to the
NS, DNSKEY, CDS and CSYNC RRsets must be introduced into the unsigned
zone before the zone reaches the signer. Likewise, to keep the zone
owner as simple as possible (i.e. not involved in the details of the
multi-signer automation) these changes must be introduced into the
unsigned zone after the zone leaves the zone owner.</t>

<section anchor="the-combiner"><name>The COMBINER</name>

<t>The consequence of these requirements is that the DNSKEY, CDS and
CSYNC RRsets (and possibly the NS RRset) are maintained via a separate
piece of software inserted between the zone owner and the signer. This
is referred to as the multi-signer COMBINER.</t>

<t>The COMBINER has the following features:</t>

<t><list style="symbols">
  <t>It supports inbound zone transfer of the unsigned zone from the
zone owner.</t>
  <t>It receives updates for the NS, DNSKEY, CDS and CSYNC
RRsets from the MSA. Typically the mechanism used is DNS UPDATE
with a TSIG signature, as this is easy to configure in a local
context. However, other mechanisms, including APIs, are possible.</t>
  <t>It stores all data received from the MSA separate from
the zone data received from the zone owner.</t>
  <t>Whenever it receives a new unsigned zone from the zone owner it
COMBINES zone data from the zone owner (the majority of the zone)
with specific zone data under control of the MSA: three specific
RRsets, all in the apex of the zone: the DNSKEY,CDS and CSYNC
RRsets.</t>
  <t>It is policy free. I.e. the COMBINER is not making any judgement
about what data to include in the zone from the four defined
RRsets.  That judgement is the role of the MSA.</t>
  <t>It does not sign the zone.</t>
  <t>It provides outbound zone transfer of the combined zone to the
signer.</t>
</list></t>

<t>Example setup with two signers showing the logical flow of zone data
between the zone owner, the COMBINER, the signer and the MSA:</t>

<figure><artwork><![CDATA[
                            +--------------+
                            |     owner    |
               xfr          +-+---------+--+    xfr
            /----------------/           \--------------------\
           /                                                   \
    +-----+----+    DNS  +-----+  DNS/API  +-----+  DNS    +----+-----+
    | combiner +<--------+ msa +-----------+ msa +-------->+ combiner |
    +-----+----+  UPDATE +--+--+           +--+--+ UPDATE  +----+-----+
          |                 ^                 ^                 |
          v xfr             |                 |                 v xfr
    +-----+----+     xfr    |                 |   xfr      +----+-----+
    |  signer  +------------+                 +------------+  signer  |
    +-----+----+                                           +----+-----+
          |                                                     |
          v                                                     v
       +--+--+                                               +--+--+
       | NS  |--+                                            | NS  |+
       +-----+  |--+                                         +-----+|-+
          +-----+  |                                            +---+ |
             +-----+                                              +---+
]]></artwork></figure>

</section>
</section>
<section anchor="the-dns-provider"><name>The DNS Provider</name>

<t>A "DNS Provider" is a term that is most commonly used to refer to an
entity that provides authoritative DNS service to one or more zone
owners. In the context of this document it is used to refer to an
entity that provides some subset of the following services:</t>

<t><list style="symbols">
  <t>Signing a zone received from the zone owner.</t>
  <t>Serving the zone via a set of authoritative nameservers.</t>
  <t>Distributing the signed zone to other downstream DNS Providers.</t>
</list></t>

<t>In addition to the above services a DNS Provider MUST also provide:</t>

<t><list style="symbols">
  <t>An MSA for synchronization with other DNS Providers</t>
  <t>A COMBINER for the management of changes to the zone via<br />
the synchronization among MSAs (if it provides a signer)</t>
</list></t>

<t>I.e. in the setup above there are two DNS Providers, both of which are
"complete" in the sense that they provide all three of the above
services.</t>

</section>
</section>
<section anchor="identifying-the-designated-signers"><name>Identifying the Designated Signers</name>

<t>It is the responsibility of the zone owner to choose a set of "DNS
Providers", either internal or external to the zone owners
organization. These DNS Providers MUST be clearly and uniquely
designated via publication in the HSYNC RRset, located at the apex of
the zone and consisting of one HSYNC record for each signer.</t>

<t>The HSYNC RRset MUST be added, by the zone owner, to the, typically
unsigned, zone that the zone owner maintains so that this RRset is
visible to the downstream DNS Providers and their multi-signer agents.</t>

</section>
<section anchor="the-hsync-rrset"><name>The HSYNC RRset</name>

<t>The HSYNC RR has the zone name that publishes the HSYNC RRset as the
owner name (i.e. the HSYNC RRset must be located at the apex of the
zone). The RDATA consists of four fields "State","NSMgmt", "Sign" and
"Identity":</t>

<t>zone.example.    IN HSYNC  State  NSMgmt  Sign  Identity.</t>

<t>State:
    Unsigned 8-bit. Defined values are 1=ON and 2=OFF. The value 0
    is an error.  Values 3-127 are presently undefined. Values 128-255
    are reserved for private use. The presentation format allows
    either as integers (1 or 2) or as tokens (“ON” or “OFF”).</t>

<t>NSMgmt:
    Unsigned 8-bit. Defined values are 1=Zone owner and 2=MSA. The
    value 0 is an error. Values 3-255 are presently undefined (and not
    expected to be defined). The presentation format allows either as
    integers (1 or 2) or as tokens (“OWNER” or “AGENT”).</t>

<t>Sign:
    Unsigned 8-bit. Defined values are 1=YES and 2=NO. The value 0 is an
    error. If Sign=YES for a particular HSYNC record, then the signer
    associated with that Identity is a designated signer for the zone.</t>

<t>Identity:
    Domain name. Used to uniquely identify the Multi-Signer
    Agent for the DNS Provider that the MSA represents.</t>

<t>Example:</t>

<t>zone.example.   IN HSYNC  ON  AGENT  YES  msa.provider.example.</t>

<section anchor="semantics-of-the-hsync-state-field"><name>Semantics of the HSYNC State Field</name>

<t>The HSYNC State field is used to signal to all MSAs what the status of
each MSA is from the point-of-view of the zone owner. The two possible
values are "ON" and "OFF" where "ON" means that the MSA is a currently
designated signer for the zone and "OFF" means that the MSA is
previously designated signer for the zone that is in the process of
being offboarded.</t>

<t>The reason for the "OFF" state is that the offboarding process
involves the remaining signers (hence the signalling) and it is
important to know which signer is being offboarded so that the correct
data may be removed in the correct order during the multi-signer
"remove signer" process (see <xref target="RFC8901"/>).</t>

<t>Once the offboarding process is complete the HSYNC RR for the
offboarded MSA may be removed from the zone at the zone owners
discretion.</t>

</section>
<section anchor="semantics-of-the-hsync-nsmgmt-field"><name>Semantics of the HSYNC NSMgmt Field</name>

<t>The NSMgmt field is used to signal to the MSAs who is responsible for
the contents of the NS RRset for the zone. The two possible values are
"OWNER" and "AGENT".</t>

<t>The value "OWNER" signals that the zone owner is responsible for the NS
RRset and is responsible for updating the NS RRset (either with or
without the unified data from all MSAs). In this case the MSAs MUST NOT
instruct the COMBINER to update the NS RRset.</t>

<t>The value "AGENT" means that the MSAs representing DNS Providers that
sign the zone are responsible for the contents of the NS RRset. In
this case the these MSAs MUST instruct the COMBINER to update the NS
RRset with the unified NS RRset data from all MSAs.</t>

<section anchor="limitation-of-scope-for-ns-management"><name>Limitation of Scope for NS Management</name>

<t>For the purpose of this document the NSMgmt Field only covers the NS
RRset. I.e. it does not include the address records of in-bailiwick
authoritative nameservers. The reasons are:</t>

<t><list style="symbols">
  <t>Limiting the possibility of DNS Providers "polluting" the name space
of the zone.</t>
  <t>Keeping the specification simpler, as the concept of "delegated" NS
management is new.</t>
</list></t>

<t>It is possible to make an argument for delegating management of
address records for in-bailiwick authoritative nameservers, but this
document does not.</t>

</section>
</section>
<section anchor="semantics-of-the-hsync-sign-field"><name>Semantics of the HSYNC Sign Field</name>

<t>The Sign field is used to signal to all MSAs whether the zone owner
requests that the DNS Provider that the MSA represents should sign the
zone or not. The two possible values are "YES" and "NO" where "YES"
means that the MSA represents a currently designated signer for the
zone and "NO" means that the MSA does not.</t>

<t>When Sign=NO the MSA MUST still participate in the communication
between MSAs for the zone, but MUST NOT instruct the COMBINER to
update the NS RRset.</t>

</section>
</section>
<section anchor="communication-between-msas"><name>Communication Between MSAs</name>

<t>For the communication between MSAs there are two choices that need to
be made among the designated MSAs for a zone. The first is what
"transport" to use for the communication. The second is what
"synchronization" model to use when executing future multi-signer
processes.</t>

<t>The two defined transport alternatives are:</t>

<t><list style="symbols">
  <t>DNS-based communication (mandatory to support)</t>
  <t>REST API-based communication</t>
</list></t>

<t>Each has pros and cons and at this point in time it is not clear that
one always is better than the other. To simplify the choice of
transport DNS-based communication is mandatory to support and the REST
API-based communication may only be used if all MSAs support
it. Supported transports are signaled in the Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>The two defined synchronization alternatives are:</t>

<t><list style="symbols">
  <t>Leader/Follower synchronization (mandatory to support)</t>
  <t>Peer-to-Peer synchronization</t>
</list></t>

<t>Just as for transport, supported synchronization models are signaled
in the Multi-Signer EDNS(0) Option (see section NNN below).</t>

<t>Regardless of the synchronization model and communication method used,
the MSAs SHOULD exchange all needed information about the zone and the
DNS Provider they represent to enable the multi-signer processes to
execute correctly. This includes notifications about changes to
DNSKEYs, changes to the NS RRset, etc. Depending on synchronization
model it may also include instructions for changes to the zone.</t>

<section anchor="msa-communication-via-dns"><name>MSA Communication via DNS</name>

<t>This transport alternative is based on the observation that all the
communication needs between MSAs can be expressed via DNS
messages. Notifications are sent as DNS NOTIFY messages. Requests for
changes to a zone are sent as DNS UPDATE messages, etc. The sole
remaining communication requirement is for how to communicate
information about the current state between MSAs in an ongoing
multi-signer process. For this reason a dedicated EDNS(0) opcode
specifically for multi-signer synchronization is proposed.</t>

<t>This model is based on <xref target="draft-berra-dnsop-keystate"/> that solves
a similar problem for delegation synchronization between child and
parent, which has already been implemented and shown to work.</t>

</section>
<section anchor="msa-communication-via-rest-api"><name>MSA Communication via REST API</name>

<t>REST APIs are well-known and a natural fit for many distributed
systems. The challenge is mostly in the initial setup of secure
communication. The certificates need to be validated, preferably
without a requirement on trusting a third party CA. The API endpoints
for each MSA need to be located. Once secure communication has been
established, using a REST API for MSA communication is
straight-forward.</t>

</section>
<section anchor="locating-remote-multi-signer-agents"><name>Locating Remote Multi-Signer Agents</name>

<t>When an MSA receives a zone via zone transfer from the signer it will
analyze the zone to see whether it contains an HSYNC RRset. If there
is no HSYNC RRset the zone MUST be ignored by the MSA from the
point-of-view of multi-signer synchronization.</t>

<t>If, however, the zone does contain an HSYNC RRset then the MSA must
analyze this RRset to identify the other MSAs for the zone via their
target names in each HSYNC record. If any of the other MSAs listed in
the HSYNC RRset is previously unknown to this MSA then secure
communication with this other MSA MUST be established.</t>

<t>Secure communication can be achieved via various transports and it is
up to the MSAs in the zone's HSYNC records to determine amongst
themselves. This document proposes two transports: "DNS" and
"API". "DNS" is designated as as a baseline that MSAs MUST support to
be compliant.</t>

<t>The following two subsections describe the mechanism by which an MSA
SHOULD locate a remote MSA and establish secure DNS-based and
API-based communications, respectively.</t>

<section anchor="locating-a-remote-dns-method-multi-signer-agent"><name>Locating a Remote DNS-Method Multi-Signer Agent</name>

<t>Locating a remote MSA using the DNS mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate a URI record for the DNS protocol for
the HSYNC identity. This provides the domain name and port to
which DNS messages should be sent.</t>
  <t>Lookup and DNSSEC-validate the SVCB record of the URI record target
to get the IP addresses to use for communication with the remote
MSA. If the returned SVCB record includes a "port=NNN" hint then
this MUST be ignored. I.e. the port to use is defined by the URI
record.</t>
  <t>Lookup and DNSSEC-validate the KEY record of the URI record target
name.  This enables verification of the SIG(0) public key of the
remote MSA once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote MSA:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>The local MSA will look up the URI record for msa.provider.com:</t>

<t>_dns._tcp.msa.provider.com.  IN  URI  10 10 “dns://ns.msa.provider.com:5399/”
_dns._tcp.msa.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for ns.msa.provider.com. SVCB to get the IPv4
and IPv6 addresses as ipv4hints and ipv6hints in the response to the
SVCB query:</t>

<t>ns.msa.provider.com.   IN  SVCB  1 ipv4hint=5.6.7.8 ipv6hint=2001::53
ns.msa.provider.com.   IN  RRSIG SVCB …</t>

<t>and also a look up for the KEY record for ns.msa.provider.com, which
may look like this:</t>

<t>ns.msa.provider.com.  IN  KEY …
ns.msa.provider.com.  IN  RRSIG KEY …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local MSA is able to initiate communication with
the remote MSA and verify the identity of the responding party via the
validated KEY record for the remote MSAs SIG(0) public key.</t>

</section>
<section anchor="locating-a-remote-api-method-multi-signer-agent"><name>Locating a Remote API-Method Multi-Signer Agent</name>

<t>Locating a remote MSA using the API mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate the URI record for for the HTTPS protocol
for the HSYNC identity. This provides the base URL that will be used
to construct the individual API endpoints for the REST API. It also
provides the port to use.</t>
  <t>Lookup and DNSSEC-validate the SVCB record for the URI record
target.  This provides the IP-addresses to use for communication
with the MSA. If the returned SVCB record includes a "port=NNN" hint
then this MUST be ignored. I.e. the port to use is defined by the
URI record.</t>
  <t>Lookup and DNSSEC-validate the TLSA record for the port and protocol
specified in the URI record. This will enable verification of the
certificate of the remote MSA once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote MSA:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>the local MSA will look up the URI record for msa.provider.com:</t>

<t>_https._tcp.msa.provider.com.  IN  URI  10 10 “https://api.msa.provider.com:443/api/v2/”
_https._tcp.msa.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for api.msa.provider.com IPv4 and IPv6
addresses as hints in an SVCB RR:</t>

<t>api.msa.provider.com.   IN  SVCB 1 ipv4hint=1.2.3.4 ipv6hint=2001::bad:cafe:443
api.msa.provider.com.   IN  RRSIG SVCB …</t>

<t>Now we know the IP-address and the port as well as the base URL to
use. Finally the TLSA record for _443._tcp.api.msa.provider.com is
looked up, with a response that may look like this:</t>

<t>_443._tcp.api.msa.provider.com.  IN  TLSA 3 1 1 ….
  _443._tcp.api.msa.provider.com.  IN  RRSIG TLSA …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local MSA is able to initiate communication with
the remote MSA and verify the identity of the responding party via the
TLSA record for the remote MSAs certificate.</t>

<section anchor="fallback-to-dns-based-communication"><name>Fallback to DNS-based Communication</name>

<t>If the API-based communication fails, either because needed DNS
records are missing, the TLSA record fails to validate the remote MSAs
certificate or the remote MSA simply doesn't respond, the local MSA
MUST fall back to DNS-based communication.</t>

</section>
</section>
</section>
<section anchor="the-initial-hello-phase"><name>The Initial HELLO Phase</name>

<t>When two MSAs need to communicate with each other for the first time
(because they are both deisgnated signers for the same zone), they
need to establish secure communication. This is done in a "HELLO"
phase where the MSAs exchange information about their capabilities.</t>

<t>If all the information needed for API-based transport for the remote
party was available, the MSA SHOULD attempt an API-based HELLO. If,
however, this fails for some reason, it should fall back to DNS-based
HELLO.</t>

<section anchor="dns-based-hello-phase"><name>DNS-based HELLO Phase</name>

<t>When using DNS-based communication the HELLO phase is done by sending
a NOTIFY(SOA) for the zone that triggered the need for
communication. The NOTIFY message MUST contain a Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>In the Multi-Signer EDNS(0) Option the OPERATION field MUST have the
value "HELLO" (1). Furthermore, the MSA signals its transport and
synchronization capabilities in the TRANSPORT and SYNCHRONIZATION
fields. This message is signed with the SIG(0) key for the local MSA
for which the public key is published as a KEY record for the MSA.</t>

<t>In the response to the NOTIFY, the remote MSA does the same and the
two MSAs can now verify each other's identity and are also aware of
the other MSAs transport and synchronization capabilities.</t>

</section>
<section anchor="api-based-hello-phase"><name>API-based HELLO Phase</name>

<t>When using API-based communication the HELLO phase is done by sending
a REST API POST request to the remote MSA at the "/hello"
endpoint. The request MUST contain a JSON encoded object with the
following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the local MSA.</t>
  <t>"synchronization": The synchronization capabilities of the local MSA.</t>
</list></t>

<t>The response MUST contain a JSON object with the following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the remote MSA.</t>
  <t>"synchronization": The synchronization capabilities of the remote MSA.</t>
</list></t>

</section>
<section anchor="interpretation-of-the-hello-responses"><name>Interpretation of the HELLO Responses</name>

<t>Once an MSA has received HELLO responses from all other MSAs that are
designated signers for the zone, it knows the capabilities of the MSAs
as a group. It can then use this information to determine which
transport to use:</t>

<t><list style="symbols">
  <t>If all MSAs support API-based communication, the MSAs will use
API-based communication for this zone.</t>
  <t>If one or more MSAs only support DNS-based communication, the MSAs
will use DNS-based communication for this zone.</t>
</list></t>

<t>Likewise, each MSA now knows the synchronization capabilities of the
other MSAs and can determine which synchronization model to use:</t>

<t><list style="symbols">
  <t>If all MSAs support the Peer-to-Peer synchronization model, the MSAs
will use the Peer-to-Peer synchronization model for this zone.</t>
  <t>If one or more MSAs only support the Leader/Follower synchronization
model, the MSAs will use the Leader/Follower synchronization model
for this zone.</t>
</list></t>

</section>
</section>
<section anchor="multi-signer-edns0-option-format"><name>Multi-Signer EDNS(0) Option Format</name>

<t>This document uses an Extended Mechanism for DNS (EDNS0) <xref target="RFC6891"/>
option to include Multi-Signer synchronization information in DNS
messages.</t>

<t>This option is structured the same way as the KeyState option
described in <xref target="draft-berra-dnsop-keystate"/>, which has been
implemented and shown to work for a similar use case. The requirements
for multi-signer synchronization are sufficiently different that it is
not possible to re-use the KeyState OPT also for this purpose and
therefore a new EDNS(0) option is defined here.</t>

<t>The Multi-Signer EDNS(0) option is structured as follows:</t>

<figure><artwork><![CDATA[
                                               1   1   1   1   1   1 
       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5 
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 0:  |                            OPTION-CODE                        |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 2:  |                           OPTION-LENGTH                       |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 4:  |           OPERATION           |           TRANSPORT           |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 8:  |        SYNCHRONIZATION        |                               /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 
 10: / OPERATION-BODY                                                /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>Field definition details:</t>

<t>OPTION-CODE:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains the value TBD
    for Multi-Signer.</t>

<t>OPTION-LENGTH:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains
    the length of the payload (everything after OPTION-LENGTH) in
    octets and should be 4 plus the length of the OPERATION-BODY field
    (which may be zero octets long).</t>

<t>OPERATION:
    8 bits. Signals the type of operation the message
    performs. This document defines the two operations HELLO and
    HEARTBEAT. For a complete distributed multi-signer specification a
    number of additional operations will need to be allocated to be
    able to describe the states in the different multi-signer
    processes. This allocation must be done either in a revision to
    this document or in a subsequent document.</t>

<t>TRANSPORT:
    8 bits. Encodes the transport capabilities of the MSA. With
    8 bits it is possible to define up to 8 different transports of
    which this document defines two: DNS and API.</t>

<t>SYNCHRONIZATION:
    8 bits. Encodes the synchronization capabilities of
    the MSA. With 8 bits it is possible to define up to 8 different
    synchronization models of which this document defines two:
    Leader/Follower and Peer-to-Peer.</t>

<t>OPERATION-BODY:
    Variable-length. Used to carry operation-specific parameters.</t>

<section anchor="encoding-transport-capabilities-in-the-multi-signer-edns0-option"><name>Encoding Transport Capabilities in the Multi-Signer EDNS(0) Option</name>

<t>An MSA signals the union of its transport capabilities by setting the
corresponding bits to 1.</t>

<t>0: DNS transport supported (baseline, MUST be supported by all MSAs)</t>

<t>1: API transport supported</t>

<t>2: unused</t>

<t>3: unused</t>

<t>4: unused</t>

<t>5: unused</t>

<t>6: unused</t>

<t>7: unused</t>

</section>
<section anchor="encoding-synchronization-capabilities-in-the-multi-signer-edns0-option"><name>Encoding Synchronization Capabilities in the Multi-Signer EDNS(0) Option</name>

<t>An MSA signals its synchronization capabilities by setting the corresponding
bits to 1.</t>

<t>0: Leader/Follower synchronization supported (baseline, MUST be
   supported by all MSAs)</t>

<t>1: Peer-to-Peer synchronization supported</t>

<t>2: unused</t>

<t>3: unused</t>

<t>4: unused</t>

<t>5: unused</t>

<t>6: unused</t>

<t>7: unused</t>

</section>
</section>
</section>
<section anchor="sequence-diagram-example-of-establishing-secure-comms-the-hello-phase"><name>Sequence Diagram Example of Establishing Secure Comms - "The Hello Phase"</name>

<t>The procedure of locating another MSA and establishing a secure
communication, referred to as "The Hello Phase" is examplified in the
sequence diagram below.</t>

<t>The procedure is as follows:</t>

<t><list style="numbers">
  <t>The multisigner agents receive a zone via zone transfer. By
analyzing the HSYNC RRset each MSA become aware of the identities
of the other MSAs for the zone. I.e. each MSA knows which other
MSAs it needs to communicate with.  Communication with each of
these, previously unknown, remote MSAs is referred to as "NEEDED".</t>
  <t>Each MSA starts aquiring the information needed to establish secure
communications with any previously unknown MSAs. Here we only
illustrate the baseline case where DNS-based communications is to
be used in the following phase. Once all needed information has
been collected the communication with this remote MSA is considered
to be "KNOWN".</t>
  <t>Once an MSA has received the required information (URI, SVCB and
KEY records in the baseline case) it sends a NOTIFY message with a
dedicated Multi-Signer OPT code with OPERATION="HELLO". The sender
uses this OPT field to signal its transport and synchronization
capabilities. Similarly, the responder signals its capabilities
using the same field.</t>
  <t>When an MSA either gets a NOERROR response to its NOTIFY OPT(hello)
message or responds with a NOERROR, it transitions out of "The
Hello Phase" with the exchanging party and they transition to the
next phaste where they start sending NOTIFY OPT(heartbeat) signals
instead. The communication with the remote MSA is now considered to
be in the "OPERATIONAL" state.</t>
</list></t>

<t>In the case where one MSA is aware of the need to communicate with
another MSA, but the other is not (eg. the zone transfer was dealyed
for one of them), the slower one SHOULD respond with a RCODE=REFUSED
to any NOTIFY OPT(hello) it receives. Once it is ready, it will send
its own NOTIFY OPT(hello) which should be responded to with a
RCODE=NOERROR.</t>

<figure><artwork><![CDATA[
+----------+                 +----------+                        +----------+
|  Owner   |                 |  MSA A   |                        |  MSA B   |
+----------+                 +----------+                        +----------+
     |                            |                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |--------------------------->|                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |---------------------------------------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  QUERY _dns._tcp.msa-b.se. URI?    |
     |                            |----------------------------------->|
     |                            |  QUERY ns.msa-b.se. SVCB?          |
     |                            |----------------------------------->|
     |                            |  QUERY ns.msa-b.se. KEY?           |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(hello)     |
     |                            |----------------------------------->|
     |                            |  NOERROR sign-me.se. OPT(hello)    |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |                                    |

]]></artwork></figure>

</section>
<section anchor="synchronization-of-changes-between-msas"><name>Synchronization of Changes Between MSAs</name>

<t>There are two defined models for synchronization. The first
(Leader/Follower) has the advantage of more clearly mapping to the
original multi-signer model 2, with a single controller. The second
model has the advantage of less total communication between MSAs
(including no elections) but the potential disadvantage of more fine
grained communication during the execution of a multi-signer process.</t>

<t>At this stage it is not clear that one model is superior to the other.</t>

<section anchor="leaderfollower-mode"><name>Leader/Follower Mode</name>

<t>In a leader/follower deployment, a designated multi-signer agent
assumes the role of a leader, directing other agents, or followers,
through the multi-signer process state transitions. In this mode it is
necessary to conduct “elections” where one of the MSAs is chosen as
the Leader before initiating a new multi-signer process. Once the
Leader has been chosen, this model is mostly equivalent to the
original multi-signer “model 2”, with a single controller. The other
MSAs (the followers) essentially become proxies between the controller
(the Leader) and the DNS Provider each MSA represents.</t>

</section>
<section anchor="peer-mode"><name>Peer Mode</name>

<t>In peer mode, the MSAs still need to locate each other, but instead of
relying on trust in each other, each multi-signer agent operates
independently as a peer. I.e. each MSA executes each step in the
multi-signer process on its own. The communication is essentially
reduced to a notification mechanism (“I am now in state N”), although
authenticated to avoid having the contents of this communication
become an attack vector for an adversary.</t>

</section>
<section anchor="multi-signer-state-transitions"><name>Multi-Signer State Transitions</name>

<t>For the multi-signer process semantics to be fulfilled, a new state
transition in a multi-signer process is only possible when all signing
DNS Providers (or their MSAs) have reached the same state.</t>

<t>I.e. regardless of whether each MSA traverse the finite state machine
separately, or only the Leader does, and the Followers report back
when they have suceeded in executing the associated Actions (as
described in <xref target="I-D.draft-ietf-dnsop-dnssec-automation"/>, they must
not be further apart than one transition.</t>

</section>
</section>
<section anchor="responsibilities-of-an-msa"><name>Responsibilities of an MSA</name>

<t>Each MSA has certain responsibilites, depending on supported
transports and synchronization methods.</t>

<section anchor="enabling-remote-msas-to-locate-this-msa"><name>Enabling Remote MSAs to Locate This MSA</name>

<t>For a group of MSAs to be able to communicate securely and synchronize
data for a zone, each MSA must ensure that:</t>

<t><list style="symbols">
  <t>The DNS records needed for secure communication with other
MSAs are published:
  <list style="symbols">
      <t>URI, SVCB and KEY records required for DNS-based communication
secured by SIG(0).</t>
      <t>URI, SVCB and TLSA records required for API-based communication
secured by TLS (if supported).</t>
      <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the identity of the MSA.</t>
    </list></t>
</list></t>

</section>
<section anchor="enabling-remote-msas-to-lookup-zone-data-added-by-this-dns-provider"><name>Enabling Remote MSAs to Lookup Zone Data Added By This DNS Provider</name>

<t>When using DNS transport between MSAs four types of information is
needed to be conveyed from one party to another: notifications (sent
as DNS NOTIFY), retrieval of existing data (looked up via DNS QUERY),
changes to existing data (sent as DNS UPDATE) and, finally,
multi-signer "state" information (sent via the Multi-Signer EDNS(0)
OPT). For the case of looking up data for a zone that is particular to
a specific DNS Provider (eg. the DNSKEY RRs added by that signer or
the NS RRs representing the authoritative nameservers for that DNS
Provider) this is looked up under domain names constructed from the
name of the served zone and the identity of the DNS Provider.</t>

<t><list style="symbols">
  <t>For each zone that is managed, the data needed for
synchronization with other MSAs is published:
  <list style="symbols">
      <t>The DNSKEY RRset for the zone consisting of the DNSKEYS that the
local signer for this DNS Provider uses to sign the zone.</t>
      <t>The CDS RRset for the zone, representing the KSK that the local
signer uses to sign the zone (when needed).</t>
      <t>The NS RRs for the zone, consisting of the NS records of the
authoritative nameservers that this DNS Provider is responsible
for.</t>
      <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the concatenation of the zone name and the
identity of the MSA. Example for the zone "zone.example" and the
MSA "msa.provider":</t>
    </list></t>
</list></t>

<t>zone.example.msa.provider. IN DNSKEY ...<br />
zone.example.msa.provider. IN RRSIG DNSKEY ...<br />
zone.example.msa.provider. IN NS ... 
zone.example.msa.provider. IN RRSIG NS ...</t>

</section>
</section>
<section anchor="migration-from-single-signer-to-multi-signer"><name>Migration from Single-Signer to Multi-Signer</name>

<t>The migration from a single-signer to a multi-signer architecture is
done by adding the HSYNC RRset to the zone. However, this may be done
in several steps.</t>

<section anchor="adding-a-single-hsync-record-to-an-already-signed-zone"><name>Adding a single HSYNC record to an already signed zone</name>

<t>Adding a single HSYNC record to a zone that is already signed by the
DNS provider "provider.com" with NSMGMT=OWNER is a no-op that does not
change anything:</t>

<t>zone.example. IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>The zone was already signed by the DNS provider "provider.com" and the
provider added any needed DNSSEC records, including DNSKEYs. The zone
NS RRset was managed by the zone owner. All of this is unchanged by
the addition of the HSYNC RRset.</t>

</section>
<section anchor="changing-the-hsync-nsmgmt-field-from-agent-to-owner"><name>Changing the HSYNC NSMGMT Field from AGENT To OWNER</name>

<t>In a multi-signer architecture each MSA publishes the data it
contributes to the zone under the domain name
{zone}.{identity}. I.e. the zone DNSKEYs that the MSA
msa.provider. uses are published as</t>

<t>zone.example.msa.provider. DNSKEY ...
zone.example.msa.provider. DNSKEY ...</t>

<t>Likewise, the NS records for the zone are published as</t>

<t>zone.example.ns.msa.provider. NS ...
zone.example.ns.msa.provider. NS ...</t>

<t>To migrate from "owner maintained" NS RRset to "MSA maintained", the
zone owner must verify that the NS RRset as published by the MSA is
correct and in sync with the NS RRset as published by the zone owner
itself.  After this verification the zone owner changes the HSYNC
NSMGMT field in the existing HSYNC record from NSMGMT=OWNER to
NSMGMT=AGENT.</t>

</section>
<section anchor="migrating-from-a-multi-signer-architecture-back-to-single-signer"><name>Migrating from a Multi-Signer Architecture Back to Single-Signer.</name>

<t>If, for some reason, a zone owner wants to migrate back to a
single-signer architecture, the process is essentially the reverse of
the migration from single-signer to multi-signer:</t>

<t><list style="numbers">
  <t>The zone owner offboards all MSAs but one (the one that will be the
single-signer)</t>
  <t>The zone owner must verify that the NS RRset it publishes (in the
unsigned zone) is correct and in sync with the NS RRset as
published by the remaining MSA.</t>
  <t>The zone owner changes the HSYNC NSMGMT field in the HSYNC record
from NSMGMT=MSA to NSMGMT=OWNER.</t>
</list></t>

<t>The zone is now essentially back to a single-signer architecture.
The remaining HSYNC record may be removed from the zone.</t>

<t>TO BE REMOVED BEFORE PUBLICATION:
# Rationale</t>

</section>
<section anchor="choice-of-the-hsync-mnemonic"><name>Choice of the HSYNC Mnemonic</name>

<t>Initially the mnemonic MSIGNER was used for the HSYNC RRset. However,
as work progressed it became clear that we want also non-signing DNS
Providers to be able to participate. So the RRset is a signalling
mehanism from zone owner to DNS Providers, some of which may or may
not be instructed to sign the zone. Therefore we suggest the mnemonic
HSYNC to indicate that this is a mechanism for "horizontal
synchronization" inside a zone.</t>

<t>But the mnemonic chosen is a very minor point and should a better
suggestion come up it would be great.</t>

</section>
<section anchor="separation-of-msa-and-combiner"><name>Separation of MSA and COMBINER</name>

<t>It is possible to integrate all three multi-signer components (SIGNER,
MSA and COMBINER) into a single piece of software (or two pieces,
depending on the preferred way of slicing the functionality). However,
such a composite module would be a fairly complex piece of software.
This document aims to describe the functional separation of the
different components rather than make a judgement on software design
alternatives.  Hence possible implementation choices are left to the
implementer.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>Multi-signer is a complex system with a number of components and a
significant amount of automation. The authors believe that the only
way to make a multi-signer architecture useful in practice is via
automation. However, automation is a double-edged sword. It can both
make the system more robust and more vulnerable.</t>

<t>While all communication between MSAs is authenticated (either via
SIG(0) signatures ore TLS), the signalling from the zone owner to the
MSAs is via the HSYNC RRset in an unsigned zone. This is a potential
attack vector. However, securing zone transfers from zone owner to DNS
providers is a well-known issue with lots of existing solutions (TSIG,
zone transfer via a secure channel, zone transfer-over-TLS,
etc). Employing some of these solutions is strongly recommended.</t>

<t>From a vulnerability point-of-view this architecture introduces
several new components into the zone signing and publication
process. In particular the COMBINER and the MSAs are new components
that need to be secure. The COMBINER has the advantage of not having
to announce its location to the outside world, as it only needs to
communicate with internal components (the zone owner, the signer and
the MSA).</t>

<t>The MSAs are more vulnerable. They need to be discoverable by other
MSAs and hence they are also discoverable by an adversary. On the
other hand, the MSAs are not needed for a new zone to signed and
published, they are only needed when there are changes that require
the MSAs to synchronize, which is an infrequent event. Furthermore,
should an MSA be unable to fulfill its role during the execution of a
multi-signer process, the multi-signer process will simply stop where
it is. Regardless of where the stop (or rather pause) occurs, the zone
will be fully functional and once the MSA is able to resume its role,
the multi-signer process will continue from where it left off.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations.</name>

<t><strong>Note to the RFC Editor</strong>: In this section, please replace
occurrences of "(this document)" with a proper reference.</t>

<section anchor="hsync-rr-type"><name>HSYNC RR Type</name>

<t>IANA is requested to update the "Resource Record (RR) TYPEs" registry
under the "Domain Name System (DNS) Parameters" registry group as
follows:</t>

<dl>
  <dt>Type</dt>
  <dd>
    <t>HSYNC</t>
  </dd>
  <dt>Value</dt>
  <dd>
    <t>TBD</t>
  </dd>
  <dt>Meaning</dt>
  <dd>
    <t>Zone owner designation of DNS providers enabling mutual discovery</t>
  </dd>
  <dt>Reference</dt>
  <dd>
    <t>(this document)</t>
  </dd>
</dl>

</section>
<section anchor="new-multi-signer-edns-option"><name>New Multi-Signer EDNS Option</name>

<t>This document defines a new EDNS(0) option, entitled "Multi-Signer",
assigned a value of TBD "DNS EDNS0 Option Codes (OPT)" registry</t>

<t>TO BE REMOVED UPON PUBLICATION: 
<eref target="foo">https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11</eref></t>

<figure><artwork><![CDATA[
   +-------+--------------------+----------+----------------------+
   | Value | Name               | Status   | Reference            |
   +-------+--------------------+----------+----------------------+
   | TBD   | Multi-Signer       | Standard | ( This document )    |
   +-------+--------------------+----------+----------------------+
]]></artwork></figure>

</section>
<section anchor="a-new-registry-for-edns-option-multi-signer-operation-codes"><name>A New Registry for EDNS Option Multi-Signer Operation Codes</name>

<t>The Multi-Signer option also defines an 8-bit operation field, for
which IANA is requested to create and mainain a new registry entitled
"Multi-Signer Operations", used by the Multi-Signer option. Initial
values for the "Multi-Signer Operations" registry are given below;
future assignments in in the 3-127 range are to be made through
Specification Required review <xref target="BCP26"/>.</t>

<figure><artwork><![CDATA[
+-----------+---------------------------------------------+-------------------+
| OPERATION | Mnemonic                                    | Reference         |
+-----------+---------------------------------------------+-------------------+
| 0         | forbidden                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 1         | HELLO                                       | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 2         | HEARTBEAT                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 3-127     | Unassigned                                  | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 128-255   | Private Use                                 | ( This document ) |
+-----------+---------------------------------------------+-------------------+
]]></artwork></figure>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8901' target='https://www.rfc-editor.org/info/rfc8901'>
  <front>
    <title>Multi-Signer DNSSEC Models</title>
    <author fullname='S. Huque' initials='S.' surname='Huque'/>
    <author fullname='P. Aras' initials='P.' surname='Aras'/>
    <author fullname='J. Dickinson' initials='J.' surname='Dickinson'/>
    <author fullname='J. Vcelak' initials='J.' surname='Vcelak'/>
    <author fullname='D. Blacka' initials='D.' surname='Blacka'/>
    <date month='September' year='2020'/>
    <abstract>
      <t>Many enterprises today employ the service of multiple DNS providers to distribute their authoritative DNS service. Deploying DNSSEC in such an environment may present some challenges, depending on the configuration and feature set in use. In particular, when each DNS provider independently signs zone data with their own keys, additional key-management mechanisms are necessary. This document presents deployment models that accommodate this scenario and describes these key-management requirements. These models do not require any changes to the behavior of validating resolvers, nor do they impose the new key-management requirements on authoritative servers not involved in multi-signer configurations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8901'/>
  <seriesInfo name='DOI' value='10.17487/RFC8901'/>
</reference>

<reference anchor='RFC1996' target='https://www.rfc-editor.org/info/rfc1996'>
  <front>
    <title>A Mechanism for Prompt Notification of Zone Changes (DNS NOTIFY)</title>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='August' year='1996'/>
    <abstract>
      <t>This memo describes the NOTIFY opcode for DNS, by which a master server advises a set of slave servers that the master's data has been changed and that a query should be initiated to discover the new data. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1996'/>
  <seriesInfo name='DOI' value='10.17487/RFC1996'/>
</reference>

<reference anchor='RFC2136' target='https://www.rfc-editor.org/info/rfc2136'>
  <front>
    <title>Dynamic Updates in the Domain Name System (DNS UPDATE)</title>
    <author fullname='P. Vixie' initials='P.' role='editor' surname='Vixie'/>
    <author fullname='S. Thomson' initials='S.' surname='Thomson'/>
    <author fullname='Y. Rekhter' initials='Y.' surname='Rekhter'/>
    <author fullname='J. Bound' initials='J.' surname='Bound'/>
    <date month='April' year='1997'/>
    <abstract>
      <t>Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone. Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2136'/>
  <seriesInfo name='DOI' value='10.17487/RFC2136'/>
</reference>

<reference anchor='RFC3007' target='https://www.rfc-editor.org/info/rfc3007'>
  <front>
    <title>Secure Domain Name System (DNS) Dynamic Update</title>
    <author fullname='B. Wellington' initials='B.' surname='Wellington'/>
    <date month='November' year='2000'/>
    <abstract>
      <t>This document proposes a method for performing secure Domain Name System (DNS) dynamic updates. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='3007'/>
  <seriesInfo name='DOI' value='10.17487/RFC3007'/>
</reference>

<reference anchor='RFC2931' target='https://www.rfc-editor.org/info/rfc2931'>
  <front>
    <title>DNS Request and Transaction Signatures ( SIG(0)s )</title>
    <author fullname='D. Eastlake 3rd' initials='D.' surname='Eastlake 3rd'/>
    <date month='September' year='2000'/>
    <abstract>
      <t>This document describes the minor but non-interoperable changes in Request and Transaction signature resource records ( SIG(0)s ) that implementation experience has deemed necessary. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2931'/>
  <seriesInfo name='DOI' value='10.17487/RFC2931'/>
</reference>

<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC6891' target='https://www.rfc-editor.org/info/rfc6891'>
  <front>
    <title>Extension Mechanisms for DNS (EDNS(0))</title>
    <author fullname='J. Damas' initials='J.' surname='Damas'/>
    <author fullname='M. Graff' initials='M.' surname='Graff'/>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='April' year='2013'/>
    <abstract>
      <t>The Domain Name System's wire protocol includes a number of fixed fields whose range has been or soon will be exhausted and does not allow requestors to advertise their capabilities to responders. This document describes backward-compatible mechanisms for allowing the protocol to grow.</t>
      <t>This document updates the Extension Mechanisms for DNS (EDNS(0)) specification (and obsoletes RFC 2671) based on feedback from deployment experience in several implementations. It also obsoletes RFC 2673 ("Binary Labels in the Domain Name System") and adds considerations on the use of extended labels in the DNS.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='75'/>
  <seriesInfo name='RFC' value='6891'/>
  <seriesInfo name='DOI' value='10.17487/RFC6891'/>
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.draft-ietf-dnsop-dnssec-automation' target='https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-dnssec-automation-03'>
   <front>
      <title>DNSSEC automation</title>
      <author fullname='Ulrich Wisser' initials='U.' surname='Wisser'>
         </author>
      <author fullname='Shumon Huque' initials='S.' surname='Huque'>
         <organization>Salesforce</organization>
      </author>
      <author fullname='Johan Stenstam' initials='J.' surname='Stenstam'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <date day='19' month='October' year='2024'/>
      <abstract>
	 <t>   This document describes an algorithm and protocol to automate the
   setup, operations, and decomissioning of Multi-Signer DNSSEC
   [RFC8901] configurations.  It employs Model 2 of the multi-signer
   specification, where each operator has their own distinct KSK and ZSK
   sets (or CSK sets), Managing DS Records from the Parent via CDS/
   CDNSKEY [RFC8078], and Child-to-Parent Synchronization in DNS
   [RFC7477] to accomplish this.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-dnsop-dnssec-automation-03'/>
   
</reference>

<referencegroup anchor='BCP26' target='https://www.rfc-editor.org/info/bcp26'>
  <reference anchor='RFC8126' target='https://www.rfc-editor.org/info/rfc8126'>
    <front>
      <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
      <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
      <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
      <author fullname='T. Narten' initials='T.' surname='Narten'/>
      <date month='June' year='2017'/>
      <abstract>
        <t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters. To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper. For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
        <t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed. This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
        <t>This is the third edition of this document; it obsoletes RFC 5226.</t>
      </abstract>
    </front>
    <seriesInfo name='BCP' value='26'/>
    <seriesInfo name='RFC' value='8126'/>
    <seriesInfo name='DOI' value='10.17487/RFC8126'/>
  </reference>
</referencegroup>




    </references>


<section anchor="change-history-to-be-removed-before-publication"><name>Change History (to be removed before publication)</name>

<t><list style="symbols">
  <t>draft-leon-distributed-multi-signer-00</t>
</list></t>

<ul empty="true"><li>
  <t>Initial public draft.</t>
</li></ul>

</section>


  </back>

<!-- ##markdown-source:
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
Mwq7at5QyiD5m/FWHvzGjUzi1WQ2q5nOWGqMry4AiUSHmoMOxjQCysowQmS3
xu7EvEaHHudlNVuj91thk2Ebm5qup0I5/6a7tEmrIjsrlq5TIhUWYF0CYmSV
oV4oghU8cqXXqPC9TvbP69mlb+XuIcPhRBNfHzLBvFOMnfmD8mXSUlMht+rg
+4t87gNloZqagpxcUoCW5lPJAs0kLvEiPmG+TlHgw83vNZoWas6irVFXFLoO
jfQGhNmyWpd6U7c4zZm9sxGPkbQF9t4O0odyx/Go/b1Xtyi/wNLm6wVKgFWd
wUFMiZdfF5mJ5/PWWvhQ7gGt1lh8lM9QiXc33MGcm1BgzyhD85MbiTdPYeu6
uqBbVsoZ/329XpTUnz+n25uKBVPMLTchFXxtewhH6XV4uHDplsOhZNijszjJ
+fMzTXT1bLLvznQ9cJ1HXYdJw3XKoE6EeGhllYWovUkCXREYyUmNC0iSdN0W
bu2NNBk/unehcG4tmemLiiNvXmV01WIt3tpzgMnIpBnBeg08hwGAmErs3JA8
M8aL58YAuZHJmylwh8Mlhut5cO8idHk0FRfVV8CrNiTHl0tqvgAH+4x1UD1s
vkAu7eRPQiH1KmBkGCOYzqhTAMN3EckQe/RHqFKUOmSGG8D1YikK5sdu26vo
4i71bvq4RzqTiS/a4hbhCDomRj9IbzYISlKOk3LadAk0TXnRzvoyT02jWDck
44CUFjO6AK9oOJ6nNTGmnRQeLliPBUqK1QHzubRQrwfS65f8ntsEibvbxLvG
uzwRLUgnAf0zCv8jAP3lqZvQ3qn9ShLstSesFbOj9yrT3njhFKomjltx/Nbf
PMEUSLefrP11Gn56DzgUfhLglKyjoBJnjUaXwqVJOHQIu2lvjYIaihTlvJaK
WkBJ7OoUNw4zqmKUUjYFfEL1NwlD08FTBsvWLJ3eyD8DpjdIzSn13GrQNdWK
k08MZavgNT+t+HKt5cnwJOoPIlJX2PVvaKspILYLN2UYNYpg/Xg3TpDYeOKV
3izbaiwJjHe9zP1e+Uaq7YtHN0tRrsUXwGuE5ZMMBuuNhO7R/vF+S+BiuOHj
Y4ykCQGdPntqD2cF8NuPP97zuTvSR25kQRJjgKfOVwu8lJK2WiPOEmgGO0mV
7nCg0hovl8hrrhnDp1kn9Pfknm9WmHaCyyucNvhikonuAhyc5q5a1wCuU7Zw
dk5Bvzv//uWhG2AOAJasb0zwKw3k2uxjtB3OWIDugDwY2pe+hje8KMHlzJlQ
GUjr2hP/gqFr0uFPbGdgXuQZJS/s2ejCdU3AEjSMHYjSmZ8uy1w3a05JI7Le
4J1lAhcYrgVCAtQxkGwn9uZLXfuL//u6vIwsedXwxrlBPN4ADS/lBdK0AdYP
G6XLPmiUh9ov6CmVhu9g2C8Ce8uefPXy5DixJq35g/b+vbm5mRRZmU2q+vIB
z0u9ch7MSjcO5dWtPydvrprl4qP0w/Hu7h935lU19D1ntMbjk74U0k96f02e
MJSzSUcN/0+o007oPOPbxvFXf3CdtNAPsw48Afz/5PCjdZQzYEzw606rA8Tw
w62DE1M/svuEhadKLShLIixs1fz5lhWELD29hKSHEMs3xdjSfjm+KJqo4wX5
V8iFJr2de3nEFM1MjmQhwXP7PMR+T9uK9mbQv043GLF3Qj2b3bVOtGOsXg7v
707fNmSYHgUmt/emiuT/auTyzgj5USkWP9Lj8e6jL0CmULCjzkVxoHtJJf/S
nCVdOE41uQPLYmHbP/zwmydPXz76/N27blXXtoPe8tP3NNZ1he4+b70P6F6Z
zj0k8/YXWN/DaEY4qItiNgPo32d9XVL6Jda3G83IPVnu9/P3Wt+jZH3SJeYf
aH1MIzzjq9ILr3+Y9e0++nL86LPPaMaXdXGN/OmVa8uS/1/rI54Ov3HqopG4
IBjpwK7wxtcdZjnqOpbc6sggHGKWCqcnLvKqHEftgsaxjjp++NCYX/te29Jd
l16cmP8H8v4i0qrSAAA=

-->

</rfc>

