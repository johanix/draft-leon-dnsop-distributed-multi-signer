<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-leon-distributed-multi-signer-00" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Distributed Multi-Signer Bootstrap">Distributed DNSSEC Multi-Signer Bootstrap</title>

    <author initials="L." surname="Fernandez" fullname="Leon Fernandez">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>leon.fernandez@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="E." surname="Bergström" fullname="Erik Bergström">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>erik.bergstrom@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="J." surname="Stenstam" fullname="Johan Stenstam">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>johan.stenstam@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="S." surname="Crocker" fullname="Steve Crocker">
      <organization>Edgemoor Research Institute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>steve@shinkuro.com</email>
      </address>
    </author>

    <date />

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<section anchor="abstract"><name>Abstract</name>

<t>This document presents an architecture for a distributed DNSSEC
multi-signer model that most closely resembles "model 2" in
<xref target="RFC8901"/>.</t>

<t>It defines two multi-signer specific entities: the "multi-signer
agent" (MSA) that is responsible for the multi-signer process and the
"combiner", which is responsible for "combining" unsigned zone data
from the zone owner with zone data under control of the MSA. It
introduces a new DNS RRtype, HSYNC, that is used by the zone owner to
designate the chosen DNS Providers (signing and/or serving the
zone). Furthermore it describes a mechanism for the MSAs to establish
secure communication with each other, either via “pure DNS”
communication secured by DNS SIG(0) signatures on each message or via
a RESTful API secured by TLS. Finally, the document describes two
models for multi-signer process synchronization: “leader/follower
mode” and “peer mode” and the mechanism by which a set of MSAs decide
which model to use for a given zone.</t>

<t>The scope of the document is only the distributed aspect of DNSSEC
multi-signer up to the point where secure communication and
synchronization method between MSAs has been established. The
“multi-signer algorithms” that deal with the actual synchronization
required for multi-signer operation are described in
<xref target="I-D.draft-ietf-dnsop-dnssec-automation"/>.</t>

<t>TO BE REMOVED: This document is being collaborated on in Github at:
<eref target="https://github.com/johanix/draft-leon-dnsop-distributed-multi-signer">https://github.com/johanix/draft-leon-dnsop-distributed-multi-signer</eref>.
The most recent working version of the document, open issues, etc, should all be
available there.  The authors (gratefully) accept pull requests.</t>

</section>


    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>The issue of how to eliminate so-called "single points of failure"
from systems to make them more robust is a recurring theme in systems
design and so also for DNS. In the DNS case redundancy is addressed by
having multiple name servers for the same zone. However, when the zone
is DNSSEC-signed there is traditionally an additional single point of
failure: the so-called "signer" of the zone.</t>

<t>In multi-signer (<xref target="RFC8901"/>) model 2, a process is described by
which it is possible to use more than one signer (each with its own
set of keys), by having the signers (or their agents) communicate and
exchange data that should be signed by the other signer. The most
obvious example is that each signer's Key-Signing Key must sign a
DNSKEY RRset that contains the Zone-Signing Keys for all signers.</t>

<t>To synchronize data between signers two models are possible: either a
"centralized" model where a single "controller" decides what changes
are needed, or a "distributed" model where the signers themselves (or
an agent of each signer) decide what changes are needed.</t>

<t>The first model has been implemented previously, and while it works
from a technical point of view, it is not a good solution from a risk
management point of view. The primary problem is that the signers have
difficulty accepting that an external third party (the controller) has
the ability to modify data (in a customer zone).</t>

<t>This document is an attempt to address the synchronization problem by
proposing a distributed model without a central controller.</t>

<t>The communication between signers has two parts: first it is necessary
to find out what data each signer has for a zone. Once all data has
been collected it is possible to compute what changes are needed to
the zone data at each signer. That triggers the second phase where the
zone data for the individual signers is changed to get them in sync
with each other. All of this is done automatically.</t>

<t>However, from a slightly different perspective, the multi-signer
alternative is the more general case of DNSSEC signing, with the (very
common) case of a single signer being a special case.</t>

<t>From that point of view, this document proposes an architecture for a
completely automated, distributed multi-signer model together with a
seamless transition path from the current single-signer model to the
multi-signer model. From the zone owners point of view, the transition
is done through the addition of a new RRtype, HSYNC, that is used to
designate the chosen DNS Providers, their responsibilities and
information to enable the DNS Providers to locate each other.</t>

<t>Knowledge of DNS NOTIFY <xref target="RFC1996"/> and DNS Dynamic Updates
<xref target="RFC2136"/> and <xref target="RFC3007"/> is assumed. DNS SIG(0) transaction
signatures are documented in <xref target="RFC2931"/>.</t>

<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "<strong>MUST</strong>", "<strong>MUST NOT</strong>", "<strong>REQUIRED</strong>", "<strong>SHALL</strong>",
"<strong>SHALL NOT</strong>", "<strong>SHOULD</strong>", "<strong>SHOULD NOT</strong>", "<strong>RECOMMENDED</strong>",
"<strong>NOT RECOMMENDED</strong>", "<strong>MAY</strong>", and "<strong>OPTIONAL</strong>" in this document
are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<t>...</t>

</section>
<section anchor="requirements"><name>Requirements</name>

<t>The requirements for an architecture for distributed multi-signer are
defined as follows:</t>

<t><list style="symbols">
  <t>Assuming all zone transfers are correctly set up, a zone owner MUST
be able to signal to the individual multi-signer providers
information sufficient for the providers to identify each other and
establish secure communication.</t>
  <t>The zone owner MUST be able to signal the intent to onboard an
additional multi-signer provider. This MUST automatically initiate
the multi-signer “add signer” process, as described in <xref target="RFC8901"/>.</t>
  <t>The zone owner MUST be able to signal the intent to offboard an
existing multi-signer provider. This MUST automatically initiate
the multi-signer “remove signer” process, as described in <xref target="RFC8901"/>.</t>
  <t>All signalling from zone owner to multi-signer providers SHOULD be
carried out via data in the served zone, to ensure that all
providers get the same configuration information at (almost) the
same time.</t>
  <t>By engaging a set of multi-signer providers (one or more), the zone
owner MUST give up control over the following records:
  <list style="symbols">
      <t>All DNSSEC related records in the zone</t>
      <t>Any CDS and/or CSYNC RRsets</t>
    </list></t>
  <t>It SHOULD be possible but NOT MANDATORY for the zone owner to also
delegate the management of the NS RRset to the set of DNS
Providers.</t>
</list></t>

</section>
<section anchor="multi-signer-use-cases"><name>Multi-Signer Use Cases</name>

<section anchor="primary-use-case"><name>Primary Use Case</name>

<t>The primary use case for the proposed multi-signer architecture is the
following scenario: A zone owner needs to remove the single point of
failure that the DNSSEC signer constitutes. For this reason it
contracts with two or more “multi-signer capable” DNS providers.
Each such DNS provider provides the following service:</t>

<t><list style="symbols">
  <t>Receive the unsigned zone via zone transfer.</t>
  <t>Locate all active DNS Providers via the HSYNC RRset as published by
the zone owner. Establish secure communication with all remote DNS
Providers (via their agents).</t>
  <t>Update the DNSKEY, CDS and CSYNC RRsets as needed, based on
synchronization with the remote signers (or their agents).</t>
  <t>Update the NS RRset if allowed by the zone owner, based on
synchronization with the remote DNS Providers (or their agents).</t>
  <t>Sign the zone, using own DNSKEYs, but with a published DNSKEY RRset
that includes the DNSKEYs of other signers.</t>
  <t>Possibly distribute the signed zone to a set of downstream
authoritative nameservers under own control.</t>
  <t>Possbly distribute the signed zone to non-signing downstream DNS
Providers.</t>
</list></t>

</section>
<section anchor="secondary-use-case"><name>Secondary Use Case</name>

<t>A slightly different use case is where a zone owner has a desire to
replace one DNSSEC-signing DNS provider with another. In the first
step it onboards the new DNS provider by adding a HSYNC RR with HSYNC
State=“ON” thereby identifying the new DNS provider and signalling its
role. This informs both the present DNS providers and the incoming DNS
provider about the addition of the new DNS provider and the onboarding
process is automatically initiated.</t>

<t>Once the onboarding operation is completed the zone owner may trigger
the pending removal of another DNS provider by changing the HSYNC
State flag for the outgoing DNS Provider to “OFF”. This informs all
the present DNS providers about the pending removal and the
offboarding process is automatically initiated.</t>

</section>
<section anchor="tertiary-use-case"><name>Tertiary Use Case</name>

<t>A third use case is where a zone owner wants to migrate from a
single-signer model to a multi-signer model, but as a first step only
wants to transition the existing signer to be designated via a single
HSYNC record. Once that is done the zone owner can continue the
transition to a full multi-signer model at a later time by adding more
HSYNC records.</t>

</section>
</section>
<section anchor="the-distributed-multi-signer-model"><name>The Distributed Multi-Signer Model</name>

<t>The primary difference between monolithic and distributed multi-signer
is that the former has a central “controller” while the latter
doesn’t. But there is still an absolute need for synchronization
between the different participants in the distributed multi-signer
setup.</t>

<t>There are three immediate aspects for the design of a distributed
multi-signer architecture:</t>

<t><list style="symbols">
  <t>The first is “transport”: how to communicate between the
individual instances in a multi-signer system.</t>
  <t>The second is “synchronization”: who decides what changes are
needed where.</t>
  <t>The third is source of truth for different types of zone data. The
zone owner is the source of truth for all unsigned zone data,
except DNSSEC data. The signer is the source of truth for all
DNSSEC data in the zone. Traditionally, the source of truth for the
NS RRset is the zone owner, but with multiple DNS Providers having
the option of moving that responsibility to the DNS Providers would
be an important improvement.</t>
</list></t>

<section anchor="multi-signer-agent-integrated-signer-vs-separate-agent"><name>Multi-Signer Agent: Integrated Signer vs Separate Agent</name>

<t>In a distributed setup there must be a service located with each
multi-signer DNS Provider that manages communication with other DNS
Providers. This is referred to as the multi-signer agent, or MSA. As
not every DNS Provider needs to be signing the zone, the term is not
entirely perfect, but sufficient.</t>

<t>It is possible to implement support for the synchronization and
communication needs directly into each “signer” (i.e. typically an
authoritative nameserver with the ability to do online DNSSEC
signing). In this case the signer implements the MSA functionality.</t>

<t>However, it is also possible to separate the multi-signer
functionality into a separate agent. This agent sits next to the
signer, and is under the same administrative control (the "DNS
Provider"), but is a separate piece of software. When using this
design each signer has an MSA attached next to it. Each MSA is
configured as a “secondary nameserver” to a signer and receives the
(signed) zone from this signer.</t>

<t>The “separate MSA” design has the major advantage of leaving the
signer almost entirely out of the multi-signer complexity. The
requirements are only that the “signer” treats the MSA as a normal
secondary (sends NOTIFY messages and responds to zone transfer
requests) and that the MSA has a mechanism that allows it to make
changes to zones upstream of the “signer” to satisfy the multi-signer
requirements for synchronization of certain RRsets in the apex of the
zone.</t>

<t>In this document the design using a separate MSA is used, while
pointing out that it is possible to integrate this into a future
“signer” that implements both DNSSEC signing and the MSA
functionality.</t>

</section>
<section anchor="source-of-truth"><name>Source of Truth</name>

<t>A common design for DNSSEC signing (regardless of multi-signer) is to
use a separate, bump-on-the-wire signer. This is a signer that
receives the unsigned zone via an incoming zone transfer, signs the
zone, and publishes the signed zone via an outbound zone transfer. In
such a design the source of truth has been split up between the “zone
owner” (source of truth for all non-DNSSEC zone data), and the signer
(source of truth for all DNSSEC data in the zone).</t>

<t>In a distributed multi-signer architecture the source of truth is
further split up into three participants:</t>

<t><list style="symbols">
  <t>The zone owner is the source of truth for all unsigned zone data,
except DNSSEC data and possibly the NS RRset.</t>
  <t>The signer is the source of truth for all data generated via DNSSEC
signing: own DNSKEYs, NSEC/NSEC3 RRs, RRSIGs, etc.</t>
  <t>The MSA is the source of truth for the RRsets that must be kept in
sync across all the signers for the zone. This includes the DNSKEYs
from other signers, CDS and CSYNC RRsets. Possibly also the NS RRset.</t>
</list></t>

<t>The NS RRset is an interesting special case. Traditionally the NS
RRset is maintained by the zone owner, but based on data from the DNS
providers (as authoritative nameservers is a primary service for the
DNS provider). However, in a distributed multi-signer architecture the
NS RRset should preferably be maintained by the MSA. For this reason
the proposed design makes control of the NS RRset explicit and the
responsibility of the zone owner to choose whether to retain control
or delegate to the MSAs. Hence:</t>

<t><list style="symbols">
  <t>The MSA is the source of truth for the NS RRset, subject to the
policy of the zone owner, as described in the HSYNC RRset.</t>
</list></t>

<t>Making the control of the NS RRset explicit is useful regardless of
whether a zone uses multiple signers or single signer.</t>

<t>To be able to keep the signer as simple as possible, the changes to the
NS, DNSKEY, CDS and CSYNC RRsets must be introduced into the unsigned
zone before the zone reaches the signer. Likewise, to keep the zone
owner as simple as possible (i.e. not involved in the details of the
multi-signer automation) these changes must be introduced into the
unsigned zone after the zone leaves the zone owner.</t>

<section anchor="the-combiner"><name>The COMBINER</name>

<t>The consequence of these requirements is that the DNSKEY, CDS and
CSYNC RRsets (and possibly the NS RRset) are maintained via a separate
piece of software inserted between the zone owner and the signer. This
is referred to as the multi-signer COMBINER.</t>

<t>The COMBINER has the following features:</t>

<t><list style="symbols">
  <t>It supports inbound zone transfer of the unsigned zone from the
zone owner.</t>
  <t>It receives updates for the NS, DNSKEY, CDS and CSYNC
RRsets from the MSA. Typically the mechanism used is DNS UPDATE
with a TSIG signature, as this is easy to configure in a local
context. However, other mechanisms, including APIs, are possible.</t>
  <t>It stores all data received from the MSA separate from
the zone data received from the zone owner.</t>
  <t>Whenever it receives a new unsigned zone from the zone owner it
COMBINES zone data from the zone owner (the majority of the zone)
with specific zone data under control of the MSA: three specific
RRsets, all in the apex of the zone: the DNSKEY,CDS and CSYNC
RRsets.</t>
  <t>It is policy free. I.e. the COMBINER is not making any judgement
about what data to include in the zone from the four defined
RRsets.  That judgement is the role of the MSA.</t>
  <t>It does not sign the zone.</t>
  <t>It provides outbound zone transfer of the combined zone to the
signer.</t>
</list></t>

<t>Example setup with two signers showing the logical flow of zone data
between the zone owner, the COMBINER, the signer and the MSA:</t>

<figure><artwork><![CDATA[
                            +--------------+
                            |     owner    |
               xfr          +-+---------+--+    xfr
            /----------------/           \--------------------\
           /                                                   \
    +-----+----+    DNS  +-----+  DNS/API  +-----+  DNS    +----+-----+
    | combiner +<--------+ msa +-----------+ msa +-------->+ combiner |
    +-----+----+  UPDATE +--+--+           +--+--+ UPDATE  +----+-----+
          |                 ^                 ^                 |
          v xfr             |                 |                 v xfr
    +-----+----+     xfr    |                 |   xfr      +----+-----+
    |  signer  +------------+                 +------------+  signer  |
    +-----+----+                                           +----+-----+
          |                                                     |
          v                                                     v
       +--+--+                                               +--+--+
       | NS  |--+                                            | NS  |+
       +-----+  |--+                                         +-----+|-+
          +-----+  |                                            +---+ |
             +-----+                                              +---+
]]></artwork></figure>

</section>
</section>
<section anchor="the-dns-provider"><name>The DNS Provider</name>

<t>A "DNS Provider" is a term that is most commonly used to refer to an
entity that provides authoritative DNS service to one or more zone
owners. In the context of this document it is used to refer to an
entity that provides some subset of the following services:</t>

<t><list style="symbols">
  <t>Signing a zone received from the zone owner.</t>
  <t>Serving the zone via a set of authoritative nameservers.</t>
  <t>Distributing the signed zone to other downstream DNS Providers.</t>
</list></t>

<t>In addition to the above services a DNS Provider MUST also provide:</t>

<t><list style="symbols">
  <t>An MSA for synchronization with other DNS Providers</t>
  <t>A COMBINER for the management of changes to the zone via<br />
the synchronization among MSAs (if it provides a signer)</t>
</list></t>

<t>I.e. in the setup above there are two DNS Providers, both of which are
"complete" in the sense that they provide all three of the above
services.</t>

</section>
</section>
<section anchor="identifying-the-designated-signers"><name>Identifying the Designated Signers</name>

<t>It is the responsibility of the zone owner to choose a set of "DNS
Providers", either internal or external to the zone owners
organization. These DNS Providers MUST be clearly and uniquely
designated via publication in the HSYNC RRset, located at the apex of
the zone and consisting of one HSYNC record for each signer.</t>

<t>The HSYNC RRset MUST be added, by the zone owner, to the, typically
unsigned, zone that the zone owner maintains so that this RRset is
visible to the downstream DNS Providers and their multi-signer agents.</t>

</section>
<section anchor="the-hsync-rrset"><name>The HSYNC RRset</name>

<t>The HSYNC RR has the zone name that publishes the HSYNC RRset as the
owner name (i.e. the HSYNC RRset must be located at the apex of the
zone). The RDATA consists of four fields "State","NSMgmt", "Sign" and
"Identity":</t>

<t>zone.example.    IN HSYNC  State  NSMgmt  Sign  Identity.</t>

<t>State:
    Unsigned 8-bit. Defined values are 1=ON and 2=OFF. The value 0
    is an error.  Values 3-127 are presently undefined. Values 128-255
    are reserved for private use. The presentation format allows
    either as integers (1 or 2) or as tokens (“ON” or “OFF”).</t>

<t>NSMgmt:
    Unsigned 8-bit. Defined values are 1=Zone owner and 2=MSA. The
    value 0 is an error. Values 3-255 are presently undefined (and not
    expected to be defined). The presentation format allows either as
    integers (1 or 2) or as tokens (“OWNER” or “AGENT”).</t>

<t>Sign:
    Unsigned 8-bit. Defined values are 1=YES and 2=NO. The value 0 is an
    error. If Sign=YES for a particular HSYNC record, then the signer
    associated with that Identity is a designated signer for the zone.</t>

<t>Identity:
    Domain name. Used to uniquely identify the Multi-Signer
    Agent for the DNS Provider that the MSA represents.</t>

<t>Example:</t>

<t>zone.example.   IN HSYNC  ON  AGENT  YES  msa.provider.example.</t>

<section anchor="semantics-of-the-hsync-state-field"><name>Semantics of the HSYNC State Field</name>

<t>The HSYNC State field is used to signal to all MSAs what the status of
each MSA is from the point-of-view of the zone owner. The two possible
values are "ON" and "OFF" where "ON" means that the MSA is a currently
designated signer for the zone and "OFF" means that the MSA is
previously designated signer for the zone that is in the process of
being offboarded.</t>

<t>The reason for the "OFF" state is that the offboarding process
involves the remaining signers (hence the signalling) and it is
important to know which signer is being offboarded so that the correct
data may be removed in the correct order during the multi-signer
"remove signer" process (see <xref target="RFC8901"/>).</t>

<t>Once the offboarding process is complete the HSYNC RR for the
offboarded MSA may be removed from the zone at the zone owners
discretion.</t>

</section>
<section anchor="semantics-of-the-hsync-nsmgmt-field"><name>Semantics of the HSYNC NSMgmt Field</name>

<t>The NSMgmt field is used to signal to the MSAs who is responsible for
the contents of the NS RRset for the zone. The two possible values are
"OWNER" and "AGENT".</t>

<t>The value "OWNER" signals that the zone owner is responsible for the NS
RRset and is responsible for updating the NS RRset (either with or
without the unified data from all MSAs). In this case the MSAs MUST NOT
instruct the COMBINER to update the NS RRset.</t>

<t>The value "AGENT" means that the MSAs representing DNS Providers that
sign the zone are responsible for the contents of the NS RRset. In
this case the these MSAs MUST instruct the COMBINER to update the NS
RRset with the unified NS RRset data from all MSAs.</t>

<section anchor="limitation-of-scope-for-ns-management"><name>Limitation of Scope for NS Management</name>

<t>For the purpose of this document the NSMgmt Field only covers the NS
RRset. I.e. it does not include the address records of in-bailiwick
authoritative nameservers. The reasons are:</t>

<t><list style="symbols">
  <t>Limiting the possibility of DNS Providers "polluting" the name space
of the zone.</t>
  <t>Keeping the specification simpler, as the concept of "delegated" NS
management is new.</t>
</list></t>

<t>It is possible to make an argument for delegating management of
address records for in-bailiwick authoritative nameservers, but this
document does not.</t>

</section>
</section>
<section anchor="semantics-of-the-hsync-sign-field"><name>Semantics of the HSYNC Sign Field</name>

<t>The Sign field is used to signal to all MSAs whether the zone owner
requests that the DNS Provider that the MSA represents should sign the
zone or not. The two possible values are "YES" and "NO" where "YES"
means that the MSA represents a currently designated signer for the
zone and "NO" means that the MSA does not.</t>

<t>When Sign=NO the MSA MUST still participate in the communication
between MSAs for the zone, but MUST NOT instruct the COMBINER to
update the NS RRset.</t>

</section>
</section>
<section anchor="communication-between-msas"><name>Communication Between MSAs</name>

<t>For the communication between MSAs there are two choices that need to
be made among the designated MSAs for a zone. The first is what
"transport" to use for the communication. The second is what
"synchronization" model to use when executing future multi-signer
processes.</t>

<t>The two defined transport alternatives are:</t>

<t><list style="symbols">
  <t>DNS-based communication (mandatory to support)</t>
  <t>REST API-based communication</t>
</list></t>

<t>Each has pros and cons and at this point in time it is not clear that
one always is better than the other. To simplify the choice of
transport DNS-based communication is mandatory to support and the REST
API-based communication may only be used if all MSAs support
it. Supported transports are signaled in the Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>The two defined synchronization alternatives are:</t>

<t><list style="symbols">
  <t>Leader/Follower synchronization (mandatory to support)</t>
  <t>Peer-to-Peer synchronization</t>
</list></t>

<t>Just as for transport, supported synchronization models are signaled
in the Multi-Signer EDNS(0) Option (see section NNN below).</t>

<t>Regardless of the synchronization model and communication method used,
the MSAs SHOULD exchange all needed information about the zone and the
DNS Provider they represent to enable the multi-signer processes to
execute correctly. This includes notifications about changes to
DNSKEYs, changes to the NS RRset, etc. Depending on synchronization
model it may also include instructions for changes to the zone.</t>

<t>## MSA Communication via DNS</t>

<t>This transport alternative is based on the observation that all the
communication needs between MSAs can be expressed via DNS
messages. Notifications are sent as DNS NOTIFY messages. Requests for
changes to a zone are sent as DNS UPDATE messages, etc. The sole
remaining communication requirement is for how to communicate
information about the current state between MSAs in an ongoing
multi-signer process. For this reason a dedicated EDNS(0) opcode
specifically for multi-signer synchronization is proposed.</t>

<t>This model is based on <xref target="!draft-berra…"/> that solves a similar problem
for delegation synchronization between child and parent, which has
already been implemented and shown to work.</t>

<section anchor="msa-communication-via-rest-api"><name>MSA Communication via REST API</name>

<t>REST APIs are well-known and a natural fit for many distributed
systems. The challenge is mostly in the initial setup of secure
communication. The certificates need to be validated, preferably
without a requirement on trusting a third party CA. The API endpoints
for each MSA need to be located. Once secure communication has been
established, using a REST API for MSA communication is
straight-forward.</t>

</section>
<section anchor="locating-remote-multi-signer-agents"><name>Locating Remote Multi-Signer Agents</name>

<t>When an MSA receives a zone via zone transfer from the signer it will
analyze the zone to see whether it contains an HSYNC RRset. If there
is no HSYNC RRset the zone MUST be ignored by the MSA from the
point-of-view of multi-signer synchronization.</t>

<t>If, however, the zone does contain an HSYNC RRset then the MSA must
analyze this RRset to identify the other MSAs for the zone via their
target names in each HSYNC record. If any of the other MSAs listed in
the HSYNC RRset is previously unknown to this MSA then secure
communication with this other MSA must be established.</t>

<t>Secure communication can be achieved via various transports and it is
up to the MSAs in the zone's HSYNC records to determine amongst
themselves. In this document we propose two transports: DNS and
API. We also establish DNS as a baseline that MSAs MUST support to be
compliant.</t>

<t>In the following two subsections we detail how an MSA can locate a
remote MSA and establish secure DNS-based and API-based
communications, respectively.</t>

<section anchor="locating-a-remote-dns-method-multi-signer-agent"><name>Locating a Remote DNS-Method Multi-Signer Agent</name>

<t>Locating a remote MSA using the DNS mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate a URI record for the HSYNC identity.
This provides the domain name and port to which DNS messages should
be sent.</t>
  <t>Lookup and DNSSEC-validate the SVCB record of the URI record target
to get the IP addresses to use for communication with the remote
MSA.</t>
  <t>Lookup and DNSSEC-validate the KEY record of the URI record target
name.  This enables verification of the SIG(0) public key of the
remote MSA once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote MSA:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>The local MSA will look up the URI record for msa.provider.com:</t>

<t>_dns._tcp.msa.provider.com.  IN  URI  10 10 “dns://ns.msa.provider.com:5399/”
_dns._tcp.msa.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for ns.msa.provider.com. SVCB to get the IPv4
and IPv6 addresses as ipv4hints and ipv6hints in the response to the
SVCB query:</t>

<t>ns.msa.provider.com.   IN  SVCB  1 ipv4hint=5.6.7.8 ipv6hint=2001::53
ns.msa.provider.com.   IN RRSIG SVCB …</t>

<t>and also a look up for the KEY record for ns.msa.provider.com, which
may look like this:</t>

<t>ns.msa.provider.com.  IN KEY …
ns.msa.provider.com.  IN RRSIG KEY …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local MSA is able to initiate communication with
the remote MSA and verify the identity of the responding party via the
validated KEY record for the remote MSAs SIG(0) public key.</t>

</section>
<section anchor="locating-a-remote-api-method-multi-signer-agent"><name>Locating a Remote API-Method Multi-Signer Agent</name>

<t>Locating a remote MSA using the API mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate the URI record for for the HTTPS protocol
for the HSYNC identity. This provides the base URL that will be used
to construct the individual API endpoints for the REST API. It also
provides the port to use.</t>
  <t>Lookup and DNSSEC-validate the SVCB record for the URI record
target.  This provides the IP-addresses to use for communication
with the MSA.</t>
  <t>Lookup and DNSSEC-validate the TLSA record for the port and protocol
specified in the URI record. This will enable verification of the
certificate of the remote MSA once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote MSA:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>the local MSA will look up the URI record for msa.provider.com:</t>

<t>_https._tcp.msa.provider.com.  IN  URI  10 10 “https://api.msa.provider.com:443/api/v2/”
_https._tcp.msa.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for api.msa.provider.com IPv4 and IPv6
addresses as hints in an SVCB RR:</t>

<t>api.msa.provider.com.   IN  SVCB 1 ipv4hint=1.2.3.4 ipv6hint=2001::bad:cafe:443
api.msa.provider.com.   IN  RRSIG SVCB …</t>

<t>Now we know the IP-address and the port as well as the base URL to
use. Finally the TLSA record for _443._tcp.api.msa.provider.com is
looked up, with a response that may look like this:</t>

<t>_443._tcp.api.msa.provider.com.  IN  TLSA 3 1 1 ….
  _443._tcp.api.msa.provider.com.  IN  RRSIG TLSA …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local MSA is able to initiate communication with
the remote MSA and verify the identity of the responding party via the
TLSA record for the remote MSAs certificate.</t>

<section anchor="fallback-to-dns-based-communication"><name>Fallback to DNS-based Communication</name>

<t>If the API-based communication fails, either because needed DNS
records are missing, the TLSA record fails to validate the remote MSAs
certificate or the remote MSA simply doesn't respond, the local MSA
MUST fall back to DNS-based communication.</t>

</section>
</section>
</section>
<section anchor="the-initial-hello-phase"><name>The Initial HELLO Phase</name>

<t>When two MSAs need to communicate with each other for the first time
(because they are both deisgnated signers for the same zone), they
need to establish secure communication. This is done in a "HELLO"
phase where the MSAs exchange information about their capabilities.</t>

<section anchor="dns-based-hello-phase"><name>DNS-based HELLO Phase</name>

<t>When using DNS-based communication the HELLO phase is done by sending
a NOTIFY(SOA) for the zone that triggered the need for
communication. The NOTIFY message MUST contain a Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>In the Multi-Signer EDNS(0) Option the OPERATION field MUST have the
value "HELLO" (1). Furthermore, the MSA signals its transport and
synchronization capabilities in the TRANSPORT and SYNCHRONIZATION
fields. This message is signed with the SIG(0) key for the local MSA
for which the public key is published as a KEY record for the MSA.</t>

<t>In the response to the NOTIFY, the remote MSA does the same and the
two MSAs can now verify each other's identity and are also aware of
the other MSAs transport and synchronization capabilities.</t>

</section>
<section anchor="api-based-hello-phase"><name>API-based HELLO Phase</name>

<t>When using API-based communication the HELLO phase is done by sending
a REST API POST request to the remote MSA at the "/hello"
endpoint. The request MUST contain a JSON encoded object with the
following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the local MSA.</t>
  <t>"synchronization": The synchronization capabilities of the local MSA.</t>
</list></t>

<t>The response MUST contain a JSON object with the following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the remote MSA.</t>
  <t>"synchronization": The synchronization capabilities of the remote MSA.</t>
</list></t>

</section>
<section anchor="interpretation-of-the-hello-responses"><name>Interpretation of the HELLO Responses</name>

<t>Once an MSA has received HELLO responses from all other MSAs that are
designated signers for the zone, it knows the capabilities of the MSAs
as a group. It can then use this information to determine which
transport to use:</t>

<t><list style="symbols">
  <t>If all MSAs support API-based communication, the MSAs will use
API-based communication.</t>
  <t>If one or more MSAs only support DNS-based communication, the MSAs
will use DNS-based communication for this zone.</t>
</list></t>

<t>Likewise, each MSA now knows the synchronization capabilities of the
other MSAs and can determine which synchronization model to use:</t>

<t><list style="symbols">
  <t>If all MSAs support the Peer-to-Peer synchronization model, the MSAs
will use the Peer-to-Peer synchronization model for this zone.</t>
  <t>If one or more MSAs only support the Leader/Follower synchronization
model, the MSAs will use the Leader/Follower synchronization model
for this zone.</t>
</list></t>

</section>
</section>
<section anchor="multi-signer-edns0-option-format"><name>Multi-Signer EDNS(0) Option Format</name>

<t>This document uses an Extended Mechanism for DNS (EDNS0) <xref target="RFC6891"/>
option to include Key State information in DNS messages. The option is
structured as follows:</t>

<figure><artwork><![CDATA[
                                               1   1   1   1   1   1 
       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5 
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 0:  |                            OPTION-CODE                        |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 2:  |                           OPTION-LENGTH                       |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 4:  |           OPERATION           |           TRANSPORT           |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 8:  |        SYNCHRONIZATION        |                               /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 
 10: / OPERATION-BODY                                                /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>Field definition details:</t>

<t>OPTION-CODE:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains the value TBD
    for KeyState.</t>

<t>OPTION-LENGTH:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains
    the length of the payload (everything after OPTION-LENGTH) in
    octets and should be 3 plus the length of the EXTRA-TEXT field
    (which may be zero octets long).</t>

<t>OPERATION:
    8 bits. Signals the type of operation the message
    performs. This document defines the two operations HELLO and
    HEARTBEAT. For a complete distributed multi-signer specification a
    number of additional operations will need to be specified, either
    in a revision to this document or in a subsequent document.</t>

<t>TRANSPORT:
    8 bits. Encodes the transport capabilities of the MSA. With
    8 bits it is possible to define up to 8 different transports of
    which this document defines two: DNS and API.</t>

<t>SYNCHRONIZATION:
    8 bits. Encodes the synchronization capabilities of
    the MSA. With 8 bits it is possible to define up to 8 different
    synchronization models of which this document defines two:
    Leader/Follower and Peer-to-Peer.</t>

<t>OPERATION-BODY:
    Variable-length. Used to carry operation-specific parameters.</t>

<section anchor="encoding-transport-capabilities-in-the-multi-signer-edns0-option"><name>Encoding Transport Capabilities in the Multi-Signer EDNS(0) Option</name>

<t>An MSA signals the union of its transport capabilities by setting the
corresponding bits to 1.</t>

<t>0: DNS transport supported (baseline, MUST be supported by all MSAs)</t>

<t>1: API transport supported</t>

<t>2: unused</t>

<t>3: unused</t>

<t>4: unused</t>

<t>5: unused</t>

<t>6: unused</t>

<t>7: unused</t>

</section>
<section anchor="encoding-synchronization-capabilities-in-the-multi-signer-edns0-option"><name>Encoding Synchronization Capabilities in the Multi-Signer EDNS(0) Option</name>

<t>An MSA signals its synchronization capabilities by setting the corresponding
bits to 1.</t>

<t>0: Leader/Follower synchronization supported (baseline, MUST be
   supported by all MSAs)</t>

<t>1: Peer-to-Peer synchronization supported</t>

<t>2: unused</t>

<t>3: unused</t>

<t>4: unused</t>

<t>5: unused</t>

<t>6: unused</t>

<t>7: unused</t>

</section>
</section>
</section>
<section anchor="sequence-diagram-example-of-establishing-secure-comms-the-hello-phase"><name>Sequence Diagram Example of Establishing Secure Comms - "The Hello Phase"</name>

<t>The procedure of locating another MSA and establishing a secure
communication, referred to as "The Hello Phase" is examplified in the
sequence diagram below.</t>

<t>The procedure is as follows:</t>

<t><list style="numbers">
  <t>The multisigner agents receive a zone via zone transfer. By
analyzing the HSYNC RRset each MSA become aware of the identities
of the other MSAs for the zone. I.e. each MSA knows which other
MSAs it needs to communicate with.  Communication with each of
these, previously unknown, remote MSAs is referred to as "NEEDED".</t>
  <t>Each MSA starts aquiring the information needed to establish secure
communications with any previously unknown MSAs. Here we only
illustrate the baseline case where DNS-based communications is to
be used in the following phase. Once all needed information has
been collected the communication with this remote MSA is considered
to be "KNOWN".</t>
  <t>Once an MSA has received the required information (URI, SVCB and
KEY records in the baseline case) it sends a NOTIFY message with a
dedicated Multi-Signer OPT code with OPERATION="HELLO". The sender
uses this OPT field to signal its transport and synchronization
capabilities. Similarly, the responder signals its capabilities
using the same field.</t>
  <t>When an MSA either gets a NOERROR response to its NOTIFY OPT(hello)
message or responds with a NOERROR, it transitions out of "The
Hello Phase" with the exchanging party and they transition to the
next phaste where they start sending NOTIFY OPT(heartbeat) signals
instead. The communication with the remote MSA is now considered to
be in the "OPERATIONAL" state.</t>
</list></t>

<t>In the case where one MSA is aware of the need to communicate with
another MSA, but the other is not (eg. the zone transfer was dealyed
for one of them), the slower one SHOULD respond with a RCODE=REFUSED
to any NOTIFY OPT(hello) it receives. Once it is ready, it will send
its own NOTIFY OPT(hello) which should be responded to with a
RCODE=NOERROR.</t>

<figure><artwork><![CDATA[
+----------+                 +----------+                        +----------+
|  Owner   |                 |  MSA A   |                        |  MSA B   |
+----------+                 +----------+                        +----------+
     |                            |                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |--------------------------->|                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |---------------------------------------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  QUERY _dns._tcp.msa-b.se. URI?    |
     |                            |----------------------------------->|
     |                            |  QUERY ns.msa-b.se. SVCB?          |
     |                            |----------------------------------->|
     |                            |  QUERY ns.msa-b.se. KEY?           |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(hello)     |
     |                            |----------------------------------->|
     |                            |  NOERROR sign-me.se. OPT(hello)    |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |                                    |

]]></artwork></figure>

</section>
<section anchor="synchronization-of-changes-between-msas"><name>Synchronization of Changes Between MSAs</name>

<t>There are two defined models for synchronization. The first
(Leader/Follower) has the advantage of more clearly mapping to the
original multi-signer model 2, with a single controller. The second
model has the advantage of less total communication between MSAs
(including no elections) but the potential disadvantage of more fine
grained communication during the execution of a multi-signer process.</t>

<t>At this stage it is not clear that one model is superior to the other.</t>

<section anchor="leaderfollower-mode"><name>Leader/Follower Mode</name>

<t>In a leader/follower deployment, a designated multi-signer agent
assumes the role of a leader, directing other agents, or followers,
through the multi-signer process state transitions. In this mode it is
necessary to conduct “elections” where one of the MSAs is chosen as
the Leader before initiating a new multi-signer process. Once the
Leader has been chosen, this model is mostly equivalent to the
original multi-signer “model 2”, with a single controller. The other
MSAs (the followers) essentially become proxies between the controller
(the Leader) and the signers.</t>

</section>
<section anchor="peer-mode"><name>Peer Mode</name>

<t>In peer mode, the MSAs still need to locate each other, but instead of
relying on trust in each other, each multi-signer agent operates
independently as a peer. I.e. each MSA executes each step in the
multi-signer process on its own. The communication is essentially
reduced to a notification mechanism (“I am now in state N”), although
authenticated to avoid having the contents of this communication
become an attack vector for an adversary.</t>

</section>
</section>
<section anchor="responsibilities-of-an-msa"><name>Responsibilities of an MSA</name>

<t>For a group of MSAs to be able to communicate securely and synchronize
data for a zone, each MSA must:</t>

<t><list style="symbols">
  <t>Publish the DNS records needed for secure communication with other
MSAs:
  <list style="symbols">
      <t>URI, SVCB and KEY records required for DNS-based communication
secured by SIG(0).</t>
      <t>URI, SVCB and TLSA records required for API-based communication
secured by TLS (if supported).</t>
      <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the identity of the MSA.</t>
    </list></t>
  <t>For each zone that is managed, publish the data needed for
synchronization with other MSAs:
  <list style="symbols">
      <t>The DNSKEY RRset for the zone consisting of the DNSKEYS that the
local signer uses to sign the zone.</t>
      <t>The CDS RRset for the zone, representing the KSK that the local
signer uses to sign the zone (when needed).</t>
      <t>The NS RRset for the zone, consisting of the NS records of the
authoritative nameserver that the local signer distributes the
signed zone to.</t>
      <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the concatenation of the zone name and the
identity of the MSA. Example for the zone "zone.example" and the
MSA "msa.provider":</t>
    </list></t>
</list></t>

<t>zone.example.msa.provider. IN DNSKEY ...
zone.example.msa.provider. IN NS ...</t>

</section>
<section anchor="migration-from-single-signer-to-multi-signer"><name>Migration from Single-Signer to Multi-Signer</name>

<t>The migration from a single-signer to a multi-signer architecture is
done by adding the HSYNC RRset to the zone. However, this may be done
in several steps.</t>

<section anchor="adding-a-single-hsync-record-to-an-already-signed-zone"><name>Adding a single HSYNC record to an already signed zone</name>

<t>Adding a single HSYNC record to a zone that is already signed by the
DNS provider "provider.com" with NSMGMT=OWNER is a no-op that does not
change anything:</t>

<t>zone.example. IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>The zone was already signed by the DNS provider "provider.com" and the
provider added any needed DNSSEC records, including DNSKEYs. The zone
NS RRset was managed by the zone owner. All of this is unchanged by
the addition of the HSYNC RRset.</t>

</section>
<section anchor="changing-the-hsync-nsmgmt-field-from-agent-to-owner"><name>Changing the HSYNC NSMGMT Field from AGENT To OWNER</name>

<t>In a multi-signer architecture each MSA publishes the data it
contributes to the zone under the domain name
{zone}.{identity}. I.e. the zone DNSKEYs that the MSA
msa.provider. uses are published as</t>

<t>zone.example.msa.provider. DNSKEY ...
zone.example.msa.provider. DNSKEY ...</t>

<t>Likewise, the NS records for the zone are published as</t>

<t>zone.example.ns.msa.provider. NS ...
zone.example.ns.msa.provider. NS ...</t>

<t>To migrate from "owner maintained" NS RRset to "MSA maintained", the
zone owner must verify that the NS RRset as published by the MSA is
correct and in sync with the NS RRset as published by the zone owner
itself.  After this verification the zone owner changes the HSYNC
NSMGMT field in the existing HSYNC record from NSMGMT=OWNER to
NSMGMT=AGENT.</t>

</section>
<section anchor="migrating-from-a-multi-signer-architecture-back-to-single-signer"><name>Migrating from a Multi-Signer Architecture Back to Single-Signer.</name>

<t>If for some reason a zone owner wants to migrate back to a
single-signer architecture, the process is essentially the reverse of
the migration from single-signer to multi-signer:</t>

<t><list style="numbers">
  <t>The zone owner offboards all MSAs but one (the one that will be the
single-signer)</t>
  <t>The zone owner must verify that the NS RRset it publishes (in the
unsigned zone) is correct and in sync with the NS RRset as
published by the remaining MSA.</t>
  <t>The zone owner changes the HSYNC NSMGMT field in the HSYNC record
from NSMGMT=MSA to NSMGMT=OWNER.</t>
</list></t>

<t>The zone is now essentially back to a single-signer architecture.
The remaining HSYNC record may be removed from the zone.</t>

<t>TO BE REMOVED BEFORE PUBLICATION:
# Rationale</t>

</section>
<section anchor="choice-of-the-hsync-mnemonic"><name>Choice of the HSYNC Mnemonic</name>

<t>Initially the mnemonic MSIGNER was used for the HSYNC RRset. However,
as work progressed it became clear that we want also non-signing DNS
Providers to be able to participate. So the RRset is a signalling
mehanism from zone owner to DNS Providers, some of which may or may
not be instructed to sign the zone. Therefore we suggest the mnemonic
HSYNC to indicate that this is a mechanism for "horizontal
synchronization" inside a zone.</t>

<t>But the mnemonic chosen is a very minor point and should a better
suggestion come up it would be great.</t>

</section>
<section anchor="separation-of-msa-and-combiner"><name>Separation of MSA and COMBINER</name>

<t>It is possible to integrate all three multi-signer components (SIGNER,
MSA and COMBINER) into a single piece of software (or two pieces,
depending on the preferred way of slicing the functionality). However,
such a composite module would be a fairly complex piece of software.
This document aims to describe the functional separation of the
different components rather than make a judgement on software design
alternatives.  Hence possible implementation choices are left to the
implementer.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>Multi-signer is a complex system with a number of components and a
significant amount of automation. The authors believe that the only
way to make a multi-signer architecture useful in practice is via
automation. However, automation is a double-edged sword. It can both
make the system more robust and more vulnerable.</t>

<t>While all communication between MSAs is authenticated (either via
SIG(0) signatures ore TLS), the signalling from the zone owner to the
MSAs is via the HSYNC RRset in an unsigned zone. This is a potential
attack vector. However, securing zone transfers from zone owner to DNS
providers is a well-known issue with lots of existing solutions (TSIG,
zone transfer via a secure channel, zone transfer-over-TLS,
etc). Employing some of these solutions is strongly recommended.</t>

<t>From a vulnerability point-of-view this architecture introduces
several new components into the zone signing and publication
process. In particular the COMBINER and the MSAs are new components
that need to be secure. The COMBINER has the advantage of not having
to announce its location to the outside world, as it only needs to
communicate with internal components (the zone owner, the signer and
the MSA).</t>

<t>The MSAs are more vulnerable. They need to be discoverable by other
MSAs and hence they are also discoverable by an adversary. On the
other hand, the MSAs are not needed for a new zone to signed and
published, they are only needed when there are changes that require
the MSAs to synchronize, which is an infrequent event. Furthermore,
should an MSA be unable to fulfill its role during the execution of a
multi-signer process, the multi-signer process will simply stop where
it is. Regardless of where the stop (or rather pause) occurs, the zone
will be fully functional and once the MSA is able to resume its role,
the multi-signer process will continue from where it left off.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations.</name>

<section anchor="new-multi-signer-edns-option"><name>New Multi-Signer EDNS Option</name>

<t>This document defines a new EDNS(0) option, entitled "Multi-Signer",
assigned a value of TBD "DNS EDNS0 Option Codes (OPT)" registry</t>

<t>TO BE REMOVED UPON PUBLICATION: 
<eref target="foo">https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11</eref></t>

<figure><artwork><![CDATA[
   +-------+--------------------+----------+----------------------+
   | Value | Name               | Status   | Reference            |
   +-------+--------------------+----------+----------------------+
   | TBD   | Multi-Signer       | Standard | ( This document )    |
   +-------+--------------------+----------+----------------------+
]]></artwork></figure>

</section>
<section anchor="a-new-registry-for-edns-option-multi-signer-operation-codes"><name>A New Registry for EDNS Option Multi-Signer Operation Codes</name>

<t>The Multi-Signer option also defines an 8-bit operation field, for
which IANA is requested to create and mainain a new registry entitled
"Multi-Signer Operations", used by the Multi-Signer option. Initial
values for the "Multi-Signer Operations" registry are given below;
future assignments in in the 3-127 range are to be made through
Specification Required review <xref target="BCP26"/>.</t>

<figure><artwork><![CDATA[
+-----------+---------------------------------------------+-------------------+
| OPERATION | Mnemonic                                    | Reference         |
+-----------+---------------------------------------------+-------------------+
| 0         | forbidden                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 1         | HELLO                                       | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 2         | HEARTBEAT                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 3-127     | Unassigned                                  | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 128-255   | Private Use                                 | ( This document ) |
+-----------+---------------------------------------------+-------------------+
]]></artwork></figure>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8901' target='https://www.rfc-editor.org/info/rfc8901'>
  <front>
    <title>Multi-Signer DNSSEC Models</title>
    <author fullname='S. Huque' initials='S.' surname='Huque'/>
    <author fullname='P. Aras' initials='P.' surname='Aras'/>
    <author fullname='J. Dickinson' initials='J.' surname='Dickinson'/>
    <author fullname='J. Vcelak' initials='J.' surname='Vcelak'/>
    <author fullname='D. Blacka' initials='D.' surname='Blacka'/>
    <date month='September' year='2020'/>
    <abstract>
      <t>Many enterprises today employ the service of multiple DNS providers to distribute their authoritative DNS service. Deploying DNSSEC in such an environment may present some challenges, depending on the configuration and feature set in use. In particular, when each DNS provider independently signs zone data with their own keys, additional key-management mechanisms are necessary. This document presents deployment models that accommodate this scenario and describes these key-management requirements. These models do not require any changes to the behavior of validating resolvers, nor do they impose the new key-management requirements on authoritative servers not involved in multi-signer configurations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8901'/>
  <seriesInfo name='DOI' value='10.17487/RFC8901'/>
</reference>

<reference anchor='RFC1996' target='https://www.rfc-editor.org/info/rfc1996'>
  <front>
    <title>A Mechanism for Prompt Notification of Zone Changes (DNS NOTIFY)</title>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='August' year='1996'/>
    <abstract>
      <t>This memo describes the NOTIFY opcode for DNS, by which a master server advises a set of slave servers that the master's data has been changed and that a query should be initiated to discover the new data. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1996'/>
  <seriesInfo name='DOI' value='10.17487/RFC1996'/>
</reference>

<reference anchor='RFC2136' target='https://www.rfc-editor.org/info/rfc2136'>
  <front>
    <title>Dynamic Updates in the Domain Name System (DNS UPDATE)</title>
    <author fullname='P. Vixie' initials='P.' role='editor' surname='Vixie'/>
    <author fullname='S. Thomson' initials='S.' surname='Thomson'/>
    <author fullname='Y. Rekhter' initials='Y.' surname='Rekhter'/>
    <author fullname='J. Bound' initials='J.' surname='Bound'/>
    <date month='April' year='1997'/>
    <abstract>
      <t>Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone. Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2136'/>
  <seriesInfo name='DOI' value='10.17487/RFC2136'/>
</reference>

<reference anchor='RFC3007' target='https://www.rfc-editor.org/info/rfc3007'>
  <front>
    <title>Secure Domain Name System (DNS) Dynamic Update</title>
    <author fullname='B. Wellington' initials='B.' surname='Wellington'/>
    <date month='November' year='2000'/>
    <abstract>
      <t>This document proposes a method for performing secure Domain Name System (DNS) dynamic updates. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='3007'/>
  <seriesInfo name='DOI' value='10.17487/RFC3007'/>
</reference>

<reference anchor='RFC2931' target='https://www.rfc-editor.org/info/rfc2931'>
  <front>
    <title>DNS Request and Transaction Signatures ( SIG(0)s )</title>
    <author fullname='D. Eastlake 3rd' initials='D.' surname='Eastlake 3rd'/>
    <date month='September' year='2000'/>
    <abstract>
      <t>This document describes the minor but non-interoperable changes in Request and Transaction signature resource records ( SIG(0)s ) that implementation experience has deemed necessary. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2931'/>
  <seriesInfo name='DOI' value='10.17487/RFC2931'/>
</reference>

<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC6891' target='https://www.rfc-editor.org/info/rfc6891'>
  <front>
    <title>Extension Mechanisms for DNS (EDNS(0))</title>
    <author fullname='J. Damas' initials='J.' surname='Damas'/>
    <author fullname='M. Graff' initials='M.' surname='Graff'/>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='April' year='2013'/>
    <abstract>
      <t>The Domain Name System's wire protocol includes a number of fixed fields whose range has been or soon will be exhausted and does not allow requestors to advertise their capabilities to responders. This document describes backward-compatible mechanisms for allowing the protocol to grow.</t>
      <t>This document updates the Extension Mechanisms for DNS (EDNS(0)) specification (and obsoletes RFC 2671) based on feedback from deployment experience in several implementations. It also obsoletes RFC 2673 ("Binary Labels in the Domain Name System") and adds considerations on the use of extended labels in the DNS.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='75'/>
  <seriesInfo name='RFC' value='6891'/>
  <seriesInfo name='DOI' value='10.17487/RFC6891'/>
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.draft-ietf-dnsop-dnssec-automation' target='https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-dnssec-automation-03'>
   <front>
      <title>DNSSEC automation</title>
      <author fullname='Ulrich Wisser' initials='U.' surname='Wisser'>
         </author>
      <author fullname='Shumon Huque' initials='S.' surname='Huque'>
         <organization>Salesforce</organization>
      </author>
      <author fullname='Johan Stenstam' initials='J.' surname='Stenstam'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <date day='19' month='October' year='2024'/>
      <abstract>
	 <t>   This document describes an algorithm and protocol to automate the
   setup, operations, and decomissioning of Multi-Signer DNSSEC
   [RFC8901] configurations.  It employs Model 2 of the multi-signer
   specification, where each operator has their own distinct KSK and ZSK
   sets (or CSK sets), Managing DS Records from the Parent via CDS/
   CDNSKEY [RFC8078], and Child-to-Parent Synchronization in DNS
   [RFC7477] to accomplish this.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-dnsop-dnssec-automation-03'/>
   
</reference>

<referencegroup anchor='BCP26' target='https://www.rfc-editor.org/info/bcp26'>
  <reference anchor='RFC8126' target='https://www.rfc-editor.org/info/rfc8126'>
    <front>
      <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
      <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
      <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
      <author fullname='T. Narten' initials='T.' surname='Narten'/>
      <date month='June' year='2017'/>
      <abstract>
        <t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters. To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper. For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
        <t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed. This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
        <t>This is the third edition of this document; it obsoletes RFC 5226.</t>
      </abstract>
    </front>
    <seriesInfo name='BCP' value='26'/>
    <seriesInfo name='RFC' value='8126'/>
    <seriesInfo name='DOI' value='10.17487/RFC8126'/>
  </reference>
</referencegroup>




    </references>


<section anchor="change-history-to-be-removed-before-publication"><name>Change History (to be removed before publication)</name>

<t><list style="symbols">
  <t>draft-leon-distributed-multi-signer-00</t>
</list></t>

<ul empty="true"><li>
  <t>Initial public draft.</t>
</li></ul>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

