<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-leon-distributed-multi-signer-00" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Distributed Multi-Signer Bootstrap">Distributed DNSSEC Multi-Signer Bootstrap</title>

    <author initials="L." surname="Fernandez" fullname="Leon Fernandez">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>leon.fernandez@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="E." surname="Bergström" fullname="Erik Bergström">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>erik.bergstrom@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="J." surname="Stenstam" fullname="Johan Stenstam">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>johan.stenstam@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="S." surname="Crocker" fullname="Steve Crocker">
      <organization>Edgemoor Research Institute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>steve@shinkuro.com</email>
      </address>
    </author>

    <date />

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<section anchor="abstract"><name>Abstract</name>

<t>This document presents an architecture for a distributed DNSSEC
multi-signer model that most closely resembles "model 2" in
<xref target="RFC8901"/>.</t>

<t>It defines two multi-signer specific entities: the "multi-signer
agent" (MSA) that is responsible for the multi-signer process and the
"combiner", which is responsible for "combining" unsigned zone data
from the zone owner with zone data under control of the MSA. It
introduces a new DNS RRtype, HSYNC, that is used by the zone owner to
designate the chosen DNS Providers (signing and/or serving the
zone). Furthermore it describes a mechanism for the MSAs to establish
secure communication with each other, either via “pure DNS”
communication secured by DNS SIG(0) signatures on each message or via
a RESTful API secured by TLS. Finally, the document describes two
models for multi-signer process synchronization: “leader/follower
mode” and “peer mode” and the mechanism by which a set of MSAs decide
which model to use for a given zone.</t>

<t>The scope of the document is only the distributed aspect of DNSSEC
multi-signer up to the point where secure communication and
synchronization method between MSAs has been established. The
“multi-signer algorithms” that deal with the actual synchronization
required for multi-signer operation are described in
<xref target="I-D.draft-ietf-dnsop-dnssec-automation"/>.</t>

<t>TO BE REMOVED: This document is being collaborated on in Github at:
<eref target="https://github.com/johanix/draft-leon-dnsop-distributed-multi-signer">https://github.com/johanix/draft-leon-dnsop-distributed-multi-signer</eref>.
The most recent working version of the document, open issues, etc, should all be
available there.  The authors (gratefully) accept pull requests.</t>

</section>


    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>The issue of how to eliminate so-called "single points of failure"
from systems to make them more robust is a recurring theme in systems
design and so also for DNS. In the DNS case redundancy is addressed by
having multiple name servers for the same zone. However, when the zone
is DNSSEC-signed there is traditionally an additional single point of
failure: the so-called "signer" of the zone.</t>

<t>In multi-signer (<xref target="RFC8901"/>) model 2, a process is described by
which it is possible to use more than one signer (each with its own
set of keys), by having the signers (or their agents) communicate and
exchange data that should be signed by the other signer. The most
obvious example is that each signer's Key-Signing Key must sign a
DNSKEY RRset that contains the Zone-Signing Keys for all signers.</t>

<t>To synchronize data between signers two models are possible: either a
"centralized" model where a single "controller" decides what changes
are needed, or a "distributed" model where the signers themselves (or
an agent of each signer) decide what changes are needed.</t>

<t>The first model has been implemented previously, and while it works
from a technical point of view, it is not a good solution from a risk
management point of view. The primary problem is that the signers have
difficulty accepting that an external third party (the controller) has
the ability to modify data (in a customer zone).</t>

<t>This document is an attempt to address the synchronization problem by
proposing a distributed model without a central controller.</t>

<t>The communication between signers has two parts: first it is necessary
to find out what data each signer has for a zone. Once all data has
been collected it is possible to compute what changes are needed to
the zone data at each signer. That triggers the second phase where the
zone data for the individual signers is changed to get them in sync
with each other. All of this is done automatically.</t>

<t>However, from a slightly different perspective, the multi-signer
alternative is the more general case of DNSSEC signing, with the (very
common) case of a single signer being a special case.</t>

<t>From that point of view, this document proposes an architecture for a
completely automated, distributed multi-signer model together with a
seamless transition path from the current single-signer model to the
multi-signer model. From the zone owners point of view, the transition
is done through the addition of a new RRtype, HSYNC, that is used to
designate the chosen DNS Providers, their responsibilities and
information to enable the DNS Providers to locate each other.</t>

<t>Knowledge of DNS NOTIFY <xref target="RFC1996"/> and DNS Dynamic Updates
<xref target="RFC2136"/> and <xref target="RFC3007"/> is assumed. DNS SIG(0) transaction
signatures are documented in <xref target="RFC2931"/>.</t>

<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "<strong>MUST</strong>", "<strong>MUST NOT</strong>", "<strong>REQUIRED</strong>", "<strong>SHALL</strong>",
"<strong>SHALL NOT</strong>", "<strong>SHOULD</strong>", "<strong>SHOULD NOT</strong>", "<strong>RECOMMENDED</strong>",
"<strong>NOT RECOMMENDED</strong>", "<strong>MAY</strong>", and "<strong>OPTIONAL</strong>" in this document
are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<t>...</t>

</section>
<section anchor="requirements"><name>Requirements</name>

<t>The requirements for an architecture for distributed multi-signer are
defined as follows:</t>

<t><list style="symbols">
  <t>Assuming all zone transfers are correctly set up, a zone owner MUST
be able to signal to the individual multi-signer providers
information sufficient for the providers to identify each other and
establish secure communication.</t>
  <t>The zone owner MUST be able to signal the intent to onboard an
additional multi-signer provider. This MUST automatically initiate
the multi-signer “add signer” process, as described in <xref target="RFC8901"/>.</t>
  <t>The zone owner MUST be able to signal the intent to offboard an
existing multi-signer provider. This MUST automatically initiate
the multi-signer “remove signer” process, as described in <xref target="RFC8901"/>.</t>
  <t>All signalling from zone owner to multi-signer providers SHOULD be
carried out via data in the served zone, to ensure that all
providers get the same configuration information at (almost) the
same time.</t>
  <t>By engaging a set of multi-signer providers (one or more), the zone
owner MUST give up control over the following records:
  <list style="symbols">
      <t>All DNSSEC related records in the zone</t>
      <t>Any CDS and/or CSYNC RRsets</t>
    </list></t>
  <t>It SHOULD be possible but mandatory for the zone owner to also
delegate the management of the NS RRset to the set of DNS
Providers.</t>
</list></t>

</section>
<section anchor="multi-signer-use-cases"><name>Multi-Signer Use Cases</name>

<section anchor="primary-use-case"><name>Primary Use Case</name>

<t>The primary use case for the proposed multi-signer architecture is the
following scenario: A zone owner needs to remove the single point of
failure that the DNSSEC signer constitutes. For this reason it
contracts with two or more “multi-signer capable” service
providers. Each such service provider provides the following service:</t>

<t><list style="symbols">
  <t>Receive an unsigned zone via zone transfer.</t>
  <t>Locate all active signers via the SIGNER RRset as published by the
zone owner. Establish secure communication with all remote signers
(or their agents).</t>
  <t>Update the DNSKEY, CDS and CSYNC RRsets as needed, based on
synchronization with the remote signers (or their agents).</t>
  <t>Update the NS RRset if allowed by the zone owner, based on
synchronization with the remote signers (or their agents).</t>
  <t>Sign the zone, using own DNSKEYs, but with a published DNSKEY RRset
that includes the DNSKEYs of other signers.</t>
  <t>Distribute the signed zone to a set of downstream authoritative
nameservers.</t>
</list></t>

</section>
<section anchor="secondary-use-case"><name>Secondary Use Case</name>

<t>A slightly different use case is where a zone owner has a desire to
replace one DNSSEC provider with another. In the first step it
onboards the new provider by adding an SIGNER RR with SIGNER
State=“ON” identifying the new provider to the existing SIGNER
RRset. This informs both the present providers and the incoming
provider about the addition of a new provider and the onboarding
process is automatically initiated.</t>

<t>Once the onboarding operation is completed the zone owner may trigger
the pending removal of another provider by changing the SIGNER State
flag for the outgoing signer to “OFF”. This informs all the present
providers about the pending removal and the offboarding process is
automatically initiated.</t>

</section>
<section anchor="tertiary-use-case"><name>Tertiary Use Case</name>

<t>A third use case is where a zone owner wants to migrate from a
single-signer model to a multi-signer model, but as a first step only
wants to transition the existing signer to be designated via a single
SIGNER record. Once that is done the zone owner can continue the
transition to a full multi-signer model at a later time by adding more
SIGNER records.</t>

</section>
</section>
<section anchor="the-distributed-multi-signer-model"><name>The Distributed Multi-Signer Model</name>

<t>The primary difference between monolithic and distributed multi-signer
is that the former has a central “controller” while the latter
doesn’t. But there is still an absolute need for synchronization
between the different participants in the distributed multi-signer
setup.</t>

<t>There are three immediate aspects for the design of a distributed
multi-signer architecture:</t>

<t><list style="symbols">
  <t>The first is “synchronization”: who decides what changes are
needed.</t>
  <t>The second is “transport”: how to communicate between the
individual instances in a multi-signer system.</t>
  <t>The third is source of truth for different types of zone data. The
zone owner is the source of truth for all unsigned zone data,
except DNSSEC data and the NS RRset. The signer is the source of
truth for all DNSSEC data in the zone. In a distributed
multi-signer architecture the source of truth is</t>
</list></t>

<section anchor="multi-signer-agent-integrated-signer-vs-separate-agent"><name>Multi-Signer Agent: Integrated Signer vs Separate Agent</name>

<t>In a distributed setup there must be a service located with each
multi-signer “signer” that manages communication with other
signers. This is referred to as the multi-signer agent, or MSA.</t>

<t>It is possible to implement support for the synchronization and
communication needs directly into each “signer” (i.e. typically an
authoritative nameserver with the ability to do online DNSSEC
signing). In this case the signer implements the MSA functionality.</t>

<t>However, it is also possible to separate the multi-signer
functionality into a separate agent. This agent sits next to the
signer, and is under the same administrative control, but is a
separate piece of software. When using this design each signer has an
agent attached next to it. Each agent is configured as a “secondary
nameserver” to a signer and receives the (signed) zone from this
signer.</t>

<t>The “separate agent” design has the major advantage of leaving the
signer almost entirely out of the multi-signer complexity. The
requirements are only that the “signer” treats the “agent” as a normal
secondary (sends NOTIFY messages and responds to zone transfer
requests) and that the “agent” has a configuration that allows it to
make changes to zones that the “signer” serves (most commonly via
TSIG-signed DNS UPDATEs, but other models are possible).</t>

<t>In this document the design using a separate MSA is used, while
pointing out that it is possible to integrate this into a future
“signer” that implements both DNSSEC signing and the MSA
functionality.</t>

</section>
<section anchor="source-of-truth"><name>Source of Truth</name>

<t>A common design for DNSSEC signing (regardless of multi-signer) is to
use a separate, bump-on-the-wire signer. This is a signer that
receives the unsigned zone via an incoming zone transfer, signs the
zone, and publishes the signed zone via an outbound zone transfer. In
such a design the source of truth has been split up between the “zone
owner” (source of truth for all non-DNSSEC zone data), and the signer
(source of truth for all DNSSEC data in the zone).</t>

<t>In a distributed multi-signer architecture the source of truth is
further split up into three participants:</t>

<t><list style="symbols">
  <t>The zone owner is the source of truth for all unsigned zone data,
except DNSSEC data and the NS RRset.</t>
  <t>The signer is the source of truth for all data generated via DNSSEC
signing: own DNSKEYs, NSEC/NSEC3 RRs, RRSIGs, etc.</t>
  <t>The MSA is the source of truth for the RRsets that must be kept in
sync across all the signers for the zone. This includes the DNSKEYs
from other signers, CDS and CSYNC RRsets. Possibly also the NS RRset.</t>
</list></t>

<t>The NS RRset is an interesting special case. Traditionally the NS
RRset is maintained by the zone owner, but based on data from the DNS
providers (as authoritative nameservers is a primary service for the
DNS provider). However, in a distributed multi-signer architecture the
NS RRset should preferably be maintained by the MSA. For this reason
the proposed design makes control of the NS RRset explicit and the
responsibility of the zone owner to choose whether to retain control
or delegate to the MSAs. Hence:</t>

<t><list style="symbols">
  <t>The MSA is the source of truth for the NS RRset, subject to the
policy of the zone owner, as described in the SIGNER RRset
(described in #the-signer-rrset).</t>
</list></t>

<t>Making the control of the NS RRset explicit is useful regardless of
whether a zone uses multiple signers or single signer.</t>

<t>To be able to keep the signer as simple as possible the changes to the
NS, DNSKEY, CDS and CSYNC RRsets must be introduced into the unsigned
zone before the zone reaches the signer. Likewise, to keep the zone
owner as simple as possible (i.e. not involved in the details of the
multi-signer automation) these changes must be introduced into the
unsigned zone after the zone leaves the zone owner.</t>

<section anchor="the-combiner"><name>The COMBINER</name>

<t>The consequence is that the NS, DNSKEY, CDS and CSYNC RRsets are
maintained via a separate piece of software inserted between the zone
owner and the signer. This is referred to as the multi-signer
COMBINER.</t>

<t>The COMBINER has the following features:</t>

<t><list style="symbols">
  <t>It supports inbound zone transfer of the unsigned zone from the
zone owner.</t>
  <t>It receives updates for the NS, DNSKEY, CDS and CSYNC
RRsets from the MSA. Typically the mechanism used is DNS UPDATE
with a TSIG signature, as this is easy to configure in a local
context. However, other mechanisms, including APIs, are possible.</t>
  <t>It stores all data received from the MSA separate from
the zone data received from the zone owner.</t>
  <t>Whenever it receives a new unsigned zone from the zone owner it
COMBINES zone data from the zone owner (the majority of the zone)
with specific zone data under control of the MSA: three specific
RRsets, all in the apex of the zone: the DNSKEY,CDS and CSYNC
RRsets.</t>
  <t>It is policy free. I.e. the COMBINER is not making any judgement
about what data to include in the zone from the four defined
RRsets.  That judgement is the role of the MSA.</t>
  <t>It does not sign the zone.</t>
  <t>It provides outbound zone transfer of the combined zone to the
signer.</t>
</list></t>

<t>Example setup with two signers showing the logical flow of zone data
between the zone owner, the COMBINER, the signer and the MSA:</t>

<figure><artwork><![CDATA[
                            +--------------+
                            |     owner    |
               xfr          +-+---------+--+    xfr
            /----------------/           \--------------------\
           /                                                   \
    +-----+----+    DNS  +-----+  DNS/API  +-----+  DNS    +----+-----+
    | combiner +<--------+ msa +-----------+ msa +-------->+ combiner |
    +-----+----+  UPDATE +--+--+           +--+--+ UPDATE  +----+-----+
          |                 ^                 ^                 |
          v xfr             |                 |                 v xfr
    +-----+----+     xfr    |                 |   xfr      +----+-----+
    |  signer  +------------+                 +------------+  signer  |
    +-----+----+                                           +----+-----+
          |                                                     |
          v                                                     v
       +--+--+                                               +--+--+
       | NS  |--+                                            | NS  |+
       +-----+  |--+                                         +-----+|-+
          +-----+  |                                            +---+ |
             +-----+                                              +---+
]]></artwork></figure>

</section>
</section>
<section anchor="the-dns-provider"><name>The DNS Provider</name>

<t>A "DNS Provider" is a term that is most commonly used to refer to an
entity that provides authoritative DNS service to one or more zone
owners. In the context of this document it is used to refer to an
entity that provides some subset of the following services:</t>

<t><list style="symbols">
  <t>Signing a zone received from the zone owner.</t>
  <t>Serving the zone via a set of authoritative nameservers.</t>
  <t>Distributing the signed zone to other downstream DNS Providers.</t>
</list></t>

<t>In addition to the above services a DNS Provider MUST also provide:</t>

<t><list style="symbols">
  <t>An MSA for synchronization with other DNS Providers</t>
  <t>A COMBINER for the management of changes to the zone via<br />
the synchronization among MSAs (if it provides a signer)</t>
</list></t>

<t>I.e. in the setup above there are two DNS Providers, both of which are
"complete" in the sense that they provide all three of the above
services.</t>

</section>
</section>
<section anchor="identifying-the-designated-signers"><name>Identifying the Designated Signers</name>

<t>It is the responsibility of the zone owner to choose a set of
“signers”, either internal or external to the zone owners
organization. These signers must be clearly and uniquely designated
via publication in the HSYNC RRset, located at the apex of the zone
and consisting of one HSYNC record for each signer.</t>

<t>The HSYNC RRset must be added, by the zone owner, to the, typically
unsigned, zone that the zone owner maintains so that this RRset is
visible to the downstream DNS Providers and their multi-signer agents.</t>

</section>
<section anchor="the-hsync-rrset"><name>The HSYNC RRset</name>

<t>The HSYNC RR has the zone name that publishes the HSYNC RRset as
the owner name (i.e. the HSYNC RRset must be located at the apex of
the zone). The RDATA consists of three fields "State","NSMgmt" and
"Identity":</t>

<t>zone.example.    IN HSYNC  State  NSMgmt  Sign  Identity.</t>

<t>State:
    Unsigned 8-bit. Defined values are 1=ON and 2=OFF. The value 0
    is an error.  Values 3-127 are presently undefined. Values 128-255
    are reserved for private use. The presentation format allows
    either as integers (1 or 2) or as tokens (“ON” or “OFF”).</t>

<t>NSMgmt:
    Unsigned 8-bit. Defined values are 1=Zone owner and 2=MSA. The
    value 0 is an error. Values 3-255 are presently undefined (and not
    expected to be defined). The presentation format allows either as
    integers (1 or 2) or as tokens (“OWNER” or “AGENT”).</t>

<t>Sign:
    Unsigned 8-bit. Defined values are 1=YES and 2=NO. The value 0 is an
    error. If Sign=YES for a particular HSYNC record, then the signer
    associated with that Identity is a designated signer for the zone.</t>

<t>Identity:
    Domain name. Used to uniquely identify the Multi-Signer
    Agent for the DNS Provider that the MSA represents.</t>

<t>Example:</t>

<t>zone.example.   IN HSYNC  ON  AGENT  YES  msa.provider.example.</t>

<section anchor="semantics-of-the-hsync-state-field"><name>Semantics of the HSYNC State Field</name>

<t>The HSYNC State field is used to signal to all MSAs what the status of
each MSA is from the point-of-view of the zone owner. The two possible
values are "ON" and "OFF" where "ON" means that the MSA is a currently
designated signer for the zone and "OFF" means that the MSA is
previously designated signer for the zone that is in the process of
being offboarded.</t>

<t>The reason for the "OFF" state is that the offboarding process
involves the remaining signers (hence the signalling) and it is
important to know which signer is being offboarded so that the correct
data may be removed in the correct order during the multi-signer
"remove signer" process (see <xref target="RFC8901"/>).</t>

<t>Once the offboarding process is complete the HSYNC RR for the
offboarded MSA may be removed from the zone at the zone owners
discretion.</t>

</section>
<section anchor="semantics-of-the-hsync-nsmgmt-field"><name>Semantics of the HSYNC NSMgmt Field</name>

<t>The NSMgmt field is used to signal to the MSAs who is responsible for
the contents of the NS RRset for the zone. The two possible values are
"OWNER" and "AGENT".</t>

<t>The value "OWNER" signals that the zone owner is responsible for the NS
RRset and is responsible for updating the NS RRset (either with or
without the unified data from all MSAs). In this case the MSAs MUST NOT
instruct the COMBINER to update the NS RRset.</t>

<t>The value "AGENT" means that the MSAs representing DNS Providers that
sign the zone are responsible for the contents of the NS RRset. In
this case the these MSAs MUST instruct the COMBINER to update the NS
RRset with the unified NS RRset data from all MSAs.</t>

</section>
<section anchor="semantics-of-the-hsync-sign-field"><name>Semantics of the HSYNC Sign Field</name>

<t>The Sign field is used to signal to all MSAs whether the zone owner
requests that the DNS Provider that the MSA represents should sign the
zone or not. The two possible values are "YES" and "NO" where "YES"
means that the MSA represents a currently designated signer for the
zone and "NO" means that the MSA does not.</t>

<t>When Sign=NO the MSA MUST still participate in the communication
between MSAs for the zone, but MUST NOT instruct the COMBINER to
update the NS RRset.</t>

</section>
</section>
<section anchor="communication-between-msas"><name>Communication Between MSAs</name>

<t>For the communication between MSAs there are two choices that need to
be made among the designated MSAs for a zone. The first is what
"transport" to use for the communication. The second is what
"synchronization" model to use when executing future multi-signer
processes.</t>

<t>The two defined transport alternatives are:</t>

<t><list style="symbols">
  <t>DNS-based communication (mandatory to support)</t>
  <t>REST API-based communication</t>
</list></t>

<t>Each has pros and cons and at this point in time it is not clear that
one always is better than the other. To simplify the choice of
transport DNS-based communication is mandatory to support and the REST
API-based communication may only be used if all MSAs support
it. Supported transports are signaled in the Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>The two defined synchronization alternatives are:</t>

<t><list style="symbols">
  <t>Leader/Follower synchronization (mandatory to support)</t>
  <t>Peer-to-Peer synchronization</t>
</list></t>

<t>Just as for transport, supported synchronization models are signaled
in the Multi-Signer EDNS(0) Option (see section NNN below).</t>

<t>Regardless of the synchronization model and communication method used,
the MSAs SHOULD exchange all needed information about the zone and the
DNS Provider they represent to enable the multi-signer processes to
execute correctly. This includes notifications about changes to
DNSKEYs, changes to the NS RRset, etc. Depending on synchronization
model it may also include instructions for changes to the zone.</t>

<t>## MSA Communication via DNS</t>

<t>This transport alternative is based on the observation that all the
communication needs between MSAs can be expressed via DNS
messages. Notifications are sent as DNS NOTIFY messages. Requests for
changes to a zone are sent as DNS UPDATE messages, etc. The sole
remaining communication requirement is for how to communicate
information about the current state between MSAs in an ongoing
multi-signer process. For this reason a dedicated EDNS(0) opcode
specifically for multi-signer synchronization is proposed.</t>

<t>This model is based on <xref target="!draft-berra…"/> that solves a similar problem
for delegation synchronization between child and parent, which has
already been implemented and shown to work.</t>

<section anchor="msa-communication-via-rest-api"><name>MSA Communication via REST API</name>

<t>REST APIs are well-known and a natural fit for many distributed
systems. The challenge is mostly in the initial setup of secure
communication. The certificates need to be validated, preferably
without a requirement on trusting a third party CA. The API endpoints
for each MSA need to be located. Once secure communication has been
established, using a REST API for MSA communication is
straight-forward.</t>

</section>
<section anchor="locating-remote-multi-signer-agents"><name>Locating Remote Multi-Signer Agents</name>

<t>When an MSA receives a zone via zone transfer from the signer it will
analyze the zone to see whether it contains an HSYNC RRset. If there
is no HSYNC RRset the zone MUST be ignored by the MSA from the
point-of-view of multi-signer synchronization.</t>

<t>If, however, the zone does contain an HSYNC RRset then the MSA must
analyze this RRset to identify the other MSAs for the zone via their
target names in each HSYNC record. If any of the other MSAs listed in
the HSYNC RRset is previously unknown to this MSA then secure
communication with this other MSA must be established.</t>

<t>Secure communication can be achieved via various transports and it is
up to the MSAs in the zone's HSYNC records to determine amongst
themselves. In this document we propose two transports: DNS and
API. We also establish DNS as a baseline that MSAs MUST support to be
compliant.</t>

<t>In the following two subsections we detail how an MSA can locate a
remote MSA and establish secure DNS-based and API-based
communications, respectively.</t>

<section anchor="locating-a-remote-dns-method-multi-signer-agent"><name>Locating a Remote DNS-Method Multi-Signer Agent</name>

<t>Locating a remote MSA using the DNS mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate a URI record for the HSYNC identity.
This provides the domain name and port to which DNS messages should
be sent.</t>
  <t>Lookup and DNSSEC-validate the SVCB record of the URI record target
to get the IP addresses to use for communication with the remote
MSA.</t>
  <t>Lookup and DNSSEC-validate the KEY record of the URI record target
name.  This enables verification of the SIG(0) public key of the
remote MSA once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote MSA:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>The local MSA will look up the URI record for msa.provider.com:</t>

<t>_dns._tcp.msa.provider.com.  IN  URI  10 10 “dns://ns.msa.provider.com:5399/”
_dns._tcp.msa.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for ns.msa.provider.com. SVCB to get the IPv4
and IPv6 addresses as ipv4hints and ipv6hints in the response to the
SVCB query:</t>

<t>ns.msa.provider.com.   IN  SVCB  1 ipv4hint=5.6.7.8 ipv6hint=2001::53
ns.msa.provider.com.   IN RRSIG SVCB …</t>

<t>and also a look up for the KEY record for ns.msa.provider.com, which
may look like this:</t>

<t>ns.msa.provider.com.  IN KEY …
ns.msa.provider.com.  IN RRSIG KEY …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local MSA is able to initiate communication with
the remote MSA and verify the identity of the responding party via the
validated KEY record for the remote MSAs SIG(0) public key.</t>

</section>
<section anchor="locating-a-remote-api-method-multi-signer-agent"><name>Locating a Remote API-Method Multi-Signer Agent</name>

<t>Locating a remote MSA using the API mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate the URI record for for the HTTPS protocol
for the HSYNC identity. This provides the base URL that will be used
to construct the individual API endpoints for the REST API. It also
provides the port to use.</t>
  <t>Lookup and DNSSEC-validate the SVCB record for the URI record
target.  This provides the IP-addresses to use for communication
with the MSA.</t>
  <t>Lookup and DNSSEC-validate the TLSA record for the port and protocol
specified in the URI record. This will enable verification of the
certificate of the remote MSA once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote MSA:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>the local MSA will look up the URI record for msa.provider.com:</t>

<t>_https._tcp.msa.provider.com.  IN  URI  10 10 “https://api.msa.provider.com:443/api/v2/”
_https._tcp.msa.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for api.msa.provider.com IPv4 and IPv6
addresses as hints in an SVCB RR:</t>

<t>api.msa.provider.com.   IN  SVCB 1 ipv4hint=1.2.3.4 ipv6hint=2001::bad:cafe:443
api.msa.provider.com.   IN  RRSIG SVCB …</t>

<t>Now we know the IP-address and the port as well as the base URL to
use. Finally the TLSA record for _443._tcp.api.msa.provider.com is
looked up, with a response that may look like this:</t>

<t>_443._tcp.api.msa.provider.com.  IN  TLSA 3 1 1 ….
  _443._tcp.api.msa.provider.com.  IN  RRSIG TLSA …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local MSA is able to initiate communication with
the remote MSA and verify the identity of the responding party via the
TLSA record for the remote MSAs certificate.</t>

<section anchor="fallback-to-dns-based-communication"><name>Fallback to DNS-based Communication</name>

<t>If the API-based communication fails, either because needed DNS
records are missing, the TLSA record fails to validate the remote MSAs
certificate or the remote MSA simply doesn't respond, the local MSA
MUST fall back to DNS-based communication.</t>

</section>
</section>
</section>
<section anchor="the-initial-hello-phase"><name>The Initial HELLO Phase</name>

<t>When two MSAs need to communicate with each other for the first time
(because they are both deisgnated signers for the same zone), they
need to establish secure communication. This is done in a "HELLO"
phase where the MSAs exchange information about their capabilities.</t>

<section anchor="dns-based-hello-phase"><name>DNS-based HELLO Phase</name>

<t>When using DNS-based communication the HELLO phase is done by sending
a NOTIFY(SOA) for the zone that triggered the need for
communication. The NOTIFY message MUST contain a Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>In the Multi-Signer EDNS(0) Option the OPERATION field MUST have the
value "HELLO" (1). Furthermore, the MSA signals its transport and
synchronization capabilities in the TRANSPORT and SYNCHRONIZATION
fields. This message is signed with the SIG(0) key for the local MSA
for which the public key is published as a KEY record for the MSA.</t>

<t>In the response to the NOTIFY, the remote MSA does the same and the
two MSAs can now verify each other's identity and are also aware of
the other MSAs transport and synchronization capabilities.</t>

</section>
<section anchor="api-based-hello-phase"><name>API-based HELLO Phase</name>

<t>When using API-based communication the HELLO phase is done by sending
a REST API POST request to the remote MSA at the "/hello"
endpoint. The request MUST contain a JSON encoded object with the
following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the local MSA.</t>
  <t>"synchronization": The synchronization capabilities of the local MSA.</t>
</list></t>

<t>The response MUST contain a JSON object with the following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the remote MSA.</t>
  <t>"synchronization": The synchronization capabilities of the remote MSA.</t>
</list></t>

</section>
<section anchor="interpretation-of-the-hello-responses"><name>Interpretation of the HELLO Responses</name>

<t>Once an MSA has received HELLO responses from all other MSAs that are
designated signers for the zone, it knows the capabilities of the MSAs
as a group. It can then use this information to determine which
transport to use:</t>

<t><list style="symbols">
  <t>If all MSAs support API-based communication, the MSAs will use
API-based communication.</t>
  <t>If one or more MSAs only support DNS-based communication, the MSAs
will use DNS-based communication for this zone.</t>
</list></t>

<t>Likewise, each MSA now knows the synchronization capabilities of the
other MSAs and can determine which synchronization model to use:</t>

<t><list style="symbols">
  <t>If all MSAs support the Peer-to-Peer synchronization model, the MSAs
will use the Peer-to-Peer synchronization model for this zone.</t>
  <t>If one or more MSAs only support the Leader/Follower synchronization
model, the MSAs will use the Leader/Follower synchronization model
for this zone.</t>
</list></t>

</section>
</section>
<section anchor="multi-signer-edns0-option-format"><name>Multi-Signer EDNS(0) Option Format</name>

<t>This document uses an Extended Mechanism for DNS (EDNS0) <xref target="RFC6891"/>
option to include Key State information in DNS messages. The option is
structured as follows:</t>

<figure><artwork><![CDATA[
                                               1   1   1   1   1   1 
       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5 
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 0:  |                            OPTION-CODE                        |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 2:  |                           OPTION-LENGTH                       |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 4:  |           OPERATION           |           TRANSPORT           |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 8:  |        SYNCHRONIZATION        |                               /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 
 10: / OPERATION-BODY                                                /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>Field definition details:</t>

<t>OPTION-CODE:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains the value TBD
    for KeyState.</t>

<t>OPTION-LENGTH:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains
    the length of the payload (everything after OPTION-LENGTH) in
    octets and should be 3 plus the length of the EXTRA-TEXT field
    (which may be zero octets long).</t>

<t>OPERATION:
    8 bits. Signals the type of operation the message
    performs. This document defines the two operations HELLO and
    HEARTBEAT. For a complete distributed multi-signer specification a
    number of additional operations will need to be specified, either
    in a revision to this document or in a subsequent document.</t>

<t>TRANSPORT:
    8 bits. Encodes the transport capabilities of the MSA. With
    8 bits it is possible to define up to 8 different transports of
    which this document defines two: DNS and API.</t>

<t>SYNCHRONIZATION:
    8 bits. Encodes the synchronization capabilities of
    the MSA. With 8 bits it is possible to define up to 8 different
    synchronization models of which this document defines two:
    Leader/Follower and Peer-to-Peer.</t>

<t>OPERATION-BODY:
    Variable-length. Used to carry operation-specific parameters.</t>

<section anchor="encoding-transport-capabilities-in-the-multi-signer-edns0-option"><name>Encoding Transport Capabilities in the Multi-Signer EDNS(0) Option</name>

<t>An MSA signals the union of its transport capabilities by setting the
corresponding bits to 1.</t>

<t>0: DNS transport supported (baseline, MUST be supported by all MSAs)</t>

<t>1: API transport supported</t>

<t>2: unused</t>

<t>3: unused</t>

<t>4: unused</t>

<t>5: unused</t>

<t>6: unused</t>

<t>7: unused</t>

</section>
<section anchor="encoding-synchronization-capabilities-in-the-multi-signer-edns0-option"><name>Encoding Synchronization Capabilities in the Multi-Signer EDNS(0) Option</name>

<t>An MSA signals its synchronization capabilities by setting the corresponding
bits to 1.</t>

<t>0: Leader/Follower synchronization supported (baseline, MUST be
   supported by all MSAs)</t>

<t>1: Peer-to-Peer synchronization supported</t>

<t>2: unused</t>

<t>3: unused</t>

<t>4: unused</t>

<t>5: unused</t>

<t>6: unused</t>

<t>7: unused</t>

</section>
</section>
</section>
<section anchor="sequence-diagram-example-of-establishing-secure-comms-the-hello-phase"><name>Sequence Diagram Example of Establishing Secure Comms - "The Hello Phase"</name>

<t>The procedure of locating another MSA and establishing a secure
communication, referred to as "The Hello Phase" is examplified in the
sequence diagram below.</t>

<t>The procedure is as follows:</t>

<t><list style="numbers">
  <t>The multisigner agents receive a zone via zone transfer. By
analyzing the HSYNC RRset each MSA become aware of the identities
of the other MSAs for the zone. I.e. each MSA knows which other
MSAs it needs to communicate with.  Communication with each of
these, previously unknown, remote MSAs is referred to as "NEEDED".</t>
  <t>Each MSA starts aquiring the information needed to establish secure
communications with any previously unknown MSAs. Here we only
illustrate the baseline case where DNS-based communications is to
be used in the following phase. Once all needed information has
been collected the communication with this remote MSA is considered
to be "KNOWN".</t>
  <t>Once an MSA has received the required information (URI, SVCB and
KEY records in the baseline case) it sends a NOTIFY message with a
dedicated Multi-Signer OPT code with OPERATION="HELLO". The sender
uses this OPT field to signal its transport and synchronization
capabilities. Similarly, the responder signals its capabilities
using the same field.</t>
  <t>When an MSA either gets a NOERROR response to its NOTIFY OPT(hello)
message or responds with a NOERROR, it transitions out of "The
Hello Phase" with the exchanging party and they transition to the
next phaste where they start sending NOTIFY OPT(heartbeat) signals
instead. The communication with the remote MSA is now considered to
be in the "OPERATIONAL" state.</t>
</list></t>

<t>In the case where one MSA is aware of the need to communicate with
another MSA, but the other is not (eg. the zone transfer was dealyed
for one of them), the slower one SHOULD respond with a RCODE=REFUSED
to any NOTIFY OPT(hello) it receives. Once it is ready, it will send
its own NOTIFY OPT(hello) which should be responded to with a
RCODE=NOERROR.</t>

<figure><artwork><![CDATA[
+----------+                 +----------+                        +----------+
|  Owner   |                 |  MSA A   |                        |  MSA B   |
+----------+                 +----------+                        +----------+
     |                            |                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |--------------------------->|                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |---------------------------------------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  QUERY _dns._tcp.msa-b.se. URI?    |
     |                            |----------------------------------->|
     |                            |  QUERY ns.msa-b.se. SVCB?          |
     |                            |----------------------------------->|
     |                            |  QUERY ns.msa-b.se. KEY?           |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(hello)     |
     |                            |----------------------------------->|
     |                            |  NOERROR sign-me.se. OPT(hello)    |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |                                    |

]]></artwork></figure>

</section>
<section anchor="synchronization-of-changes-between-msas"><name>Synchronization of Changes Between MSAs</name>

<t>There are two defined models for synchronization. The first
(Leader/Follower) has the advantage of more clearly mapping to the
original multi-signer model 2, with a single controller. The second
model has the advantage of less total communication between MSAs
(including no elections) but the potential disadvantage of more fine
grained communication during the execution of a multi-signer process.</t>

<t>At this stage it is not clear that one model is superior to the other.</t>

<section anchor="leaderfollower-mode"><name>Leader/Follower Mode</name>

<t>In a leader/follower deployment, a designated multi-signer agent
assumes the role of a leader, directing other agents, or followers,
through the multi-signer process state transitions. In this mode it is
necessary to conduct “elections” where one of the MSAs is chosen as
the Leader before initiating a new multi-signer process. Once the
Leader has been chosen, this model is mostly equivalent to the
original multi-signer “model 2”, with a single controller. The other
MSAs (the followers) essentially become proxies between the controller
(the Leader) and the signers.</t>

</section>
<section anchor="peer-mode"><name>Peer Mode</name>

<t>In peer mode, the MSAs still need to locate each other, but instead of
relying on trust in each other, each multi-signer agent operates
independently as a peer. I.e. each MSA executes each step in the
multi-signer process on its own. The communication is essentially
reduced to a notification mechanism (“I am now in state N”), although
authenticated to avoid having the contents of this communication
become an attack vector for an adversary.</t>

</section>
</section>
<section anchor="responsibilities-of-an-msa"><name>Responsibilities of an MSA</name>

<t>For a group of MSAs to be able to communicate securely and synchronize
data for a zone, each MSA must:</t>

<t><list style="symbols">
  <t>Publish the DNS records needed for secure communication with other
MSAs:
  <list style="symbols">
      <t>URI, SVCB and KEY records required for DNS-based communication
secured by SIG(0).</t>
      <t>URI, SVCB and TLSA records required for API-based communication
secured by TLS (if supported).</t>
      <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the identity of the MSA.</t>
    </list></t>
  <t>For each zone that is managed, publish the data needed for
synchronization with other MSAs:
  <list style="symbols">
      <t>The DNSKEY RRset for the zone consisting of the DNSKEYS that the
local signer uses to sign the zone.</t>
      <t>The CDS RRset for the zone, representing the KSK that the local
signer uses to sign the zone (when needed).</t>
      <t>The NS RRset for the zone, consisting of the NS records of the
authoritative nameserver that the local signer distributes the
signed zone to.</t>
      <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the concatenation of the zone name and the
identity of the MSA. Example for the zone "zone.example" and the
MSA "msa.provider":</t>
    </list></t>
</list></t>

<t>zone.example.msa.provider. IN DNSKEY ...
zone.example.msa.provider. IN NS ...</t>

</section>
<section anchor="migration-from-single-signer-to-multi-signer"><name>Migration from Single-Signer to Multi-Signer</name>

<t>The migration from a single-signer to a multi-signer architecture is
done by adding the HSYNC RRset to the zone. However, this may be done
in several steps.</t>

<section anchor="adding-a-single-hsync-record-to-an-already-signed-zone"><name>Adding a single HSYNC record to an already signed zone</name>

<t>Adding a single HSYNC record to a zone that is already signed by the
DNS provider "provider.com" with NSMGMT=OWNER is a no-op that does not
change anything:</t>

<t>zone.example. IN HSYNC  ON  AGENT  YES  msa.provider.com.</t>

<t>The zone was already signed by the DNS provider "provider.com" and the
provider added any needed DNSSEC records, including DNSKEYs. The zone
NS RRset was managed by the zone owner. All of this is unchanged by
the addition of the HSYNC RRset.</t>

</section>
<section anchor="changing-the-hsync-nsmgmt-field-from-agent-to-owner"><name>Changing the HSYNC NSMGMT Field from AGENT To OWNER</name>

<t>In a multi-signer architecture each MSA publishes the data it
contributes to the zone under the domain name
{zone}.{identity}. I.e. the zone DNSKEYs that the MSA
msa.provider. uses are published as</t>

<t>zone.example.msa.provider. DNSKEY ...
zone.example.msa.provider. DNSKEY ...</t>

<t>Likewise, the NS records for the zone are published as</t>

<t>zone.example.ns.msa.provider. NS ...
zone.example.ns.msa.provider. NS ...</t>

<t>To migrate from "owner maintained" NS RRset to "MSA maintained", the
zone owner must verify that the NS RRset as published by the MSA is
correct and in sync with the NS RRset as published by the zone owner
itself.  After this verification the zone owner changes the HSYNC
NSMGMT field in the existing HSYNC record from NSMGMT=OWNER to
NSMGMT=AGENT.</t>

</section>
<section anchor="migrating-from-a-multi-signer-architecture-back-to-single-signer"><name>Migrating from a Multi-Signer Architecture Back to Single-Signer.</name>

<t>If for some reason a zone owner wants to migrate back to a
single-signer architecture, the process is essentially the reverse of
the migration from single-signer to multi-signer:</t>

<t><list style="numbers">
  <t>The zone owner offboards all MSAs but one (the one that will be the
single-signer)</t>
  <t>The zone owner must verify that the NS RRset it publishes (in the
unsigned zone) is correct and in sync with the NS RRset as
published by the remaining MSA.</t>
  <t>The zone owner changes the HSYNC NSMGMT field in the HSYNC record
from NSMGMT=MSA to NSMGMT=OWNER.</t>
</list></t>

<t>The zone is now essentially back to a single-signer architecture.
The remaining HSYNC record may be removed from the zone.</t>

<t>TO BE REMOVED BEFORE PUBLICATION:
# Rationale</t>

</section>
<section anchor="choice-of-the-hsync-mnemonic"><name>Choice of the HSYNC Mnemonic</name>

<t>Initially the mnemonic MSIGNER was used for the HSYNC RRset. However,
as work progressed it became clear that we want also non-signing DNS
Providers to be able to participate. So the RRset is a signalling
mehanism from zone owner to DNS Providers, some of which may or may
not be instructed to sign the zone. Therefore we suggest the mnemonic
HSYNC to indicate that this is a mechanism for "horizontal
synchronization" inside a zone.</t>

<t>But the mnemonic chosen is a very minor point and should a better
suggestion come up it would be great.</t>

</section>
<section anchor="separation-of-msa-and-combiner"><name>Separation of MSA and COMBINER</name>

<t>It is possible to integrate all three multi-signer components (SIGNER,
MSA and COMBINER) into a single piece of software (or two pieces,
depending on the preferred way of slicing the functionality). However,
such a composite module would be a fairly complex piece of software.
This document aims to describe the functional separation of the
different components rather than make a judgement on software design
alternatives.  Hence possible implementation choices are left to the
implementer.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>Multi-signer is a complex system with a number of components and a
significant amount of automation. The authors believe that the only
way to make a multi-signer architecture useful in practice is via
automation. However, automation is a double-edged sword. It can both
make the system more robust and more vulnerable.</t>

<t>While all communication between MSAs is authenticated (either via
SIG(0) signatures ore TLS), the signalling from the zone owner to the
MSAs is via the HSYNC RRset in an unsigned zone. This is a potential
attack vector. However, securing zone transfers from zone owner to DNS
providers is a well-known issue with lots of existing solutions (TSIG,
zone transfer via a secure channel, zone transfer-over-TLS,
etc). Employing some of these solutions is strongly recommended.</t>

<t>From a vulnerability point-of-view this architecture introduces
several new components into the zone signing and publication
process. In particular the COMBINER and the MSAs are new components
that need to be secure. The COMBINER has the advantage of not having
to announce its location to the outside world, as it only needs to
communicate with internal components (the zone owner, the signer and
the MSA).</t>

<t>The MSAs are more vulnerable. They need to be discoverable by other
MSAs and hence they are also discoverable by an adversary. On the
other hand, the MSAs are not needed for a new zone to signed and
published, they are only needed when there are changes that require
the MSAs to synchronize, which is an infrequent event. Furthermore,
should an MSA be unable to fulfill its role during the execution of a
multi-signer process, the multi-signer process will simply stop where
it is. Regardless of where the stop (or rather pause) occurs, the zone
will be fully functional and once the MSA is able to resume its role,
the multi-signer process will continue from where it left off.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations.</name>

<section anchor="new-multi-signer-edns-option"><name>New Multi-Signer EDNS Option</name>

<t>This document defines a new EDNS(0) option, entitled "Multi-Signer",
assigned a value of TBD "DNS EDNS0 Option Codes (OPT)" registry</t>

<t>TO BE REMOVED UPON PUBLICATION: 
<eref target="foo">https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11</eref></t>

<figure><artwork><![CDATA[
   +-------+--------------------+----------+----------------------+
   | Value | Name               | Status   | Reference            |
   +-------+--------------------+----------+----------------------+
   | TBD   | Multi-Signer       | Standard | ( This document )    |
   +-------+--------------------+----------+----------------------+
]]></artwork></figure>

</section>
<section anchor="a-new-registry-for-edns-option-multi-signer-operation-codes"><name>A New Registry for EDNS Option Multi-Signer Operation Codes</name>

<t>The Multi-Signer option also defines an 8-bit operation field, for
which IANA is requested to create and mainain a new registry entitled
"Multi-Signer Operations", used by the Multi-Signer option. Initial
values for the "Multi-Signer Operations" registry are given below;
future assignments in in the 3-127 range are to be made through
Specification Required review <xref target="BCP26"/>.</t>

<figure><artwork><![CDATA[
+-----------+---------------------------------------------+-------------------+
| OPERATION | Mnemonic                                    | Reference         |
+-----------+---------------------------------------------+-------------------+
| 0         | forbidden                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 1         | HELLO                                       | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 2         | HEARTBEAT                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 3-127     | Unassigned                                  | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 128-255   | Private Use                                 | ( This document ) |
+-----------+---------------------------------------------+-------------------+
]]></artwork></figure>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8901' target='https://www.rfc-editor.org/info/rfc8901'>
  <front>
    <title>Multi-Signer DNSSEC Models</title>
    <author fullname='S. Huque' initials='S.' surname='Huque'/>
    <author fullname='P. Aras' initials='P.' surname='Aras'/>
    <author fullname='J. Dickinson' initials='J.' surname='Dickinson'/>
    <author fullname='J. Vcelak' initials='J.' surname='Vcelak'/>
    <author fullname='D. Blacka' initials='D.' surname='Blacka'/>
    <date month='September' year='2020'/>
    <abstract>
      <t>Many enterprises today employ the service of multiple DNS providers to distribute their authoritative DNS service. Deploying DNSSEC in such an environment may present some challenges, depending on the configuration and feature set in use. In particular, when each DNS provider independently signs zone data with their own keys, additional key-management mechanisms are necessary. This document presents deployment models that accommodate this scenario and describes these key-management requirements. These models do not require any changes to the behavior of validating resolvers, nor do they impose the new key-management requirements on authoritative servers not involved in multi-signer configurations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8901'/>
  <seriesInfo name='DOI' value='10.17487/RFC8901'/>
</reference>

<reference anchor='RFC1996' target='https://www.rfc-editor.org/info/rfc1996'>
  <front>
    <title>A Mechanism for Prompt Notification of Zone Changes (DNS NOTIFY)</title>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='August' year='1996'/>
    <abstract>
      <t>This memo describes the NOTIFY opcode for DNS, by which a master server advises a set of slave servers that the master's data has been changed and that a query should be initiated to discover the new data. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1996'/>
  <seriesInfo name='DOI' value='10.17487/RFC1996'/>
</reference>

<reference anchor='RFC2136' target='https://www.rfc-editor.org/info/rfc2136'>
  <front>
    <title>Dynamic Updates in the Domain Name System (DNS UPDATE)</title>
    <author fullname='P. Vixie' initials='P.' role='editor' surname='Vixie'/>
    <author fullname='S. Thomson' initials='S.' surname='Thomson'/>
    <author fullname='Y. Rekhter' initials='Y.' surname='Rekhter'/>
    <author fullname='J. Bound' initials='J.' surname='Bound'/>
    <date month='April' year='1997'/>
    <abstract>
      <t>Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone. Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2136'/>
  <seriesInfo name='DOI' value='10.17487/RFC2136'/>
</reference>

<reference anchor='RFC3007' target='https://www.rfc-editor.org/info/rfc3007'>
  <front>
    <title>Secure Domain Name System (DNS) Dynamic Update</title>
    <author fullname='B. Wellington' initials='B.' surname='Wellington'/>
    <date month='November' year='2000'/>
    <abstract>
      <t>This document proposes a method for performing secure Domain Name System (DNS) dynamic updates. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='3007'/>
  <seriesInfo name='DOI' value='10.17487/RFC3007'/>
</reference>

<reference anchor='RFC2931' target='https://www.rfc-editor.org/info/rfc2931'>
  <front>
    <title>DNS Request and Transaction Signatures ( SIG(0)s )</title>
    <author fullname='D. Eastlake 3rd' initials='D.' surname='Eastlake 3rd'/>
    <date month='September' year='2000'/>
    <abstract>
      <t>This document describes the minor but non-interoperable changes in Request and Transaction signature resource records ( SIG(0)s ) that implementation experience has deemed necessary. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2931'/>
  <seriesInfo name='DOI' value='10.17487/RFC2931'/>
</reference>

<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC6891' target='https://www.rfc-editor.org/info/rfc6891'>
  <front>
    <title>Extension Mechanisms for DNS (EDNS(0))</title>
    <author fullname='J. Damas' initials='J.' surname='Damas'/>
    <author fullname='M. Graff' initials='M.' surname='Graff'/>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='April' year='2013'/>
    <abstract>
      <t>The Domain Name System's wire protocol includes a number of fixed fields whose range has been or soon will be exhausted and does not allow requestors to advertise their capabilities to responders. This document describes backward-compatible mechanisms for allowing the protocol to grow.</t>
      <t>This document updates the Extension Mechanisms for DNS (EDNS(0)) specification (and obsoletes RFC 2671) based on feedback from deployment experience in several implementations. It also obsoletes RFC 2673 ("Binary Labels in the Domain Name System") and adds considerations on the use of extended labels in the DNS.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='75'/>
  <seriesInfo name='RFC' value='6891'/>
  <seriesInfo name='DOI' value='10.17487/RFC6891'/>
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.draft-ietf-dnsop-dnssec-automation' target='https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-dnssec-automation-03'>
   <front>
      <title>DNSSEC automation</title>
      <author fullname='Ulrich Wisser' initials='U.' surname='Wisser'>
         </author>
      <author fullname='Shumon Huque' initials='S.' surname='Huque'>
         <organization>Salesforce</organization>
      </author>
      <author fullname='Johan Stenstam' initials='J.' surname='Stenstam'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <date day='19' month='October' year='2024'/>
      <abstract>
	 <t>   This document describes an algorithm and protocol to automate the
   setup, operations, and decomissioning of Multi-Signer DNSSEC
   [RFC8901] configurations.  It employs Model 2 of the multi-signer
   specification, where each operator has their own distinct KSK and ZSK
   sets (or CSK sets), Managing DS Records from the Parent via CDS/
   CDNSKEY [RFC8078], and Child-to-Parent Synchronization in DNS
   [RFC7477] to accomplish this.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-dnsop-dnssec-automation-03'/>
   
</reference>

<referencegroup anchor='BCP26' target='https://www.rfc-editor.org/info/bcp26'>
  <reference anchor='RFC8126' target='https://www.rfc-editor.org/info/rfc8126'>
    <front>
      <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
      <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
      <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
      <author fullname='T. Narten' initials='T.' surname='Narten'/>
      <date month='June' year='2017'/>
      <abstract>
        <t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters. To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper. For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
        <t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed. This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
        <t>This is the third edition of this document; it obsoletes RFC 5226.</t>
      </abstract>
    </front>
    <seriesInfo name='BCP' value='26'/>
    <seriesInfo name='RFC' value='8126'/>
    <seriesInfo name='DOI' value='10.17487/RFC8126'/>
  </reference>
</referencegroup>




    </references>


<section anchor="change-history-to-be-removed-before-publication"><name>Change History (to be removed before publication)</name>

<t><list style="symbols">
  <t>draft-leon-distributed-multi-signer-00</t>
</list></t>

<ul empty="true"><li>
  <t>Initial public draft.</t>
</li></ul>

</section>


  </back>

<!-- ##markdown-source:
H4sIABPIpWcAA+1963Ib17Xm//0UPfCPkBYAiZKvnOPkUBJlM5ZIHZJKjpOT
STWABtkR0I3pbpCCLaX8GlOV+TuPMC8wb+InmfWttfatu0FSsZxJnRpW5JBA
976sve63PRqNTJM3i2w/GTzN66bKJ+smmyVPj8/ODp8kL9aLJh+d5RdFViWP
y7KhJ9LVwKSTSZVdtd7Z9vCsnBbpkmaYVem8GS2yshjN/HujJb9X83ujBw/M
LG3o4R+eHpwfvjNT+uOirDb7Sd3MjMlX1X7SVOu6efjgwZcPHpq0ytL95Kho
sqrIGnNdVq8vqnK92scWTl4mv6cP8uIi+RofmtfZhp6Y+RdGT7EmY+omLWZ/
ThdlQVNvstqs8v3kj005HSZ1WTVVNq/pt80Sv/zJmHTdXJbVvklGJqGfvKj3
k+fj5BmNSeNk3/OnsunntN3WF2V1kRb592mTl8V+cn6ZJWfXGUHk0i0reVau
ixk/wG9M6c8GQMCDmXyWLdN8sZ8AnOO5Hf9fcx2hbvJ5ky3qrBjXWbTOw3Hy
OKsuCP7/538vg4UeVvnr9jcfdKUZTTCeyATl8g4r/e04OWuygs4mXOdvy8u0
iL/4oMv8C8Yf1zr+HZZ5Nk6eVOX0dVYFq6T1XWXR5/EiD2cX2bIsq+Q0q7O0
mmKpNEVDFBEv8FWRg7jOGiKEOlxnjRn+tb7Mi9frqhxPy6UxRVktaYKrbJ9I
pZgHf41GoySdgCKnhO4fJQfu9/PLvE6IRtfLrGiSVUXrKZo6IRhjWTT5tFlX
WUKDJWky6/AIE5Jvsixn2SJpLtOGfq2bZLoo62yxSTDqcrLI6mQgjzwcEPDM
Dz/8l9NnT7748sHeu3djY46aZJbN84Iea67LJBq5XmXTfJ5PE1pd3uQZAb6h
gx6ED5n0gr4dJDsvzg52ZRW0N5p7VRZ1TtPzLvBaNPSKTimrseUZvjQDguWE
VlENhsn1ZU5n0zOKPkS8ZZCsCx5plnxP/CMhNEvNnFCcZ+KPymvMc503l/4R
emtGH05LOudykZRzfpxWPk6OGjo9+nS2pnUR1IvsGtBOTk+bzSobJt+cfXf8
ZOg2uK5p6smmPV1TmlmGhRHm8HfTSzqMgkd6WZVXOU1fJzt4AhySdn+f9lVn
1RX+BCAw2C6xtXVFf1XLktAgxxHVU8IBXtkymxK15PXSQZY2QKdXJhlRz2RB
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

-->

</rfc>

